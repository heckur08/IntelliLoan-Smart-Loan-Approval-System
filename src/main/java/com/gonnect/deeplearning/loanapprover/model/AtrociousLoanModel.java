package org.gradle;

/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2019-02-02T00:54:36.409+01:00
  3.22.1.3
  
  Standalone prediction code with sample test data for GBMModel named AtrociousLoanModel

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://192.168.1.20:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://192.168.1.20:54321/3/Models.java/AtrociousLoanModel > AtrociousLoanModel.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m AtrociousLoanModel.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="AtrociousLoanModel", algorithm="gbm")
public class AtrociousLoanModel extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Binomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 13; }
  public int nclasses() { return 2; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_AtrociousLoanModel.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 2;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* loan_amnt */ null,
    /* term */ AtrociousLoanModel_ColInfo_1.VALUES,
    /* emp_length */ null,
    /* home_ownership */ AtrociousLoanModel_ColInfo_3.VALUES,
    /* annual_inc */ null,
    /* purpose */ AtrociousLoanModel_ColInfo_5.VALUES,
    /* addr_state */ AtrociousLoanModel_ColInfo_6.VALUES,
    /* dti */ null,
    /* delinq_2yrs */ null,
    /* revol_util */ null,
    /* total_acc */ null,
    /* longest_credit_length */ null,
    /* verification_status */ AtrociousLoanModel_ColInfo_12.VALUES,
    /* bad_loan */ AtrociousLoanModel_ColInfo_13.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.8170605433061274,0.18293945669387257};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.8170605433061274,0.18293945669387257};

  public AtrociousLoanModel() { super(NAMES,DOMAINS,"bad_loan"); }
  public String getUUID() { return Long.toString(-1320930517000977904L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    AtrociousLoanModel_Forest_0.score0(data,preds);
    AtrociousLoanModel_Forest_1.score0(data,preds);
    AtrociousLoanModel_Forest_2.score0(data,preds);
    AtrociousLoanModel_Forest_3.score0(data,preds);
    AtrociousLoanModel_Forest_4.score0(data,preds);
    AtrociousLoanModel_Forest_5.score0(data,preds);
    AtrociousLoanModel_Forest_6.score0(data,preds);
    AtrociousLoanModel_Forest_7.score0(data,preds);
    AtrociousLoanModel_Forest_8.score0(data,preds);
    AtrociousLoanModel_Forest_9.score0(data,preds);
    AtrociousLoanModel_Forest_10.score0(data,preds);
    AtrociousLoanModel_Forest_11.score0(data,preds);
    AtrociousLoanModel_Forest_12.score0(data,preds);
    AtrociousLoanModel_Forest_13.score0(data,preds);
    AtrociousLoanModel_Forest_14.score0(data,preds);
    AtrociousLoanModel_Forest_15.score0(data,preds);
    AtrociousLoanModel_Forest_16.score0(data,preds);
    AtrociousLoanModel_Forest_17.score0(data,preds);
    AtrociousLoanModel_Forest_18.score0(data,preds);
    AtrociousLoanModel_Forest_19.score0(data,preds);
    AtrociousLoanModel_Forest_20.score0(data,preds);
    AtrociousLoanModel_Forest_21.score0(data,preds);
    AtrociousLoanModel_Forest_22.score0(data,preds);
    AtrociousLoanModel_Forest_23.score0(data,preds);
    AtrociousLoanModel_Forest_24.score0(data,preds);
    AtrociousLoanModel_Forest_25.score0(data,preds);
    AtrociousLoanModel_Forest_26.score0(data,preds);
    AtrociousLoanModel_Forest_27.score0(data,preds);
    AtrociousLoanModel_Forest_28.score0(data,preds);
    AtrociousLoanModel_Forest_29.score0(data,preds);
    AtrociousLoanModel_Forest_30.score0(data,preds);
    AtrociousLoanModel_Forest_31.score0(data,preds);
    AtrociousLoanModel_Forest_32.score0(data,preds);
    AtrociousLoanModel_Forest_33.score0(data,preds);
    AtrociousLoanModel_Forest_34.score0(data,preds);
    AtrociousLoanModel_Forest_35.score0(data,preds);
    AtrociousLoanModel_Forest_36.score0(data,preds);
    AtrociousLoanModel_Forest_37.score0(data,preds);
    AtrociousLoanModel_Forest_38.score0(data,preds);
    AtrociousLoanModel_Forest_39.score0(data,preds);
    AtrociousLoanModel_Forest_40.score0(data,preds);
    AtrociousLoanModel_Forest_41.score0(data,preds);
    AtrociousLoanModel_Forest_42.score0(data,preds);
    AtrociousLoanModel_Forest_43.score0(data,preds);
    AtrociousLoanModel_Forest_44.score0(data,preds);
    AtrociousLoanModel_Forest_45.score0(data,preds);
    AtrociousLoanModel_Forest_46.score0(data,preds);
    AtrociousLoanModel_Forest_47.score0(data,preds);
    AtrociousLoanModel_Forest_48.score0(data,preds);
    AtrociousLoanModel_Forest_49.score0(data,preds);
    AtrociousLoanModel_Forest_50.score0(data,preds);
    AtrociousLoanModel_Forest_51.score0(data,preds);
    AtrociousLoanModel_Forest_52.score0(data,preds);
    AtrociousLoanModel_Forest_53.score0(data,preds);
    AtrociousLoanModel_Forest_54.score0(data,preds);
    AtrociousLoanModel_Forest_55.score0(data,preds);
    AtrociousLoanModel_Forest_56.score0(data,preds);
    AtrociousLoanModel_Forest_57.score0(data,preds);
    AtrociousLoanModel_Forest_58.score0(data,preds);
    AtrociousLoanModel_Forest_59.score0(data,preds);
    AtrociousLoanModel_Forest_60.score0(data,preds);
    AtrociousLoanModel_Forest_61.score0(data,preds);
    AtrociousLoanModel_Forest_62.score0(data,preds);
    AtrociousLoanModel_Forest_63.score0(data,preds);
    AtrociousLoanModel_Forest_64.score0(data,preds);
    AtrociousLoanModel_Forest_65.score0(data,preds);
    AtrociousLoanModel_Forest_66.score0(data,preds);
    AtrociousLoanModel_Forest_67.score0(data,preds);
    AtrociousLoanModel_Forest_68.score0(data,preds);
    AtrociousLoanModel_Forest_69.score0(data,preds);
    AtrociousLoanModel_Forest_70.score0(data,preds);
    AtrociousLoanModel_Forest_71.score0(data,preds);
    AtrociousLoanModel_Forest_72.score0(data,preds);
    AtrociousLoanModel_Forest_73.score0(data,preds);
    AtrociousLoanModel_Forest_74.score0(data,preds);
    AtrociousLoanModel_Forest_75.score0(data,preds);
    AtrociousLoanModel_Forest_76.score0(data,preds);
    AtrociousLoanModel_Forest_77.score0(data,preds);
    AtrociousLoanModel_Forest_78.score0(data,preds);
    AtrociousLoanModel_Forest_79.score0(data,preds);
    AtrociousLoanModel_Forest_80.score0(data,preds);
    AtrociousLoanModel_Forest_81.score0(data,preds);
    AtrociousLoanModel_Forest_82.score0(data,preds);
    AtrociousLoanModel_Forest_83.score0(data,preds);
    AtrociousLoanModel_Forest_84.score0(data,preds);
    AtrociousLoanModel_Forest_85.score0(data,preds);
    AtrociousLoanModel_Forest_86.score0(data,preds);
    AtrociousLoanModel_Forest_87.score0(data,preds);
    AtrociousLoanModel_Forest_88.score0(data,preds);
    AtrociousLoanModel_Forest_89.score0(data,preds);
    AtrociousLoanModel_Forest_90.score0(data,preds);
    AtrociousLoanModel_Forest_91.score0(data,preds);
    AtrociousLoanModel_Forest_92.score0(data,preds);
    AtrociousLoanModel_Forest_93.score0(data,preds);
    AtrociousLoanModel_Forest_94.score0(data,preds);
    AtrociousLoanModel_Forest_95.score0(data,preds);
    AtrociousLoanModel_Forest_96.score0(data,preds);
    AtrociousLoanModel_Forest_97.score0(data,preds);
    AtrociousLoanModel_Forest_98.score0(data,preds);
    AtrociousLoanModel_Forest_99.score0(data,preds);
    preds[2] = preds[1] + -1.4965579361641295;
    preds[2] = 1./(1. + Math.min(1e19, Math.exp(-(preds[2]))));
    preds[1] = 1.0-preds[2];
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.2081053249680036);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_AtrociousLoanModel implements java.io.Serializable {
  public static final String[] VALUES = new String[13];
  static {
    NamesHolder_AtrociousLoanModel_0.fill(VALUES);
  }
  static final class NamesHolder_AtrociousLoanModel_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "loan_amnt";
      sa[1] = "term";
      sa[2] = "emp_length";
      sa[3] = "home_ownership";
      sa[4] = "annual_inc";
      sa[5] = "purpose";
      sa[6] = "addr_state";
      sa[7] = "dti";
      sa[8] = "delinq_2yrs";
      sa[9] = "revol_util";
      sa[10] = "total_acc";
      sa[11] = "longest_credit_length";
      sa[12] = "verification_status";
    }
  }
}
// The class representing column term
class AtrociousLoanModel_ColInfo_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    AtrociousLoanModel_ColInfo_1_0.fill(VALUES);
  }
  static final class AtrociousLoanModel_ColInfo_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "36 months";
      sa[1] = "60 months";
    }
  }
}
// The class representing column home_ownership
class AtrociousLoanModel_ColInfo_3 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    AtrociousLoanModel_ColInfo_3_0.fill(VALUES);
  }
  static final class AtrociousLoanModel_ColInfo_3_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "ANY";
      sa[1] = "MORTGAGE";
      sa[2] = "NONE";
      sa[3] = "OTHER";
      sa[4] = "OWN";
      sa[5] = "RENT";
    }
  }
}
// The class representing column purpose
class AtrociousLoanModel_ColInfo_5 implements java.io.Serializable {
  public static final String[] VALUES = new String[14];
  static {
    AtrociousLoanModel_ColInfo_5_0.fill(VALUES);
  }
  static final class AtrociousLoanModel_ColInfo_5_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "car";
      sa[1] = "credit_card";
      sa[2] = "debt_consolidation";
      sa[3] = "educational";
      sa[4] = "home_improvement";
      sa[5] = "house";
      sa[6] = "major_purchase";
      sa[7] = "medical";
      sa[8] = "moving";
      sa[9] = "other";
      sa[10] = "renewable_energy";
      sa[11] = "small_business";
      sa[12] = "vacation";
      sa[13] = "wedding";
    }
  }
}
// The class representing column addr_state
class AtrociousLoanModel_ColInfo_6 implements java.io.Serializable {
  public static final String[] VALUES = new String[50];
  static {
    AtrociousLoanModel_ColInfo_6_0.fill(VALUES);
  }
  static final class AtrociousLoanModel_ColInfo_6_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "AK";
      sa[1] = "AL";
      sa[2] = "AR";
      sa[3] = "AZ";
      sa[4] = "CA";
      sa[5] = "CO";
      sa[6] = "CT";
      sa[7] = "DC";
      sa[8] = "DE";
      sa[9] = "FL";
      sa[10] = "GA";
      sa[11] = "HI";
      sa[12] = "IA";
      sa[13] = "ID";
      sa[14] = "IL";
      sa[15] = "IN";
      sa[16] = "KS";
      sa[17] = "KY";
      sa[18] = "LA";
      sa[19] = "MA";
      sa[20] = "MD";
      sa[21] = "ME";
      sa[22] = "MI";
      sa[23] = "MN";
      sa[24] = "MO";
      sa[25] = "MS";
      sa[26] = "MT";
      sa[27] = "NC";
      sa[28] = "NE";
      sa[29] = "NH";
      sa[30] = "NJ";
      sa[31] = "NM";
      sa[32] = "NV";
      sa[33] = "NY";
      sa[34] = "OH";
      sa[35] = "OK";
      sa[36] = "OR";
      sa[37] = "PA";
      sa[38] = "RI";
      sa[39] = "SC";
      sa[40] = "SD";
      sa[41] = "TN";
      sa[42] = "TX";
      sa[43] = "UT";
      sa[44] = "VA";
      sa[45] = "VT";
      sa[46] = "WA";
      sa[47] = "WI";
      sa[48] = "WV";
      sa[49] = "WY";
    }
  }
}
// The class representing column verification_status
class AtrociousLoanModel_ColInfo_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    AtrociousLoanModel_ColInfo_12_0.fill(VALUES);
  }
  static final class AtrociousLoanModel_ColInfo_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "not verified";
      sa[1] = "verified";
    }
  }
}
// The class representing column bad_loan
class AtrociousLoanModel_ColInfo_13 implements java.io.Serializable {
  public static final String[] VALUES = new String[2];
  static {
    AtrociousLoanModel_ColInfo_13_0.fill(VALUES);
  }
  static final class AtrociousLoanModel_ColInfo_13_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "0";
      sa[1] = "1";
    }
  }
}

class AtrociousLoanModel_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_0_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <43731.246f ? 
             (data[9 /* revol_util */] <45.035156f ? 
                 (data[9 /* revol_util */] <26.03595f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.02361345f : 
                        -0.0060001225f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -0.0012776677f : 
                        0.05030817f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <24.99375f ? 
                     (!Double.isNaN(data[2]) ? 
                        0.013774029f : 
                        0.046479736f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.013723686f : 
                        0.054177817f))) : 
             (data[9 /* revol_util */] <48.0375f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.055626f ? 
                        -0.032589503f : 
                        -0.012189753f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.0017681587f : 
                        0.04983369f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <20.563126f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        -0.015789432f : 
                        0.032212194f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.0051991455f : 
                        0.011795424f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <71621.414f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <56.6125f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.003115304f : 
                        0.038981106f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        0.059348967f : 
                        0.1618113f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (data[4 /* annual_inc */] <45516.0f ? 
                        0.078359276f : 
                        0.049553495f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        0.08192259f : 
                        0.18305f))) : 
             (data[9 /* revol_util */] <66.21641f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <22853.5f ? 
                        -0.0062971534f : 
                        0.015400198f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        0.029319342f : 
                        0.095861286f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <30247.5f ? 
                        0.004714723f : 
                        0.041505292f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <20.496094f ? 
                        0.034962315f : 
                        0.058236532f)))));
    return pred;
  } // constant pool size = 231B, number of visited nodes = 31, static init size = 642B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10100000 01101000 01101000 11000000 11100010 01110100 01}
  public static final byte[] GRPSPLIT1 = new byte[] {5, 22, 22, 3, 71, 46, 2};
  // {00000001 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-128, 9, 0, 0};
  // {01101101 01001011 10101111 11101100 11110111 01101110 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-74, -46, -11, 55, -17, 118, 0};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {8, 8, 0, 0};
  // {00000000 11010010 00110000 00010100 10011010 00000000 00}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 75, 12, 40, 89, 0, 0};
  // {00010100 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {40, 12, 0, 0};
  // {01111000 01010011 01010010 01000011 11010010 01011001 00}
  public static final byte[] GRPSPLIT7 = new byte[] {30, -54, 74, -62, 75, -102, 0};
  // {00010000 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {8, 24, 0, 0};
  // {01011011 11111111 01111111 10011111 01110110 11111010 00}
  public static final byte[] GRPSPLIT9 = new byte[] {-38, -1, -2, -7, 110, 95, 0};
  // {10111100 00100010 10000010 00000011 00100100 10110010 10}
  public static final byte[] GRPSPLIT10 = new byte[] {61, 68, 65, -64, 36, 77, 1};
  // {01000000 01000000 11100000 10010100 01010000 11011110 00}
  public static final byte[] GRPSPLIT11 = new byte[] {2, 2, 7, 41, 10, 123, 0};
  // {00010100 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {40, 12, 0, 0};
  // {00000000 01011000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 26, 0, 0};
  // {00100001 00010011 01011000 10110000 00011001 01000101 00}
  public static final byte[] GRPSPLIT14 = new byte[] {-124, -56, 26, 13, -104, -94, 0};
  // {11101001 11111111 00101101 11011011 11100111 01100111 00}
  public static final byte[] GRPSPLIT15 = new byte[] {-105, -1, -76, -37, -25, -26, 0};
}


class AtrociousLoanModel_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_1_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <57676.33f ? 
             (data[9 /* revol_util */] <53.041405f ? 
                 (data[9 /* revol_util */] <26.106316f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.024819987f : 
                        -0.009698629f) : 
                     (data[4 /* annual_inc */] <40269.0f ? 
                        0.00610747f : 
                        -0.011413703f)) : 
                 (data[4 /* annual_inc */] <38498.344f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.95625f ? 
                        0.021779722f : 
                        0.047750376f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <25.580156f ? 
                        0.0021031764f : 
                        0.027993228f))) : 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <48.0375f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <22.095f ? 
                        -0.034965746f : 
                        -0.01859171f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.010900775f : 
                        0.040162012f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <24.243126f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                        -0.017032918f : 
                        0.037202626f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.010272996f : 
                        0.015963564f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <71621.414f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <48.01953f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        0.013206266f : 
                        0.03653294f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        0.04520519f : 
                        0.13699727f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <60132.0f ? 
                        0.05873005f : 
                        0.03522632f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        0.072785094f : 
                        0.124573395f))) : 
             (data[9 /* revol_util */] <57.11797f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.006468522f : 
                        0.013912995f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.025646724f : 
                        0.089246415f)) : 
                 (data[0 /* loan_amnt */] <22589.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        0.00861267f : 
                        0.034015615f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        0.029544925f : 
                        0.05834924f)))));
    return pred;
  } // constant pool size = 236B, number of visited nodes = 31, static init size = 660B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00100000 01001000 00100001 11010001 10011010 11110100 01}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 18, -124, -117, 89, 47, 2};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 8, 0, 0};
  // {00000010 11000010 00110000 00110000 11011000 00000000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {64, 67, 12, 12, 27, 0, 0};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {8, 8, 0, 0};
  // {01011000 01100111 11001111 01011011 11010110 01001100 11}
  public static final byte[] GRPSPLIT5 = new byte[] {26, -26, -13, -38, 107, 50, 3};
  // {00010000 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {8, 25, 0, 0};
  // {01010001 11101111 01100101 00011111 01100110 11111000 00}
  public static final byte[] GRPSPLIT7 = new byte[] {-118, -9, -90, -8, 102, 31, 0};
  // {11011111 10111101 10100110 11101111 00101101 11110110 10}
  public static final byte[] GRPSPLIT8 = new byte[] {-5, -67, 101, -9, -76, 111, 1};
  // {01000000 01000000 11100000 10010100 00010000 10001110 00}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 2, 7, 41, 8, 113, 0};
  // {00010100 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {40, 15, 0, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {0, 8, 0, 0};
  // {11100010 01010010 01110010 10000010 11000101 10010000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {71, 74, 78, 65, -93, 9, 0};
  // {10101111 11101111 01111101 11111100 01111011 11001111 01}
  public static final byte[] GRPSPLIT13 = new byte[] {-11, -9, -66, 63, -34, -13, 2};
  // {00000010 10110011 10001000 01010011 11000001 01100100 00}
  public static final byte[] GRPSPLIT14 = new byte[] {64, -51, 17, -54, -125, 38, 0};
  // {00100001 01110000 00100001 11100000 11110110 00010011 00}
  public static final byte[] GRPSPLIT15 = new byte[] {-124, 14, -124, 7, 111, -56, 0};
}


class AtrociousLoanModel_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_2_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <57676.33f ? 
             (data[9 /* revol_util */] <45.035156f ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <19.370155f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        -0.018551506f : 
                        0.008549182f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.0111523345f : 
                        0.010039288f)) : 
                 (data[4 /* annual_inc */] <40241.312f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.95625f ? 
                        0.016985556f : 
                        0.039106943f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.95625f ? 
                        -0.0017872389f : 
                        0.02215375f))) : 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <48.0375f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.034862805f : 
                        -0.021249365f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.015288094f : 
                        0.022948992f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <18.719376f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        -0.018931875f : 
                        0.03530938f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.011259846f : 
                        0.0033688296f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <71621.414f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <56.6125f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <19.94f ? 
                        0.019368267f : 
                        0.04277665f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        0.03502295f : 
                        0.08012878f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (data[4 /* annual_inc */] <45516.0f ? 
                        0.065314576f : 
                        0.041899357f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        0.067522414f : 
                        0.14118333f))) : 
             (data[9 /* revol_util */] <69.24922f ? 
                 (Double.isNaN(data[4]) || data[4 /* annual_inc */] <101598.67f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <22997.5f ? 
                        0.003693261f : 
                        0.032695003f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25606.5f ? 
                        -0.0141530745f : 
                        0.0074277255f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <30247.5f ? 
                        -0.007701083f : 
                        0.02785975f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        0.035432518f : 
                        0.10763608f)))));
    return pred;
  } // constant pool size = 209B, number of visited nodes = 31, static init size = 498B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00010001 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-120, 13, 0, 0};
  // {11001100 01000001 01000001 01011001 11100010 11011000 00}
  public static final byte[] GRPSPLIT2 = new byte[] {51, -126, -126, -102, 71, 27, 0};
  // {00000001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-128, 8, 0, 0};
  // {01000010 11100010 00110000 00100000 11001000 01000010 00}
  public static final byte[] GRPSPLIT4 = new byte[] {66, 71, 12, 4, 19, 66, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 8, 0, 0};
  // {01111010 01010010 10011010 01000011 11010110 01001000 10}
  public static final byte[] GRPSPLIT6 = new byte[] {94, 74, 89, -62, 107, 18, 1};
  // {00010000 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {8, 27, 0, 0};
  // {11001111 11111110 00100100 11101111 01100001 10110110 10}
  public static final byte[] GRPSPLIT8 = new byte[] {-13, 127, 36, -9, -122, 109, 1};
  // {01000000 01000000 11100000 10010100 01010000 01011110 00}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 2, 7, 41, 10, 122, 0};
  // {00010100 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {40, 12, 0, 0};
  // {11101101 11111111 00101111 11011011 11100111 01101111 00}
  public static final byte[] GRPSPLIT11 = new byte[] {-73, -1, -12, -37, -25, -10, 0};
  // {00010001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-120, 8, 0, 0};
}


class AtrociousLoanModel_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_3_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <57676.33f ? 
             (data[9 /* revol_util */] <53.041405f ? 
                 (data[9 /* revol_util */] <31.90772f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.019556692f : 
                        0.0013559826f) : 
                     (data[4 /* annual_inc */] <40269.0f ? 
                        0.008094304f : 
                        -0.009701722f)) : 
                 (data[4 /* annual_inc */] <37191.117f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        0.020197097f : 
                        0.0466432f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.95625f ? 
                        0.0019058336f : 
                        0.024887485f))) : 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <48.0375f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.3225f ? 
                        -0.032867044f : 
                        -0.014340528f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.009454938f : 
                        0.036968015f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <24.243126f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        -0.015778186f : 
                        0.03279156f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.007978447f : 
                        0.015688248f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <71621.414f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <48.01953f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.00292424f : 
                        0.028069913f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.049485292f : 
                        0.12899788f)) : 
                 (data[4 /* annual_inc */] <50214.0f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        0.04992664f : 
                        0.08034839f) : 
                     (data[0 /* loan_amnt */] <15344.5f ? 
                        0.022285827f : 
                        0.049226206f))) : 
             (data[9 /* revol_util */] <57.11797f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.0064804517f : 
                        0.012482924f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.003122722f : 
                        0.090264775f)) : 
                 (data[0 /* loan_amnt */] <22589.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        0.010779801f : 
                        0.03963031f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <106949.69f ? 
                        0.045479693f : 
                        0.019938083f)))));
    return pred;
  } // constant pool size = 231B, number of visited nodes = 31, static init size = 630B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00000000 01001000 00000000 11000001 10000010 11000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {0, 18, 0, -125, 65, 35, 0};
  // {00100001 00000101 00101010 00001010 10010011 01000100 00}
  public static final byte[] GRPSPLIT2 = new byte[] {-124, -96, 84, 80, -55, 34, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 8, 0, 0};
  // {00000000 11000010 00110000 00110000 11011000 00000000 00}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 67, 12, 12, 27, 0, 0};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {8, 8, 0, 0};
  // {01011000 01100110 11001111 01001011 11010110 01001100 11}
  public static final byte[] GRPSPLIT6 = new byte[] {26, 102, -13, -46, 107, 50, 3};
  // {00010000 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {8, 9, 0, 0};
  // {01011011 11101111 01111111 10011111 01100110 11111000 00}
  public static final byte[] GRPSPLIT8 = new byte[] {-38, -9, -2, -7, 102, 31, 0};
  // {10011100 00110000 10100010 10100010 00001000 10110010 10}
  public static final byte[] GRPSPLIT9 = new byte[] {57, 12, 69, 69, 16, 77, 1};
  // {01001000 01100000 00100000 10000000 00010000 11000010 00}
  public static final byte[] GRPSPLIT10 = new byte[] {18, 6, 4, 1, 8, 67, 0};
  // {00000000 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {0, 24, 0, 0};
  // {11100010 01010010 01110010 10000010 11000101 10010000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {71, 74, 78, 65, -93, 9, 0};
  // {10101101 11111101 01111101 11111100 00111010 11000111 01}
  public static final byte[] GRPSPLIT13 = new byte[] {-75, -65, -66, 63, 92, -29, 2};
  // {00000000 10110011 10001000 01000011 10000001 00000100 00}
  public static final byte[] GRPSPLIT14 = new byte[] {0, -51, 17, -62, -127, 32, 0};
}


class AtrociousLoanModel_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_4_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <43731.246f ? 
             (data[9 /* revol_util */] <45.035156f ? 
                 (data[9 /* revol_util */] <26.03595f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.020933943f : 
                        -0.0038208487f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -8.17345E-4f : 
                        0.04559001f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <25.306171f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.0034357742f : 
                        0.019324236f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        0.0014076602f : 
                        0.042673163f))) : 
             (data[9 /* revol_util */] <48.0375f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.055626f ? 
                        -0.029429808f : 
                        -0.009709029f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.005943031f : 
                        0.026898768f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <20.563126f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        -0.014852851f : 
                        0.008322496f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.0045300084f : 
                        0.010709005f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <71621.414f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <46.503124f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        0.012061358f : 
                        0.03259375f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        0.029022992f : 
                        0.11007303f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <14.5f ? 
                        0.040616944f : 
                        0.019410014f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <54912.0f ? 
                        0.059125274f : 
                        0.04135047f))) : 
             (data[9 /* revol_util */] <45.492188f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -0.014542888f : 
                        0.007033974f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        -0.0029653928f : 
                        0.1029258f)) : 
                 (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[3])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT17, 50, 0, data[6])) ? 
                        0.0070282193f : 
                        0.028820716f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <26022.5f ? 
                        0.026823089f : 
                        0.060478404f)))));
    return pred;
  } // constant pool size = 249B, number of visited nodes = 31, static init size = 738B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10110000 01101000 01101000 01000000 11100010 01110100 01}
  public static final byte[] GRPSPLIT1 = new byte[] {13, 22, 22, 2, 71, 46, 2};
  // {00000001 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-128, 9, 0, 0};
  // {00111000 01000101 00111010 10001010 11011001 01000000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {28, -94, 92, 81, -101, 2, 0};
  // {01101101 01101011 10101111 11101100 11110111 01101111 00}
  public static final byte[] GRPSPLIT4 = new byte[] {-74, -42, -11, 55, -17, -10, 0};
  // {00010001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-120, 8, 0, 0};
  // {01100011 11110010 00110000 00010100 10001010 00000000 10}
  public static final byte[] GRPSPLIT6 = new byte[] {-58, 79, 12, 40, 81, 0, 1};
  // {00010101 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-88, 15, 0, 0};
  // {01111000 01010010 01010010 01000011 11010010 01011001 00}
  public static final byte[] GRPSPLIT8 = new byte[] {30, 74, 74, -62, 75, -102, 0};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {8, 8, 0, 0};
  // {00010001 11100011 01100001 00010011 01000110 11010000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {-120, -57, -122, -56, 98, 11, 0};
  // {11111111 10111111 10100111 11101111 10101100 11111111 10}
  public static final byte[] GRPSPLIT11 = new byte[] {-1, -3, -27, -9, 53, -1, 1};
  // {01001010 11101101 11110110 10011111 01110100 11011110 00}
  public static final byte[] GRPSPLIT12 = new byte[] {82, -73, 111, -7, 46, 123, 0};
  // {00000000 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 24, 0, 0};
  // {11100010 01100011 01000010 10000010 11110101 00001000 00}
  public static final byte[] GRPSPLIT14 = new byte[] {71, -58, 66, 65, -81, 16, 0};
  // {10101101 10111111 11111101 11111100 00111010 11000111 01}
  public static final byte[] GRPSPLIT15 = new byte[] {-75, -3, -65, 63, 92, -29, 2};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {32, 0, 0, 0};
  // {00000000 11100011 00101000 10000111 01100111 00010110 00}
  public static final byte[] GRPSPLIT17 = new byte[] {0, -57, 20, -31, -26, 104, 0};
}


class AtrociousLoanModel_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_5_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <57676.33f ? 
             (data[9 /* revol_util */] <53.041405f ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <19.370155f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        -0.014087592f : 
                        0.014880227f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.008742976f : 
                        0.010042776f)) : 
                 (data[4 /* annual_inc */] <37191.117f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.01798313f : 
                        0.041366268f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                        0.002352121f : 
                        0.027893897f))) : 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <57.044533f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <16.57125f ? 
                        -0.03116033f : 
                        -0.018574549f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.0016829028f : 
                        0.054032955f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <24.243126f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        -0.014380822f : 
                        0.008613753f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.0061367983f : 
                        0.01607345f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <71621.414f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <58.634377f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <19.94f ? 
                        0.015236369f : 
                        0.03535985f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        0.021859424f : 
                        0.062403005f)) : 
                 (data[4 /* annual_inc */] <33510.0f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        0.032867137f : 
                        0.08978708f) : 
                     (data[0 /* loan_amnt */] <16406.5f ? 
                        0.030850755f : 
                        0.051978968f))) : 
             (data[9 /* revol_util */] <69.24922f ? 
                 (Double.isNaN(data[4]) || data[4 /* annual_inc */] <101598.67f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <22997.5f ? 
                        0.0026799252f : 
                        0.028293155f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.011100417f : 
                        0.011922298f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <30247.5f ? 
                        -0.008983939f : 
                        0.022522382f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        0.029492265f : 
                        0.09110456f)))));
    return pred;
  } // constant pool size = 225B, number of visited nodes = 31, static init size = 594B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00010000 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {8, 13, 0, 0};
  // {11001110 01010101 01000011 01011011 11100010 11011001 00}
  public static final byte[] GRPSPLIT2 = new byte[] {115, -86, -62, -38, 71, -101, 0};
  // {00100001 00000101 00101010 00001010 10010011 01000100 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-124, -96, 84, 80, -55, 34, 0};
  // {00001101 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-80, 15, 0, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 8, 0, 0};
  // {01000000 10000010 00110000 10000000 10011000 00000000 10}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 65, 12, 1, 25, 0, 1};
  // {10010101 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-87, 14, 0, 0};
  // {01011000 01100011 11001011 01010011 11010100 01001000 10}
  public static final byte[] GRPSPLIT8 = new byte[] {26, -58, -45, -54, 43, 18, 1};
  // {00010000 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {8, 27, 0, 0};
  // {11001111 11111110 00100101 11111111 01100001 10111110 10}
  public static final byte[] GRPSPLIT10 = new byte[] {-13, 127, -92, -1, -122, 125, 1};
  // {11001011 01101101 01111111 11001111 11101100 11111100 11}
  public static final byte[] GRPSPLIT11 = new byte[] {-45, -74, -2, -13, 55, 63, 3};
  // {00100000 11100011 10101000 10100000 00110000 00010100 00}
  public static final byte[] GRPSPLIT12 = new byte[] {4, -57, 21, 5, 12, 40, 0};
  // {11101101 11111111 00101111 11011011 11100111 01101111 00}
  public static final byte[] GRPSPLIT13 = new byte[] {-73, -1, -12, -37, -25, -10, 0};
  // {00010001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-120, 8, 0, 0};
}


class AtrociousLoanModel_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_6_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <57676.33f ? 
             (data[9 /* revol_util */] <64.05f ? 
                 (data[9 /* revol_util */] <32.025f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.017899552f : 
                        0.0014301665f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -0.001592887f : 
                        0.022292973f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <24.99375f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0010259477f : 
                        0.017641194f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        0.011104746f : 
                        0.039046526f))) : 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <44.034374f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.03248356f : 
                        -0.017906215f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.012480291f : 
                        0.028285112f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.3225f ? 
                        -0.015309901f : 
                        0.0031143185f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        0.006514447f : 
                        0.063691325f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <71621.414f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <46.503124f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        0.013129895f : 
                        0.034571096f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        0.024840312f : 
                        0.094801694f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <60132.0f ? 
                        0.032586787f : 
                        0.010639548f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        0.041406296f : 
                        0.07045976f))) : 
             (data[9 /* revol_util */] <43.97578f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        -0.03746402f : 
                        -0.002172187f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                        -0.020763159f : 
                        0.04805798f)) : 
                 (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[3])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT18, 50, 0, data[6])) ? 
                        0.0056758095f : 
                        0.025078742f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT19, 50, 0, data[6])) ? 
                        0.018876996f : 
                        0.048435137f)))));
    return pred;
  } // constant pool size = 262B, number of visited nodes = 31, static init size = 816B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00000000 01001000 00000000 11000001 10001010 11000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {0, 18, 0, -125, 81, 35, 0};
  // {00010101 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-88, 11, 0, 0};
  // {10111010 01100101 00111010 10001011 11000001 01000000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {93, -90, 92, -47, -125, 2, 0};
  // {01101001 11000010 01011111 11001110 11110110 01110011 00}
  public static final byte[] GRPSPLIT4 = new byte[] {-106, 67, -6, 115, 111, -50, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 8, 0, 0};
  // {00000010 11000010 00110000 00110000 11011000 01000000 00}
  public static final byte[] GRPSPLIT6 = new byte[] {64, 67, 12, 12, 27, 2, 0};
  // {00010001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-120, 8, 0, 0};
  // {01000000 01000011 01011011 10000000 00011010 01010001 11}
  public static final byte[] GRPSPLIT8 = new byte[] {2, -62, -38, 1, 88, -118, 3};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {8, 8, 0, 0};
  // {00010001 01000001 01100001 00010001 00000110 11010000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {-120, -126, -122, -120, 96, 11, 0};
  // {10111111 10111111 10100111 11101111 10101100 11111111 10}
  public static final byte[] GRPSPLIT11 = new byte[] {-3, -3, -27, -9, 53, -1, 1};
  // {01001010 11101101 11110110 10011111 01110100 11011110 00}
  public static final byte[] GRPSPLIT12 = new byte[] {82, -73, 111, -7, 46, 123, 0};
  // {00000110 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {96, 30, 0, 0};
  // {00000000 01011000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {0, 26, 0, 0};
  // {11101010 11101111 01111110 10011010 11110101 11111000 10}
  public static final byte[] GRPSPLIT15 = new byte[] {87, -9, 126, 89, -81, 31, 1};
  // {10101111 11011110 01111111 11111000 11011011 01010111 01}
  public static final byte[] GRPSPLIT16 = new byte[] {-11, 123, -2, 31, -37, -22, 2};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {32, 0, 0, 0};
  // {00000000 01100011 10101000 10100111 01100111 00000110 00}
  public static final byte[] GRPSPLIT18 = new byte[] {0, -58, 21, -27, -26, 96, 0};
  // {01111001 00111100 01101110 11101000 10110011 11110001 10}
  public static final byte[] GRPSPLIT19 = new byte[] {-98, 60, 118, 23, -51, -113, 1};
}


class AtrociousLoanModel_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_7_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <43731.246f ? 
             (data[9 /* revol_util */] <64.05f ? 
                 (data[9 /* revol_util */] <32.52539f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.017328283f : 
                        -0.0014931582f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        0.005270757f : 
                        0.05884532f)) : 
                 (!Double.isNaN(data[2]) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.75625f ? 
                        0.012331319f : 
                        0.033717092f) : 
                    0.055733744f)) : 
             (Double.isNaN(data[7]) || data[7 /* dti */] <16.089727f ? 
                 (data[9 /* revol_util */] <78.71875f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        -0.024171414f : 
                        0.00848354f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.019181684f : 
                        -0.0011202833f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <58.14453f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        -0.013606601f : 
                        0.041356318f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <68617.27f ? 
                        0.009204329f : 
                        -0.0059755393f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <71621.414f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <63.183594f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        0.013079913f : 
                        0.03166763f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        0.022519644f : 
                        0.058345046f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        0.02305319f : 
                        0.043642387f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        0.050564453f : 
                        0.10692628f))) : 
             (data[9 /* revol_util */] <69.24922f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                     (data[0 /* loan_amnt */] <18100.5f ? 
                        -0.011159646f : 
                        0.008820626f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        0.019927312f : 
                        0.07039452f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <96.50504f ? 
                        5.381698E-5f : 
                        -0.053470492f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <18.632812f ? 
                        0.019787777f : 
                        0.038718563f)))));
    return pred;
  } // constant pool size = 216B, number of visited nodes = 30, static init size = 576B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 01011010 01101000 11000001 11110110 00110100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 90, 22, -125, 111, 44, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 8, 0, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 8, 0, 0};
  // {01111010 01100111 00001110 10111110 11010010 01110011 10}
  public static final byte[] GRPSPLIT4 = new byte[] {94, -26, 112, 125, 75, -50, 1};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {8, 8, 0, 0};
  // {00010000 01011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {8, 26, 0, 0};
  // {01000000 01100001 01110001 10010011 00110100 11010010 00}
  public static final byte[] GRPSPLIT7 = new byte[] {2, -122, -114, -55, 44, 75, 0};
  // {10101111 11101100 10100100 11011111 01100000 10111110 00}
  public static final byte[] GRPSPLIT8 = new byte[] {-11, 55, 37, -5, 6, 125, 0};
  // {01000000 01000000 11100000 11010100 01011000 01001100 00}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 2, 7, 43, 26, 50, 0};
  // {00111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {60, 0, 0, 0};
  // {00010100 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {40, 12, 0, 0};
  // {00000000 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 27, 0, 0};
  // {00100001 00010011 01011000 10110000 00011001 00000101 00}
  public static final byte[] GRPSPLIT13 = new byte[] {-124, -56, 26, 13, -104, -96, 0};
  // {11101101 11111111 00101111 11011011 11100111 01101111 00}
  public static final byte[] GRPSPLIT14 = new byte[] {-73, -1, -12, -37, -25, -10, 0};
}


class AtrociousLoanModel_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_8_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <71621.414f ? 
             (data[9 /* revol_util */] <62.54883f ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <20.932266f ? 
                     (data[4 /* annual_inc */] <40073.984f ? 
                        -0.0021733195f : 
                        -0.016946156f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.0052616484f : 
                        0.010720872f)) : 
                 (!Double.isNaN(data[2]) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.247032f ? 
                        0.0045544542f : 
                        0.021824904f) : 
                    0.043489438f)) : 
             (data[9 /* revol_util */] <72.05625f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <25.731562f ? 
                        -0.026631948f : 
                        -0.0039219353f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0041071456f : 
                        0.039620135f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <27453.5f ? 
                        -0.012625894f : 
                        0.008220715f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.002158865f : 
                        0.053994894f)))) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <17.105097f ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                 (data[10 /* total_acc */] <15.5f ? 
                     (data[9 /* revol_util */] <79.52344f ? 
                        0.021646887f : 
                        0.04532447f) : 
                     (data[4 /* annual_inc */] <65662.5f ? 
                        0.015904559f : 
                        -1.8611861E-5f)) : 
                 (Double.isNaN(data[4]) || data[4 /* annual_inc */] <187387.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 49, 0, data[6])) ? 
                        0.031314053f : 
                        0.075408734f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 0, data[6]) || (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 49, 0, data[6])) ? 
                        -0.0645354f : 
                        0.05909616f))) : 
             (data[4 /* annual_inc */] <50446.875f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <20.5f ? 
                        0.036064528f : 
                        0.004919357f) : 
                     (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[12])) ? 
                        0.019978119f : 
                        0.06292038f)) : 
                 (data[0 /* loan_amnt */] <19328.5f ? 
                     (data[9 /* revol_util */] <26.284374f ? 
                        -0.02303407f : 
                        0.016675469f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <82806.25f ? 
                        0.040213555f : 
                        0.023174403f)))));
    return pred;
  } // constant pool size = 193B, number of visited nodes = 30, static init size = 438B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00001100 01010011 00000011 01010011 11110010 01011101 00}
  public static final byte[] GRPSPLIT1 = new byte[] {48, -54, -64, -54, 79, -70, 0};
  // {00000000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 12, 0, 0};
  // {10000000 11000011 00010000 00110000 00000100 00000000 10}
  public static final byte[] GRPSPLIT3 = new byte[] {1, -61, 8, 12, 32, 0, 1};
  // {10010101 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-87, 8, 0, 0};
  // {00010000 11100001 01001011 10010100 00001110 00110011 01}
  public static final byte[] GRPSPLIT5 = new byte[] {8, -121, -46, 41, 112, -52, 2};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {8, 8, 0, 0};
  // {11111101 11101101 10000110 11111100 01110100 11001111 0}
  public static final byte[] GRPSPLIT7 = new byte[] {-65, -73, 97, 63, 46, -13, 0};
  // {00010000 00000001 00000000 00000000 11000000 00100000 0}
  public static final byte[] GRPSPLIT8 = new byte[] {8, -128, 0, 0, 3, 4, 0};
  // {01001010 01100000 00100001 10000100 00110010 00011010 00}
  public static final byte[] GRPSPLIT9 = new byte[] {82, 6, -124, 33, 76, 88, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
}


class AtrociousLoanModel_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_9_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <71621.414f ? 
             (data[9 /* revol_util */] <32.025f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.022592725f : 
                        -0.0043663047f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0063114944f : 
                        0.030436771f)) : 
                 (data[4 /* annual_inc */] <40026.86f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8047.5f ? 
                        0.0071389438f : 
                        0.022797357f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
                        -0.00494387f : 
                        0.013201368f))) : 
             (data[9 /* revol_util */] <44.534767f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                        -0.03284341f : 
                        -0.008426535f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.036292564f : 
                        0.0043836082f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <27453.5f ? 
                        -0.016748337f : 
                        4.431861E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.0050464156f : 
                        0.048236903f)))) : 
         (data[4 /* annual_inc */] <57676.33f ? 
             (data[9 /* revol_util */] <64.7f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (data[4 /* annual_inc */] <29565.938f ? 
                        0.05118748f : 
                        0.011026048f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <26.151562f ? 
                        0.028617153f : 
                        0.053544793f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <16406.5f ? 
                        0.026950987f : 
                        0.045456745f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        0.05789696f : 
                        0.13456818f))) : 
             (Double.isNaN(data[7]) || data[7 /* dti */] <17.135937f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                     (data[10 /* total_acc */] <19.5f ? 
                        0.01753149f : 
                        -6.835152E-5f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        0.017427158f : 
                        0.06481867f)) : 
                 (data[0 /* loan_amnt */] <19420.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        2.5266464E-4f : 
                        0.02517271f) : 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[3])) ? 
                        0.024461675f : 
                        0.04507817f)))));
    return pred;
  } // constant pool size = 225B, number of visited nodes = 31, static init size = 594B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00010100 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {40, 31, 0, 0};
  // {00000000 01000000 00000000 01010001 10000010 11010100 01}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 2, 0, -118, 65, 43, 2};
  // {11100000 00011000 00101000 11000000 10001000 11000000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {7, 24, 20, 3, 17, 3, 0};
  // {00000001 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-128, 40, 0, 0};
  // {01001000 11100010 10100000 00110010 11100101 01011010 00}
  public static final byte[] GRPSPLIT5 = new byte[] {18, 71, 5, 76, -89, 90, 0};
  // {00010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-120, 12, 0, 0};
  // {10000000 01100001 11011010 10000000 00001110 01110001 11}
  public static final byte[] GRPSPLIT7 = new byte[] {1, -122, 91, 1, 112, -114, 3};
  // {00011001 01100001 11111001 10010011 00100110 10010010 00}
  public static final byte[] GRPSPLIT8 = new byte[] {-104, -122, -97, -55, 100, 73, 0};
  // {01000000 01000000 10100000 11010100 00000010 01000100 00}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 2, 5, 43, 64, 34, 0};
  // {00010100 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {40, 9, 0, 0};
  // {00010000 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {8, 24, 0, 0};
  // {00101100 01100001 00000010 00110000 01111001 01011011 00}
  public static final byte[] GRPSPLIT12 = new byte[] {52, -122, 64, 12, -98, -38, 0};
  // {10000010 11010011 11101000 00000111 01000101 11010100 00}
  public static final byte[] GRPSPLIT13 = new byte[] {65, -53, 23, -32, -94, 43, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {40, 0, 0, 0};
}


class AtrociousLoanModel_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_10_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <43731.246f ? 
             (data[9 /* revol_util */] <64.05f ? 
                 (data[7 /* dti */] <13.43414f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.021146527f : 
                        -0.0031412884f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <29.201681f ? 
                        0.0032787425f : 
                        0.025579456f)) : 
                 (!Double.isNaN(data[2]) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        0.0043719523f : 
                        0.021020774f) : 
                    0.04708019f)) : 
             (data[9 /* revol_util */] <44.034374f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <21.18625f ? 
                        -0.02674822f : 
                        -0.010530711f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.0051014395f : 
                        0.028454952f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <24.613438f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        -0.009724659f : 
                        0.028541137f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.00238144f : 
                        0.015547964f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <71621.414f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <46.503124f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.011561164f : 
                        0.016829439f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.01422563f : 
                        0.075946756f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <15344.5f ? 
                        0.009505656f : 
                        0.027895452f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        0.032063145f : 
                        0.055791203f))) : 
             (data[9 /* revol_util */] <43.97578f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        -0.018909434f : 
                        0.030938702f) : 
                     (data[10 /* total_acc */] <19.5f ? 
                        0.029423337f : 
                        -3.0958996E-4f)) : 
                 (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[3])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        0.0027663074f : 
                        0.020249134f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <26022.5f ? 
                        0.019268515f : 
                        0.046358477f)))));
    return pred;
  } // constant pool size = 227B, number of visited nodes = 30, static init size = 642B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00101001 01001011 10111010 10000010 11111110 01100000 01}
  public static final byte[] GRPSPLIT1 = new byte[] {-108, -46, 93, 65, 127, 6, 2};
  // {01111000 01100100 00111010 10001010 11001011 01000100 00}
  public static final byte[] GRPSPLIT2 = new byte[] {30, 38, 92, 81, -45, 34, 0};
  // {00010001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-120, 8, 0, 0};
  // {01100011 11010000 00100000 00110100 10001010 01000000 10}
  public static final byte[] GRPSPLIT4 = new byte[] {-58, 11, 4, 44, 81, 2, 1};
  // {00010000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {8, 12, 0, 0};
  // {11011001 01110110 01010111 00011011 11100010 01011101 01}
  public static final byte[] GRPSPLIT6 = new byte[] {-101, 110, -22, -40, 71, -70, 2};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {8, 8, 0, 0};
  // {01011011 11111111 01111111 10011111 01100110 11111010 00}
  public static final byte[] GRPSPLIT8 = new byte[] {-38, -1, -2, -7, 102, 95, 0};
  // {11111111 10111111 10100111 11101111 10101100 11111111 10}
  public static final byte[] GRPSPLIT9 = new byte[] {-1, -3, -27, -9, 53, -1, 1};
  // {01001010 11101101 11110110 10011111 01110100 11011110 00}
  public static final byte[] GRPSPLIT10 = new byte[] {82, -73, 111, -7, 46, 123, 0};
  // {00000110 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {96, 30, 0, 0};
  // {11100010 01101111 01111110 10011010 11110101 01001100 00}
  public static final byte[] GRPSPLIT12 = new byte[] {71, -10, 126, 89, -81, 50, 0};
  // {00000000 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 25, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {32, 0, 0, 0};
  // {00000010 01100011 10101000 10100111 01100111 00010110 00}
  public static final byte[] GRPSPLIT15 = new byte[] {64, -58, 21, -27, -26, 104, 0};
}


class AtrociousLoanModel_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_11_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <71621.414f ? 
             (data[9 /* revol_util */] <64.05f ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <21.244688f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        -0.011574051f : 
                        0.014990923f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.005313417f : 
                        0.010424917f)) : 
                 (data[4 /* annual_inc */] <36758.5f ? 
                     (data[2 /* emp_length */] <9.5f ? 
                        0.0148970345f : 
                        0.037993092f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14516.5f ? 
                        0.0012192513f : 
                        0.017582929f))) : 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <72.05625f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28532.5f ? 
                        -0.024738496f : 
                        -0.0071361046f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.01596852f : 
                        0.017926835f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <27453.5f ? 
                        -0.011215476f : 
                        0.008133978f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.017718775f : 
                        0.033502255f)))) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <17.105097f ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                 (data[10 /* total_acc */] <15.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        0.016932748f : 
                        0.04024289f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <24.740625f ? 
                        -0.0126940375f : 
                        0.0072076106f)) : 
                 (Double.isNaN(data[4]) || data[4 /* annual_inc */] <96093.75f ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <62.046875f ? 
                        0.045381855f : 
                        0.09035461f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 0, data[6]) || (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 49, 0, data[6])) ? 
                        0.005658588f : 
                        0.09373745f))) : 
             (data[4 /* annual_inc */] <50446.875f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.0028227363f : 
                        0.029401764f) : 
                     (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[12])) ? 
                        0.015610235f : 
                        0.05246587f)) : 
                 (data[0 /* loan_amnt */] <19328.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.001587552f : 
                        0.018247763f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <82806.25f ? 
                        0.03361461f : 
                        0.019149153f)))));
    return pred;
  } // constant pool size = 220B, number of visited nodes = 31, static init size = 564B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00010000 10111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {8, 29, 0, 0};
  // {01001100 01010011 01100010 01010011 11110010 01011101 00}
  public static final byte[] GRPSPLIT2 = new byte[] {50, -54, 70, -54, 79, -70, 0};
  // {00000000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 12, 0, 0};
  // {10011000 11100011 00011000 00110000 10101101 00010000 10}
  public static final byte[] GRPSPLIT4 = new byte[] {25, -57, 24, 12, -75, 8, 1};
  // {10010101 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-87, 9, 0, 0};
  // {01011001 11101101 01001111 11011101 00111111 01110110 01}
  public static final byte[] GRPSPLIT6 = new byte[] {-102, -73, -14, -69, -4, 110, 2};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {8, 8, 0, 0};
  // {11000000 01000001 01100000 11010000 00110000 01110100 10}
  public static final byte[] GRPSPLIT8 = new byte[] {3, -126, 6, 11, 12, 46, 1};
  // {00000100 01000001 00010000 10000000 00110000 01000000 0}
  public static final byte[] GRPSPLIT9 = new byte[] {32, -126, 8, 1, 12, 2, 0};
  // {01001010 01100000 00101001 10000100 00110010 00011010 00}
  public static final byte[] GRPSPLIT10 = new byte[] {82, 6, -108, 33, 76, 88, 0};
  // {01011111 11111111 01111111 10011111 11111111 11111010 00}
  public static final byte[] GRPSPLIT11 = new byte[] {-6, -1, -2, -7, -1, 95, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
  // {10011010 11011111 11101100 10011111 01000101 11000100 00}
  public static final byte[] GRPSPLIT13 = new byte[] {89, -5, 55, -7, -94, 35, 0};
}


class AtrociousLoanModel_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_12_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <57676.33f ? 
             (data[9 /* revol_util */] <32.025f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -0.018506845f : 
                        -0.0023176968f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <23.51836f ? 
                        -0.005926141f : 
                        0.023722744f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <25.931015f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        4.5774935E-4f : 
                        0.019300785f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        0.0064062336f : 
                        0.026383188f))) : 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <57.044533f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.024827788f : 
                        -0.010980174f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        5.144776E-4f : 
                        0.04618732f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <24.243126f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        -0.011233312f : 
                        0.008163768f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.005691457f : 
                        0.014827772f)))) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <17.105097f ? 
             (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        -0.00801418f : 
                        0.04845845f) : 
                     (data[4 /* annual_inc */] <65662.5f ? 
                        0.022106161f : 
                        0.006913592f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (data[10 /* total_acc */] <11.5f ? 
                        0.029496206f : 
                        0.00490432f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <66.72188f ? 
                        0.019116782f : 
                        0.04142271f))) : 
             (data[4 /* annual_inc */] <50446.875f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <20.5f ? 
                        0.028496465f : 
                        7.009505E-4f) : 
                     (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[12])) ? 
                        0.014329011f : 
                        0.0491373f)) : 
                 (data[9 /* revol_util */] <57.623436f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        0.0034797871f : 
                        0.023994513f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <90892.81f ? 
                        0.029585525f : 
                        0.014844542f)))));
    return pred;
  } // constant pool size = 230B, number of visited nodes = 31, static init size = 624B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00000000 01001000 00000000 01000001 10000010 11000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {0, 18, 0, -126, 65, 35, 0};
  // {00010001 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-120, 63, 0, 0};
  // {00011101 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-72, 11, 0, 0};
  // {01101101 01010011 01100110 11001100 11010110 01110011 00}
  public static final byte[] GRPSPLIT4 = new byte[] {-74, -54, 102, 51, 107, -50, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 8, 0, 0};
  // {01000000 10000010 00010000 10000000 10011000 00000000 10}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 65, 8, 1, 25, 0, 1};
  // {10010101 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-87, 27, 0, 0};
  // {01011000 01100011 11001011 01010011 11010100 01001000 10}
  public static final byte[] GRPSPLIT8 = new byte[] {26, -58, -45, -54, 43, 18, 1};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {48, 0, 0, 0};
  // {01000010 01000011 11100011 10110010 10100100 01010111 00}
  public static final byte[] GRPSPLIT10 = new byte[] {66, -62, -57, 77, 37, -22, 0};
  // {00010000 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {8, 13, 0, 0};
  // {01101000 01110000 01100010 10010001 00111100 00110000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {22, 14, 70, -119, 60, 12, 0};
  // {01001010 01100000 00100001 10000100 00110010 00011010 00}
  public static final byte[] GRPSPLIT13 = new byte[] {82, 6, -124, 33, 76, 88, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {2, 0, 0, 0};
  // {00110001 10010010 11111000 10000000 01010100 11000100 10}
  public static final byte[] GRPSPLIT15 = new byte[] {-116, 73, 31, 1, 42, 35, 1};
}


class AtrociousLoanModel_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_13_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <71621.414f ? 
             (data[9 /* revol_util */] <32.025f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.022589892f : 
                        -0.009323919f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0049868026f : 
                        0.031992912f)) : 
                 (data[4 /* annual_inc */] <40026.86f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8047.5f ? 
                        0.0056526833f : 
                        0.020152524f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
                        -0.0042631174f : 
                        0.012567587f))) : 
             (data[9 /* revol_util */] <72.05625f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28532.5f ? 
                        -0.024425732f : 
                        -0.0068231565f) : 
                     (data[9 /* revol_util */] <18.014063f ? 
                        -0.023657082f : 
                        -0.0012764918f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        -0.021446057f : 
                        -0.0061372677f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <27992.5f ? 
                        0.0017132043f : 
                        0.0371012f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <85566.49f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <56.6125f ? 
                 (Double.isNaN(data[4]) || data[4 /* annual_inc */] <60281.25f ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                        0.012332394f : 
                        0.029178701f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <22250.5f ? 
                        -0.003524819f : 
                        0.016945515f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <21.809376f ? 
                        0.019454224f : 
                        0.03247444f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.008037254f : 
                        0.07939596f))) : 
             (data[9 /* revol_util */] <70.765625f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <26022.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.014061725f : 
                        0.009922299f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        0.006027646f : 
                        0.0555799f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <30247.5f ? 
                        -0.009375146f : 
                        0.02017371f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        0.004540739f : 
                        0.026465088f)))));
    return pred;
  } // constant pool size = 214B, number of visited nodes = 31, static init size = 528B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00010100 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {40, 31, 0, 0};
  // {01010000 01000000 00010001 01010011 11010010 11010100 01}
  public static final byte[] GRPSPLIT2 = new byte[] {10, 2, -120, -54, 75, 43, 2};
  // {01100000 00011000 00101000 11000000 00001000 11000000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {6, 24, 20, 3, 16, 3, 0};
  // {00000001 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-128, 62, 0, 0};
  // {00010000 01000001 01000010 11100110 10000000 01000000 00}
  public static final byte[] GRPSPLIT5 = new byte[] {8, -126, 66, 103, 1, 2, 0};
  // {10111111 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-3, 27, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {32, 0, 0, 0};
  // {00010010 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {72, 12, 0, 0};
  // {01011011 11011111 11101110 11111100 01110110 10111111 00}
  public static final byte[] GRPSPLIT9 = new byte[] {-38, -5, 119, 63, 110, -3, 0};
  // {11100000 01010011 10100010 00000010 00000111 00000000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {7, -54, 69, 64, -32, 0, 0};
  // {10000001 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-127, 40, 0, 0};
  // {11001001 10111101 00001100 10111111 11100101 01100111 00}
  public static final byte[] GRPSPLIT12 = new byte[] {-109, -67, 48, -3, -89, -26, 0};
  // {00111101 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-68, 11, 0, 0};
}


class AtrociousLoanModel_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_14_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (Double.isNaN(data[7]) || data[7 /* dti */] <18.198574f ? 
             (data[4 /* annual_inc */] <57676.33f ? 
                 (data[9 /* revol_util */] <45.023438f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.022738112f : 
                        -0.0070282845f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -0.0013685959f : 
                        0.020531148f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <75.921875f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.028665446f : 
                        -0.017485911f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.019625476f : 
                        -8.607024E-4f))) : 
             (!Double.isNaN(data[2]) ? 
                 (data[4 /* annual_inc */] <51405.75f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        0.0016399522f : 
                        0.0149771385f) : 
                     (data[9 /* revol_util */] <58.04531f ? 
                        -0.0113411145f : 
                        0.0017013934f)) : 
                0.03396224f)) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <17.105097f ? 
             (data[10 /* total_acc */] <14.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <83.057816f ? 
                        0.009704585f : 
                        0.039097123f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        0.019522553f : 
                        0.046244137f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <24.740625f ? 
                        -0.014559324f : 
                        0.0051473067f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.015279807f : 
                        0.050283432f))) : 
             (data[4 /* annual_inc */] <50446.875f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <17469.5f ? 
                        0.015062938f : 
                        0.035525415f) : 
                     (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[12])) ? 
                        0.012584856f : 
                        0.043546565f)) : 
                 (data[0 /* loan_amnt */] <18000.5f ? 
                     (data[9 /* revol_util */] <36.39375f ? 
                        -0.01682949f : 
                        0.011561046f) : 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                        0.019558778f : 
                        0.03248924f)))));
    return pred;
  } // constant pool size = 198B, number of visited nodes = 28, static init size = 516B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01111000 01001010 00101011 11010010 11011010 01100100 01}
  public static final byte[] GRPSPLIT1 = new byte[] {30, 82, -44, 75, 91, 38, 2};
  // {00001101 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-80, 15, 0, 0};
  // {01011000 11010010 01110110 11011110 11110101 11001001 00}
  public static final byte[] GRPSPLIT3 = new byte[] {26, 75, 110, 123, -81, -109, 0};
  // {01011010 11101111 00001110 01111110 11011010 01110110 10}
  public static final byte[] GRPSPLIT4 = new byte[] {90, -9, 112, 126, 91, 110, 1};
  // {10101000 11010101 00010000 11001011 11010010 01001000 00}
  public static final byte[] GRPSPLIT5 = new byte[] {21, -85, 8, -45, 75, 18, 0};
  // {11000000 01100001 01100010 11010000 00110000 01100100 00}
  public static final byte[] GRPSPLIT6 = new byte[] {3, -122, 70, 11, 12, 38, 0};
  // {00110011 00111100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-52, 60, 0, 0};
  // {00010000 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {8, 11, 0, 0};
  // {11100101 11000010 00010000 10110001 00100001 11010100 00}
  public static final byte[] GRPSPLIT9 = new byte[] {-89, 67, 8, -115, -124, 43, 0};
  // {01001011 01100000 00101001 10000100 00110010 00011010 00}
  public static final byte[] GRPSPLIT10 = new byte[] {-46, 6, -108, 33, 76, 88, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {2, 0, 0, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {40, 0, 0, 0};
}


class AtrociousLoanModel_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_15_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <43731.246f ? 
             (data[9 /* revol_util */] <72.05625f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8539.5f ? 
                     (data[4 /* annual_inc */] <27414.594f ? 
                        0.00712515f : 
                        -0.007808284f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -4.3088954E-4f : 
                        0.01501887f)) : 
                 (!Double.isNaN(data[2]) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        0.0032017843f : 
                        0.020251332f) : 
                    0.04487221f)) : 
             (Double.isNaN(data[7]) || data[7 /* dti */] <16.089727f ? 
                 (data[9 /* revol_util */] <78.71875f ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                        -0.023772899f : 
                        -0.012534888f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.0074092182f : 
                        0.009073505f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.0096009765f : 
                        0.0019213088f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        0.011603552f : 
                        0.067960106f)))) : 
         (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <22.806797f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        -0.0051633813f : 
                        0.036765967f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        0.0054215607f : 
                        0.02586584f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <57.623436f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        0.0057092067f : 
                        0.044495944f) : 
                     (data[4 /* annual_inc */] <65662.5f ? 
                        0.029373406f : 
                        0.016886892f))) : 
             (data[9 /* revol_util */] <78.85313f ? 
                 (Double.isNaN(data[4]) || data[4 /* annual_inc */] <60825.0f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        0.016073722f : 
                        0.03417569f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25969.5f ? 
                        0.0042317784f : 
                        0.029349815f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[2]) ? 
                        0.013940109f : 
                        0.13672338f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[5])) ? 
                        0.042471595f : 
                        0.09155106f)))));
    return pred;
  } // constant pool size = 225B, number of visited nodes = 30, static init size = 642B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {01001101 11011010 10101111 01010010 10110101 11001110 00}
  public static final byte[] GRPSPLIT1 = new byte[] {-78, 91, -11, 74, -83, 115, 0};
  // {11101001 01101111 00111010 10011110 11001011 01000100 00}
  public static final byte[] GRPSPLIT2 = new byte[] {-105, -10, 92, 121, -45, 34, 0};
  // {00011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {56, 0, 0, 0};
  // {00110000 00100001 00001000 10100110 10010010 01110001 10}
  public static final byte[] GRPSPLIT4 = new byte[] {12, -124, 16, 101, 73, -114, 1};
  // {00010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-120, 12, 0, 0};
  // {01101000 01010011 01010010 01001011 11000010 11001101 00}
  public static final byte[] GRPSPLIT6 = new byte[] {22, -54, 74, -46, 67, -77, 0};
  // {11000011 01010011 10001010 00000000 10010110 00010000 11}
  public static final byte[] GRPSPLIT7 = new byte[] {-61, -54, 81, 0, 105, 8, 3};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {40, 0, 0, 0};
  // {01100010 11101111 11101110 10011111 01100110 11010111 00}
  public static final byte[] GRPSPLIT9 = new byte[] {70, -9, 119, -7, 102, -21, 0};
  // {00010000 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {8, 44, 0, 0};
  // {00010000 00010000 00000000 01000000 10011001 00001000 10}
  public static final byte[] GRPSPLIT11 = new byte[] {8, 8, 0, 2, -103, 16, 1};
  // {00010000 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {8, 24, 0, 0};
  // {10101000 01100001 00001011 00000000 10110000 11111010 00}
  public static final byte[] GRPSPLIT13 = new byte[] {21, -122, -48, 0, 13, 95, 0};
  // {01011011 11101110 00001110 11011101 10010101 11100010 10}
  public static final byte[] GRPSPLIT14 = new byte[] {-38, 119, 112, -69, -87, 71, 1};
  // {00000110 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {96, 9, 0, 0};
}


class AtrociousLoanModel_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_16_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <71621.414f ? 
             (data[9 /* revol_util */] <64.05f ? 
                 (data[9 /* revol_util */] <26.020313f ? 
                     (data[9 /* revol_util */] <0.4065674f ? 
                        0.007182901f : 
                        -0.017524181f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        -0.002256768f : 
                        0.04162275f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <24.681328f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.0029400138f : 
                        0.010662393f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.0054044137f : 
                        0.0255107f))) : 
             (data[9 /* revol_util */] <44.534767f ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.027325315f : 
                        0.012652398f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.034941424f : 
                        0.012572253f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <27453.5f ? 
                        -0.014026788f : 
                        0.0024890085f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.007856469f : 
                        0.025169665f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <85566.49f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <56.6125f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <60281.25f ? 
                        0.014412414f : 
                        -1.16437586E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.025014238f : 
                        0.066038094f)) : 
                 (data[4 /* annual_inc */] <33171.094f ? 
                     (data[2 /* emp_length */] <7.5f ? 
                        0.039883625f : 
                        0.08503663f) : 
                     (data[0 /* loan_amnt */] <16406.5f ? 
                        0.011351931f : 
                        0.026575485f))) : 
             (data[9 /* revol_util */] <45.492188f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <26286.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.02749506f : 
                        -4.6673478E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.0068598446f : 
                        0.027377414f)) : 
                 (data[10 /* total_acc */] <15.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        0.015872855f : 
                        0.075196035f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        0.004209598f : 
                        0.027028563f)))));
    return pred;
  } // constant pool size = 223B, number of visited nodes = 31, static init size = 582B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {0, 8, 0, 0};
  // {00111010 01110001 00011010 10001011 11000000 01000001 00}
  public static final byte[] GRPSPLIT2 = new byte[] {92, -114, 88, -47, 3, -126, 0};
  // {01101001 11000110 01111111 11011110 11110110 01001011 10}
  public static final byte[] GRPSPLIT3 = new byte[] {-106, 99, -2, 123, 111, -46, 1};
  // {00000000 00000000 00000000 00001100 10000000 11000000 00}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 0, 0, 48, 1, 3, 0};
  // {00001000 01100000 00010010 11110110 01100111 00101001 00}
  public static final byte[] GRPSPLIT5 = new byte[] {16, 6, 72, 111, -26, -108, 0};
  // {00010001 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-120, 14, 0, 0};
  // {01010001 01101111 11011111 01011010 00001101 00010111 11}
  public static final byte[] GRPSPLIT7 = new byte[] {-118, -10, -5, 90, -80, -24, 3};
  // {00010000 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {8, 27, 0, 0};
  // {00000111 10010000 00100000 10100101 00000000 10010000 10}
  public static final byte[] GRPSPLIT9 = new byte[] {-32, 9, 4, -91, 0, 9, 1};
  // {11100000 01110011 01000010 10010000 01000011 01100100 00}
  public static final byte[] GRPSPLIT10 = new byte[] {7, -50, 66, 9, -62, 38, 0};
  // {01100010 00000010 01011000 10010010 10110110 00011000 10}
  public static final byte[] GRPSPLIT11 = new byte[] {70, 64, 26, 73, 109, 24, 1};
  // {11000001 00110000 00000011 00010000 10110100 00100000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {-125, 12, -64, 8, 45, 4, 0};
  // {00000000 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 11, 0, 0};
}


class AtrociousLoanModel_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_17_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (Double.isNaN(data[7]) || data[7 /* dti */] <18.198574f ? 
             (data[9 /* revol_util */] <77.56055f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.021618705f : 
                        -0.011314168f) : 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                        -0.010278199f : 
                        0.008244201f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.016902035f : 
                        0.0056843148f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.0010453481f : 
                        0.018469892f))) : 
             (!Double.isNaN(data[2]) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <25.860546f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.009500022f : 
                        0.003927253f) : 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                        0.0041541047f : 
                        0.018794283f)) : 
                0.030939782f)) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <17.105097f ? 
             (Double.isNaN(data[10]) || data[10 /* total_acc */] <24.5f ? 
                 (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.0025070803f : 
                        0.021901192f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        0.015086184f : 
                        0.037649587f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[3])) ? 
                        -0.010055679f : 
                        0.00656486f) : 
                     (data[7 /* dti */] <10.153125f ? 
                        -0.0033697996f : 
                        0.01574264f))) : 
             (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[5])) ? 
                        -0.065259814f : 
                        0.004291433f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <56.6125f ? 
                        0.012605202f : 
                        0.027078496f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT17, 50, 0, data[6])) ? 
                     (data[7 /* dti */] <22.087107f ? 
                        0.004906959f : 
                        0.02219772f) : 
                     (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[12])) ? 
                        0.0035495767f : 
                        0.034424502f)))));
    return pred;
  } // constant pool size = 234B, number of visited nodes = 28, static init size = 732B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00010001 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-120, 31, 0, 0};
  // {01011000 01000001 01110011 11011010 11111000 11000000 00}
  public static final byte[] GRPSPLIT2 = new byte[] {26, -126, -50, 91, 31, 3, 0};
  // {00011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {56, 0, 0, 0};
  // {10101101 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-75, 47, 0, 0};
  // {00100010 01000000 00100000 00100110 00001010 01010111 00}
  public static final byte[] GRPSPLIT5 = new byte[] {68, 2, 4, 100, 80, -22, 0};
  // {11010000 01110001 00001000 10101100 10010011 01100100 10}
  public static final byte[] GRPSPLIT6 = new byte[] {11, -114, 16, 53, -55, 38, 1};
  // {00111010 01010101 00011010 01001011 11111010 11001101 00}
  public static final byte[] GRPSPLIT7 = new byte[] {92, -86, 88, -46, 95, -77, 0};
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {44, 0, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {48, 0, 0, 0};
  // {11100010 00000001 10100011 10010010 00110100 11000101 00}
  public static final byte[] GRPSPLIT10 = new byte[] {71, -128, -59, 73, 44, -93, 0};
  // {01100000 01110000 01100000 10000101 00010000 11110100 00}
  public static final byte[] GRPSPLIT11 = new byte[] {6, 14, 6, -95, 8, 47, 0};
  // {01000001 01000011 10100011 00100010 00000100 01010010 00}
  public static final byte[] GRPSPLIT12 = new byte[] {-126, -62, -59, 68, 32, 74, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {32, 0, 0, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {40, 0, 0, 0};
  // {01010010 11111111 11101100 10011111 01101111 10010100 10}
  public static final byte[] GRPSPLIT15 = new byte[] {74, -1, 55, -7, -10, 41, 1};
  // {01111111 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-2, 58, 0, 0};
  // {00111000 01100011 01010011 01000000 10110010 11101010 00}
  public static final byte[] GRPSPLIT17 = new byte[] {28, -58, -54, 2, 77, 87, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {2, 0, 0, 0};
}


class AtrociousLoanModel_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_18_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <43731.246f ? 
             (data[9 /* revol_util */] <72.05625f ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <29.367657f ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        -0.009109675f : 
                        0.0035133096f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.004319687f : 
                        0.03565762f)) : 
                 (data[2 /* emp_length */] <5.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -9.221217E-4f : 
                        0.02130736f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        0.011236272f : 
                        0.036659237f))) : 
             (data[9 /* revol_util */] <44.034374f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                        -0.021159332f : 
                        0.0025922565f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.004063166f : 
                        0.025104033f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.055626f ? 
                        -0.017076276f : 
                        -8.910865E-4f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                        -0.001448213f : 
                        0.026361717f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <99511.58f ? 
             (data[4 /* annual_inc */] <60295.066f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15609.5f ? 
                     (data[4 /* annual_inc */] <40316.25f ? 
                        0.024399111f : 
                        0.0042092935f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.005506639f : 
                        0.029226229f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <22516.5f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        -2.5139662E-4f : 
                        0.02076812f) : 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                        0.015392384f : 
                        0.031732034f))) : 
             (data[9 /* revol_util */] <78.85313f ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <16.427813f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.014092239f : 
                        0.0054203863f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.0058722897f : 
                        0.02330473f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (data[7 /* dti */] <2.43375f ? 
                        0.11171322f : 
                        0.0024877687f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <30303.5f ? 
                        0.028959895f : 
                        0.07931861f)))));
    return pred;
  } // constant pool size = 225B, number of visited nodes = 31, static init size = 594B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-68, 31, 0, 0};
  // {01001101 11000011 10110000 01100001 01110110 01101100 00}
  public static final byte[] GRPSPLIT2 = new byte[] {-78, -61, 13, -122, 110, 54, 0};
  // {01000001 01100111 00101010 10011000 11001011 01000100 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-126, -26, 84, 25, -45, 34, 0};
  // {10111010 01000000 00011010 10001110 00010000 01100011 00}
  public static final byte[] GRPSPLIT4 = new byte[] {93, 2, 88, 113, 8, -58, 0};
  // {00010001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-120, 8, 0, 0};
  // {01100011 11110000 00100000 00110110 10001010 01000000 10}
  public static final byte[] GRPSPLIT6 = new byte[] {-58, 15, 4, 108, 81, 2, 1};
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-68, 31, 0, 0};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {8, 8, 0, 0};
  // {01011010 01011111 11111111 10011111 11110110 01111110 00}
  public static final byte[] GRPSPLIT9 = new byte[] {90, -6, -1, -7, 111, 126, 0};
  // {00010010 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {72, 27, 0, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {40, 0, 0, 0};
  // {11100001 01100011 10000000 10100000 10010001 00010000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {-121, -58, 1, 5, -119, 8, 0};
  // {00110010 10000000 10111000 00000100 01110110 01100000 10}
  public static final byte[] GRPSPLIT13 = new byte[] {76, 1, 29, 32, 110, 6, 1};
  // {00000011 00010010 00001000 01110001 00100110 00000111 00}
  public static final byte[] GRPSPLIT14 = new byte[] {-64, 72, 16, -114, 100, -32, 0};
}


class AtrociousLoanModel_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_19_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <71621.414f ? 
             (data[9 /* revol_util */] <32.025f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.017958825f : 
                        -8.882616E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0039826334f : 
                        0.027921285f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (data[0 /* loan_amnt */] <7508.5f ? 
                        -0.014219441f : 
                        -0.0011935866f) : 
                     (data[4 /* annual_inc */] <30221.781f ? 
                        0.018757358f : 
                        0.004771232f))) : 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <85.566795f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.024559971f : 
                        -0.014072088f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <11.640469f ? 
                        -0.012258702f : 
                        0.005853061f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <9125.5f ? 
                        -0.03140896f : 
                        -0.008339649f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <22.668282f ? 
                        0.00303416f : 
                        0.025261043f)))) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <21.869532f ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                 (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.005797224f : 
                        0.009996498f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        0.0047028735f : 
                        0.020210374f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (data[11 /* longest_credit_length */] <11.5f ? 
                        0.036731448f : 
                        0.0044861464f) : 
                     (data[9 /* revol_util */] <48.525f ? 
                        0.021335276f : 
                        0.050214488f))) : 
             (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[12])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (data[7 /* dti */] <24.402254f ? 
                        0.0028921934f : 
                        -0.03346371f) : 
                     (data[9 /* revol_util */] <34.371876f ? 
                        -0.045212176f : 
                        0.060308695f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[3])) ? 
                        0.010016926f : 
                        0.024023937f) : 
                     (data[9 /* revol_util */] <44.48125f ? 
                        0.016397208f : 
                        0.03049593f)))));
    return pred;
  } // constant pool size = 238B, number of visited nodes = 31, static init size = 672B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00010100 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {40, 31, 0, 0};
  // {00000000 01000000 00000000 01010001 10000010 11010100 01}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 2, 0, -118, 65, 43, 2};
  // {11100000 00011000 00101000 11000000 10001000 11010000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {7, 24, 20, 3, 17, 11, 0};
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-68, 31, 0, 0};
  // {00010001 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-120, 58, 0, 0};
  // {01011000 01100000 01111000 01101110 11110000 11001001 00}
  public static final byte[] GRPSPLIT6 = new byte[] {26, 6, 30, 118, 15, -109, 0};
  // {00011010 01000001 10001010 11010100 11001110 10111010 10}
  public static final byte[] GRPSPLIT7 = new byte[] {88, -126, 81, 43, 115, 93, 1};
  // {00010000 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {8, 10, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {48, 0, 0, 0};
  // {01000010 11000011 10100011 10010010 00100110 01010100 00}
  public static final byte[] GRPSPLIT10 = new byte[] {66, -61, -59, 73, 100, 42, 0};
  // {11111000 01110000 01100000 00000001 10011000 11111010 00}
  public static final byte[] GRPSPLIT11 = new byte[] {31, 14, 6, -128, 25, 95, 0};
  // {11100101 11101110 10011110 11011001 01100001 11011100 00}
  public static final byte[] GRPSPLIT12 = new byte[] {-89, 119, 121, -101, -122, 59, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {2, 0, 0, 0};
  // {01000010 00010001 11000000 00000100 01010000 00010001 10}
  public static final byte[] GRPSPLIT14 = new byte[] {66, -120, 3, 32, 10, -120, 1};
  // {00000010 01100010 01101000 11000111 01110110 10001010 00}
  public static final byte[] GRPSPLIT15 = new byte[] {64, 70, 22, -29, 110, 81, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {40, 0, 0, 0};
}


class AtrociousLoanModel_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_20_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (Double.isNaN(data[7]) || data[7 /* dti */] <16.089727f ? 
             (data[10 /* total_acc */] <17.5f ? 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.03138429f : 
                        -0.006396923f) : 
                     (data[9 /* revol_util */] <77.6875f ? 
                        -0.0020882676f : 
                        0.012770991f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <26.484375f ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <3.0f ? 
                        -0.027565133f : 
                        0.020612285f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        -0.013199678f : 
                        0.022005372f))) : 
             (!Double.isNaN(data[2]) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <25.986094f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.00716983f : 
                        0.004056945f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.0028841943f : 
                        0.0145145375f)) : 
                0.026898602f)) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <99511.58f ? 
             (data[9 /* revol_util */] <64.7f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.002106123f : 
                        0.011902685f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        0.008017021f : 
                        0.033537693f)) : 
                 (data[4 /* annual_inc */] <42532.03f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.005493556f : 
                        0.041942064f) : 
                     (data[0 /* loan_amnt */] <15344.5f ? 
                        0.0044532917f : 
                        0.020095868f))) : 
             (data[9 /* revol_util */] <78.85313f ? 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.023536349f : 
                        0.015450536f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.017268281f : 
                        0.005466188f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -0.019734649f : 
                        0.010815761f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <33957.5f ? 
                        0.031785283f : 
                        0.07855947f)))));
    return pred;
  } // constant pool size = 217B, number of visited nodes = 28, static init size = 630B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-68, 31, 0, 0};
  // {00111000 11101101 00101010 11111110 11110010 01010011 00}
  public static final byte[] GRPSPLIT2 = new byte[] {28, -73, 84, 127, 79, -54, 0};
  // {00000000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 12, 0, 0};
  // {00111010 01000101 00010000 01001011 11010000 11001100 00}
  public static final byte[] GRPSPLIT4 = new byte[] {92, -94, 8, -46, 11, 51, 0};
  // {01001101 01110011 01010111 01001101 11010110 01111111 01}
  public static final byte[] GRPSPLIT5 = new byte[] {-78, -50, -22, -78, 107, -2, 2};
  // {00010000 01011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {8, 26, 0, 0};
  // {01010010 01111111 01110111 10011011 01110100 11011010 00}
  public static final byte[] GRPSPLIT7 = new byte[] {74, -2, -18, -39, 46, 91, 0};
  // {10101111 11111110 10110100 11111101 01101001 10110001 00}
  public static final byte[] GRPSPLIT8 = new byte[] {-11, 127, 45, -65, -106, -115, 0};
  // {01011011 01101110 00010101 11111110 11000111 01100110 00}
  public static final byte[] GRPSPLIT9 = new byte[] {-38, 118, -88, 127, -29, 102, 0};
  // {00100001 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-124, 11, 0, 0};
  // {11100010 10110000 10101001 00100010 00000000 00000000 10}
  public static final byte[] GRPSPLIT11 = new byte[] {71, 13, -107, 68, 0, 0, 1};
  // {00111001 01001111 10111100 10001000 11111111 01111001 00}
  public static final byte[] GRPSPLIT12 = new byte[] {-100, -14, 61, 17, -1, -98, 0};
  // {00000011 00000000 00001000 01110001 00100110 00000111 00}
  public static final byte[] GRPSPLIT13 = new byte[] {-64, 0, 16, -114, 100, -32, 0};
  // {11001111 01111111 00101110 01111111 11101110 00110111 00}
  public static final byte[] GRPSPLIT14 = new byte[] {-13, -2, 116, -2, 119, -20, 0};
}


class AtrociousLoanModel_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_21_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <71621.414f ? 
             (data[9 /* revol_util */] <64.05f ? 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.02226634f : 
                        -0.00788607f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <21.244688f ? 
                        -0.0042026374f : 
                        0.007365465f)) : 
                 (!Double.isNaN(data[2]) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        -0.0035098277f : 
                        0.009313527f) : 
                    0.029034127f)) : 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <85.566795f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <24758.5f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                        -0.019028703f : 
                        -0.004506564f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.031456668f : 
                        -4.8064918E-4f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        -0.020514099f : 
                        -2.0318694E-4f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <26645.0f ? 
                        0.010474231f : 
                        0.054591157f)))) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <17.105097f ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                 (data[10 /* total_acc */] <15.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.012058756f : 
                        0.050070148f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <24.740625f ? 
                        -0.013445807f : 
                        0.003129689f)) : 
                 (Double.isNaN(data[4]) || data[4 /* annual_inc */] <187387.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 49, 0, data[6])) ? 
                        0.007771202f : 
                        0.04387062f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 0, data[6]) || (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 49, 0, data[6])) ? 
                        -0.06646096f : 
                        0.03882056f))) : 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -0.02829409f : 
                        -0.0031960336f) : 
                     (data[7 /* dti */] <21.731249f ? 
                        0.0054030768f : 
                        0.03270398f)) : 
                 (data[10 /* total_acc */] <25.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        0.011283838f : 
                        0.028675927f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                        0.0012730304f : 
                        0.016989648f)))));
    return pred;
  } // constant pool size = 235B, number of visited nodes = 30, static init size = 690B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-68, 31, 0, 0};
  // {00101000 11000011 00100011 11010110 11110010 01000110 00}
  public static final byte[] GRPSPLIT2 = new byte[] {20, -61, -60, 107, 79, 98, 0};
  // {10111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-67, 31, 0, 0};
  // {00010001 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-120, 58, 0, 0};
  // {01101010 11111011 01111111 10101111 11110001 11111010 01}
  public static final byte[] GRPSPLIT5 = new byte[] {86, -33, -2, -11, -113, 95, 2};
  // {00010010 01000001 00000010 11010100 10001010 10011010 10}
  public static final byte[] GRPSPLIT6 = new byte[] {72, -126, 64, 43, 81, 89, 1};
  // {00101111 01010100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-12, 42, 0, 0};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {8, 8, 0, 0};
  // {11000000 00000000 00000000 11000000 00010000 01010100 00}
  public static final byte[] GRPSPLIT9 = new byte[] {3, 0, 0, 3, 8, 42, 0};
  // {01111101 11101101 10011110 11111100 01111100 11001111 0}
  public static final byte[] GRPSPLIT10 = new byte[] {-66, -73, 121, 63, 62, -13, 0};
  // {00010010 00000001 00000000 00000000 01000000 00100000 0}
  public static final byte[] GRPSPLIT11 = new byte[] {72, -128, 0, 0, 2, 4, 0};
  // {00111110 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {124, 27, 0, 0};
  // {01000010 11010001 00001000 01000001 11110000 11000110 00}
  public static final byte[] GRPSPLIT13 = new byte[] {66, -117, 16, -126, 15, 99, 0};
  // {11011111 11111111 01111101 11011111 11111111 11111111 00}
  public static final byte[] GRPSPLIT14 = new byte[] {-5, -1, -66, -5, -1, -1, 0};
  // {00011000 11111101 11101111 10011110 01100011 01000010 11}
  public static final byte[] GRPSPLIT15 = new byte[] {24, -65, -9, 121, -58, 66, 3};
  // {01111000 00101111 11111101 10001111 01011111 10111101 10}
  public static final byte[] GRPSPLIT16 = new byte[] {30, -12, -65, -15, -6, -67, 1};
}


class AtrociousLoanModel_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_22_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <43731.246f ? 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8316.5f ? 
                 (data[4 /* annual_inc */] <22801.0f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        0.011404228f : 
                        0.05549544f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.010882947f : 
                        0.0023010166f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.026537314f : 
                        1.165925E-4f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <76.05937f ? 
                        0.011778591f : 
                        0.028091287f))) : 
             (Double.isNaN(data[7]) || data[7 /* dti */] <16.089727f ? 
                 (data[9 /* revol_util */] <30.414062f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
                        -0.027207175f : 
                        -0.009727464f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        -0.01072367f : 
                        0.017521184f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.0076109986f : 
                        0.0026417705f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        0.0067987083f : 
                        0.05506183f)))) : 
         (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                     (data[11 /* longest_credit_length */] <13.5f ? 
                        -0.0016038652f : 
                        -0.022717047f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <21.869532f ? 
                        -0.0025999083f : 
                        0.010857301f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <57.623436f ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        -0.012056796f : 
                        0.0076795667f) : 
                     (data[7 /* dti */] <16.148438f ? 
                        0.0090662055f : 
                        0.02038328f))) : 
             (data[9 /* revol_util */] <78.85313f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -0.018497013f : 
                        0.0072371736f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <60825.0f ? 
                        0.023639701f : 
                        0.012891672f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[2]) ? 
                        0.008992962f : 
                        0.11204349f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[5])) ? 
                        0.033864666f : 
                        0.104873545f)))));
    return pred;
  } // constant pool size = 239B, number of visited nodes = 31, static init size = 690B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00100001 00000001 11000000 00000110 10000001 00000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {-124, -128, 3, 96, -127, 32, 0};
  // {10101001 01000101 00001000 10001010 11111010 01110001 00}
  public static final byte[] GRPSPLIT2 = new byte[] {-107, -94, 16, 81, 95, -114, 0};
  // {01111101 01001011 00111111 11011010 11111101 01001110 01}
  public static final byte[] GRPSPLIT3 = new byte[] {-66, -46, -4, 91, -65, 114, 2};
  // {01111111 11111011 11111111 11111010 11111111 11101111 01}
  public static final byte[] GRPSPLIT4 = new byte[] {-2, -33, -1, 95, -1, -9, 2};
  // {00000100 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {32, 8, 0, 0};
  // {00010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-120, 12, 0, 0};
  // {01001000 01010011 01010000 01001011 11000010 11001101 00}
  public static final byte[] GRPSPLIT7 = new byte[] {18, -54, 10, -46, 67, -77, 0};
  // {11000011 01110011 10001010 00000010 10010110 00010000 11}
  public static final byte[] GRPSPLIT8 = new byte[] {-61, -50, 81, 64, 105, 8, 3};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {40, 0, 0, 0};
  // {01100010 11101111 11101110 10011111 01100110 01010111 00}
  public static final byte[] GRPSPLIT10 = new byte[] {70, -9, 119, -7, 102, -22, 0};
  // {00111010 01110100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {92, 46, 0, 0};
  // {00111101 01011000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-68, 26, 0, 0};
  // {10101100 01110001 01010011 00000000 10111010 11111000 00}
  public static final byte[] GRPSPLIT13 = new byte[] {53, -114, -54, 0, 93, 31, 0};
  // {11111110 01111111 01111111 10011110 11111111 11111010 00}
  public static final byte[] GRPSPLIT14 = new byte[] {127, -2, -2, 121, -1, 95, 0};
  // {01011011 11101110 00001110 11011101 10010001 11100010 10}
  public static final byte[] GRPSPLIT15 = new byte[] {-38, 119, 112, -69, -119, 71, 1};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {0, 8, 0, 0};
}


class AtrociousLoanModel_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_23_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (Double.isNaN(data[7]) || data[7 /* dti */] <18.198574f ? 
             (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <78.060936f ? 
                        -0.022708222f : 
                        -0.006118106f) : 
                     (data[9 /* revol_util */] <50.039062f ? 
                        -0.015041701f : 
                        -7.762631E-5f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.010297086f : 
                        -4.652711E-4f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -9.3260827E-4f : 
                        0.016826723f))) : 
             (!Double.isNaN(data[2]) ? 
                 (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.009174597f : 
                        0.0034980597f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <25.009375f ? 
                        0.0028311189f : 
                        0.014076504f)) : 
                0.02590032f)) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <85566.49f ? 
             (data[0 /* loan_amnt */] <16141.5f ? 
                 (data[4 /* annual_inc */] <40106.25f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        0.004864726f : 
                        0.029648498f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.002949023f : 
                        0.016928399f)) : 
                 (data[4 /* annual_inc */] <51454.688f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.0071294233f : 
                        0.030452963f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        0.01170374f : 
                        0.03896992f))) : 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25836.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <20.078438f ? 
                        -0.035683654f : 
                        -0.0054783453f) : 
                     (data[9 /* revol_util */] <48.525f ? 
                        -0.011973333f : 
                        0.0032641087f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        0.0024125176f : 
                        0.042229366f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <76.83125f ? 
                        0.013756401f : 
                        0.05064153f)))));
    return pred;
  } // constant pool size = 214B, number of visited nodes = 28, static init size = 612B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {57, 0, 0, 0};
  // {01100000 01101011 01010010 11101110 11111010 01000000 00}
  public static final byte[] GRPSPLIT2 = new byte[] {6, -42, 74, 119, 95, 2, 0};
  // {00000001 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-128, 15, 0, 0};
  // {00011000 01010001 10100001 10011010 10001000 11000100 01}
  public static final byte[] GRPSPLIT4 = new byte[] {24, -118, -123, 89, 17, 35, 2};
  // {01111001 01100000 01110010 11001000 10100101 11110111 10}
  public static final byte[] GRPSPLIT5 = new byte[] {-98, 6, 78, 19, -91, -17, 1};
  // {00111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {60, 0, 0, 0};
  // {01100010 01000010 01011000 01011011 11100010 11001001 00}
  public static final byte[] GRPSPLIT7 = new byte[] {70, 66, 26, -38, 71, -109, 0};
  // {00111111 01100001 00110001 11000001 11001100 10010010 00}
  public static final byte[] GRPSPLIT8 = new byte[] {-4, -122, -116, -125, 51, 73, 0};
  // {00000000 01010000 11101000 00000101 00000100 11000000 00}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 10, 23, -96, 32, 3, 0};
  // {01011110 11101111 01111111 10011011 01110111 01111010 10}
  public static final byte[] GRPSPLIT10 = new byte[] {122, -9, -2, -39, -18, 94, 1};
  // {00000000 01011000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {0, 26, 0, 0};
  // {11101011 11111111 10111111 10011010 11110111 01101011 00}
  public static final byte[] GRPSPLIT12 = new byte[] {-41, -1, -3, 89, -17, -42, 0};
  // {10100011 10010000 01101000 11100100 00101110 00010111 00}
  public static final byte[] GRPSPLIT13 = new byte[] {-59, 9, 22, 39, 116, -24, 0};
  // {10000001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-127, 8, 0, 0};
}


class AtrociousLoanModel_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_24_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <71621.414f ? 
             (data[9 /* revol_util */] <74.057816f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <28.742813f ? 
                        -0.0058838176f : 
                        0.013608992f) : 
                     (data[9 /* revol_util */] <26.614527f ? 
                        -0.0026394627f : 
                        0.016719507f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <23.43164f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.0018673948f : 
                        0.010938102f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.0066219247f : 
                        0.027811436f))) : 
             (data[9 /* revol_util */] <41.032032f ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.024609203f : 
                        0.009407415f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        0.0013599391f : 
                        0.1502442f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <27453.5f ? 
                        -0.010499914f : 
                        0.0036103276f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -9.368108E-5f : 
                        0.06176913f)))) : 
         (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <21.869532f ? 
                        -0.0064365007f : 
                        0.0061628693f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -1.1830203E-4f : 
                        0.054221146f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <57.623436f ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        -0.011834475f : 
                        0.0068320525f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        0.013173593f : 
                        0.034422148f))) : 
             (data[9 /* revol_util */] <78.85313f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <60825.0f ? 
                        0.012733629f : 
                        0.0014339355f) : 
                     (data[10 /* total_acc */] <11.5f ? 
                        0.04259693f : 
                        0.018468784f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <80.181885f ? 
                        0.054356124f : 
                        -0.0107325725f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[5])) ? 
                        0.02631605f : 
                        0.09049494f)))));
    return pred;
  } // constant pool size = 238B, number of visited nodes = 31, static init size = 672B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00010101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-88, 31, 0, 0};
  // {01101010 01110011 00101010 00111010 11011001 01000100 00}
  public static final byte[] GRPSPLIT2 = new byte[] {86, -50, 84, 92, -101, 34, 0};
  // {11101011 11000010 01010010 11010101 11000010 00000011 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-41, 67, 74, -85, 67, -64, 0};
  // {00000000 10000001 00000000 00101100 10000000 11000000 00}
  public static final byte[] GRPSPLIT4 = new byte[] {0, -127, 0, 52, 1, 3, 0};
  // {00000000 00000000 00000000 01100100 00000001 00000000 00}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 0, 0, 38, -128, 0, 0};
  // {00010000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {8, 12, 0, 0};
  // {10000000 01000001 01011011 10000000 00001110 00010001 10}
  public static final byte[] GRPSPLIT7 = new byte[] {1, -126, -38, 1, 112, -120, 1};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {40, 0, 0, 0};
  // {01100010 11101111 11101110 10011111 01100110 01010111 00}
  public static final byte[] GRPSPLIT9 = new byte[] {70, -9, 119, -7, 102, -22, 0};
  // {00010000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {8, 12, 0, 0};
  // {00011000 00000000 00000001 00100000 00010001 10001000 00}
  public static final byte[] GRPSPLIT11 = new byte[] {24, 0, -128, 4, -120, 17, 0};
  // {00111101 01011000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-68, 26, 0, 0};
  // {00010010 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {72, 63, 0, 0};
  // {10100000 01110001 01000011 00000000 10110010 11111000 00}
  public static final byte[] GRPSPLIT14 = new byte[] {5, -114, -62, 0, 77, 31, 0};
  // {01011011 11111110 00111110 11011111 11010101 11110010 10}
  public static final byte[] GRPSPLIT15 = new byte[] {-38, 127, 124, -5, -85, 79, 1};
  // {00000100 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {32, 12, 0, 0};
}


class AtrociousLoanModel_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_25_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <43731.246f ? 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8316.5f ? 
                 (data[4 /* annual_inc */] <22801.0f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        0.010093009f : 
                        0.046569414f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.010959811f : 
                        0.0017459056f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.025522435f : 
                        1.9354298E-4f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <29.367657f ? 
                        0.0126499515f : 
                        0.033918113f))) : 
             (data[9 /* revol_util */] <48.0375f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.022556687f : 
                        -0.011768065f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.0037439724f : 
                        0.020598095f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.0146862725f : 
                        -9.995907E-4f) : 
                     (data[7 /* dti */] <14.955f ? 
                        -0.005068099f : 
                        0.0048495834f)))) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <22.650585f ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                 (data[4 /* annual_inc */] <65662.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        0.005714297f : 
                        0.018902155f) : 
                     (data[0 /* loan_amnt */] <21188.5f ? 
                        -0.007052906f : 
                        0.0053471187f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        0.010540317f : 
                        0.027108831f) : 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <23.5f ? 
                        0.03536776f : 
                        0.08862715f))) : 
             (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[12])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                        -0.049219172f : 
                        -0.015045798f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[5])) ? 
                        0.018925242f : 
                        0.118801825f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT18, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[5])) ? 
                        -0.008785897f : 
                        0.01102854f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <18.196875f ? 
                        -0.014451603f : 
                        0.021568626f)))));
    return pred;
  } // constant pool size = 262B, number of visited nodes = 31, static init size = 816B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00100001 00000001 11001000 00000110 10000001 01000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {-124, -128, 19, 96, -127, 34, 0};
  // {10101001 01000101 00001000 10001010 11111110 01110001 00}
  public static final byte[] GRPSPLIT2 = new byte[] {-107, -94, 16, 81, 127, -114, 0};
  // {01111101 01001011 00111111 11011010 11111101 01001110 01}
  public static final byte[] GRPSPLIT3 = new byte[] {-66, -46, -4, 91, -65, 114, 2};
  // {01111111 11111011 11111111 11111010 11111111 11101111 01}
  public static final byte[] GRPSPLIT4 = new byte[] {-2, -33, -1, 95, -1, -9, 2};
  // {00010001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-120, 8, 0, 0};
  // {10001000 01000011 00010010 11011111 11100010 11010101 01}
  public static final byte[] GRPSPLIT6 = new byte[] {17, -62, 72, -5, 71, -85, 2};
  // {01100011 11110010 10110000 00010110 11001010 00000010 10}
  public static final byte[] GRPSPLIT7 = new byte[] {-58, 79, 13, 104, 83, 64, 1};
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-68, 31, 0, 0};
  // {00000010 01010001 10100010 00100011 10010100 01000100 00}
  public static final byte[] GRPSPLIT9 = new byte[] {64, -118, 69, -60, 41, 34, 0};
  // {00010000 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {8, 10, 0, 0};
  // {01000000 01000001 11110001 00010001 00010000 01000100 00}
  public static final byte[] GRPSPLIT11 = new byte[] {2, -126, -113, -120, 8, 34, 0};
  // {11100101 10000010 00000000 10010001 00100001 10000100 00}
  public static final byte[] GRPSPLIT12 = new byte[] {-89, 65, 0, -119, -124, 33, 0};
  // {11111111 10111100 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-1, 61, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {2, 0, 0, 0};
  // {01011010 00010001 11000000 01000100 01000000 00000001 10}
  public static final byte[] GRPSPLIT15 = new byte[] {90, -120, 3, 34, 2, -128, 1};
  // {01011111 01111111 11100111 11101100 01110001 10111111 10}
  public static final byte[] GRPSPLIT16 = new byte[] {-6, -2, -25, 55, -114, -3, 1};
  // {10001010 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {81, 25, 0, 0};
  // {00011010 01101111 01101100 11011111 11111111 11011010 00}
  public static final byte[] GRPSPLIT18 = new byte[] {88, -10, 54, -5, -1, 91, 0};
  // {00101010 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {84, 11, 0, 0};
}


class AtrociousLoanModel_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_26_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <71621.414f ? 
             (data[9 /* revol_util */] <32.025f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.017968906f : 
                        -0.005301509f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0027140493f : 
                        0.029552955f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[2]) ? 
                        1.2901783E-4f : 
                        0.021729667f) : 
                     (data[0 /* loan_amnt */] <4273.5f ? 
                        -0.001666407f : 
                        0.023271028f))) : 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <85.566795f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        -0.02106344f : 
                        -4.3803212E-4f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        -0.018381571f : 
                        -0.006652264f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <9664.5f ? 
                        -0.029242545f : 
                        -0.0065248967f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        -0.004016713f : 
                        0.01341769f)))) : 
         (data[9 /* revol_util */] <46.25039f ? 
             (Double.isNaN(data[4]) || data[4 /* annual_inc */] <111309.375f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.01565279f : 
                        0.0043223696f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        0.015564645f : 
                        0.0716809f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <24.064219f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.023891501f : 
                        0.010059551f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -0.06266508f : 
                        0.096727505f))) : 
             (Double.isNaN(data[4]) || data[4 /* annual_inc */] <80878.125f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[12])) ? 
                        -0.003914123f : 
                        0.01371254f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT17, 50, 0, data[6])) ? 
                        -0.0055899f : 
                        0.037348278f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT18, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT19, 32, 0, data[5])) ? 
                        -0.03238552f : 
                        -0.0058875894f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28094.5f ? 
                        0.0021127737f : 
                        0.013003255f)))));
    return pred;
  } // constant pool size = 254B, number of visited nodes = 31, static init size = 780B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00010100 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {40, 31, 0, 0};
  // {01010000 01000000 00010001 01010011 11010010 11010100 01}
  public static final byte[] GRPSPLIT2 = new byte[] {10, 2, -120, -54, 75, 43, 2};
  // {11100000 00011000 00101000 11000000 00001000 11010000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {7, 24, 20, 3, 16, 11, 0};
  // {00011101 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-72, 27, 0, 0};
  // {01011000 01100000 01111000 01101110 11110001 11000001 00}
  public static final byte[] GRPSPLIT5 = new byte[] {26, 6, 30, 118, -113, -125, 0};
  // {00000001 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-128, 30, 0, 0};
  // {00111001 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-100, 58, 0, 0};
  // {00011010 01000001 10001010 11010100 11001110 10111010 10}
  public static final byte[] GRPSPLIT8 = new byte[] {88, -126, 81, 43, 115, 93, 1};
  // {10100111 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-27, 45, 0, 0};
  // {00010000 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {8, 25, 0, 0};
  // {01011011 11101111 01111111 10011011 01100110 11111000 00}
  public static final byte[] GRPSPLIT11 = new byte[] {-38, -9, -2, -39, 102, 31, 0};
  // {10010000 00110000 00110000 10100000 00001000 10010011 00}
  public static final byte[] GRPSPLIT12 = new byte[] {9, 12, 12, 5, 16, -55, 0};
  // {11100000 01000001 10100000 00000000 00100000 00010100 10}
  public static final byte[] GRPSPLIT13 = new byte[] {7, -126, 5, 0, 4, 40, 1};
  // {01111011 10111111 01101101 11111101 11111111 11111111 11}
  public static final byte[] GRPSPLIT14 = new byte[] {-34, -3, -74, -65, -1, -1, 3};
  // {00010110 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {104, 14, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {2, 0, 0, 0};
  // {01101101 11111111 11011101 11011000 11100101 11110111 00}
  public static final byte[] GRPSPLIT17 = new byte[] {-74, -1, -69, 27, -89, -17, 0};
  // {10111111 11111110 10111111 11111110 11100111 00100111 00}
  public static final byte[] GRPSPLIT18 = new byte[] {-3, 127, -3, 127, -25, -28, 0};
  // {10111101 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT19 = new byte[] {-67, 58, 0, 0};
}


class AtrociousLoanModel_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_27_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* dti */] <18.198574f ? 
         (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.030984813f : 
                        -0.019726163f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14516.5f ? 
                        -0.016044779f : 
                        7.136446E-4f)) : 
                 (!Double.isNaN(data[2]) ? 
                     (data[11 /* longest_credit_length */] <5.5f ? 
                        0.015324739f : 
                        -0.009322964f) : 
                    0.023756571f)) : 
             (data[9 /* revol_util */] <44.986717f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                        -0.014781245f : 
                        -0.0037638978f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.0011124024f : 
                        0.022751313f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        -9.549784E-4f : 
                        0.0073849945f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.017389376f : 
                        0.073259994f)))) : 
         (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
             (!Double.isNaN(data[2]) ? 
                 (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.012409858f : 
                        9.2929415E-4f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -8.0488174E-4f : 
                        0.010578297f)) : 
                0.023078972f) : 
             (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[3])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <22.240625f ? 
                        -0.029896151f : 
                        0.0032615329f) : 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <19.5f ? 
                        0.019700777f : 
                        0.004273473f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[5])) ? 
                        0.005148972f : 
                        0.09105588f) : 
                     (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT18, 32, 0, data[12])) ? 
                        -0.0012777406f : 
                        0.024949469f)))));
    return pred;
  } // constant pool size = 225B, number of visited nodes = 27, static init size = 714B
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-68, 31, 0, 0};
  // {00110010 01000011 00100011 10100110 11000000 01000011 00}
  public static final byte[] GRPSPLIT1 = new byte[] {76, -62, -60, 101, 3, -62, 0};
  // {10011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {57, 0, 0, 0};
  // {00110011 11101111 11110111 11110111 11111110 11100111 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-52, -9, -17, -17, 127, -25, 0};
  // {00010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-120, 12, 0, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {40, 0, 0, 0};
  // {01100011 10100010 00110000 10010000 10000000 00110000 10}
  public static final byte[] GRPSPLIT6 = new byte[] {-58, 69, 12, 9, 1, 12, 1};
  // {00000100 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {32, 12, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {01100001 10000001 00010011 10000001 00000010 01000000 10}
  public static final byte[] GRPSPLIT9 = new byte[] {-122, -127, -56, -127, 64, 2, 1};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
  // {00111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {60, 0, 0, 0};
  // {01101010 01100010 01011111 11111011 11100110 11001001 00}
  public static final byte[] GRPSPLIT12 = new byte[] {86, 70, -6, -33, 103, -109, 0};
  // {10101100 11011101 10000010 01001011 11010010 01011111 10}
  public static final byte[] GRPSPLIT13 = new byte[] {53, -69, 65, -46, 75, -6, 1};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {40, 0, 0, 0};
  // {01100010 11100010 11101000 10000101 01101111 10000000 10}
  public static final byte[] GRPSPLIT15 = new byte[] {70, 71, 23, -95, -10, 1, 1};
  // {10001000 01100011 01010011 01000010 10110010 11101010 00}
  public static final byte[] GRPSPLIT16 = new byte[] {17, -58, -54, 66, 77, 87, 0};
  // {00011000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {24, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT18 = new byte[] {2, 0, 0, 0};
}


class AtrociousLoanModel_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_28_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* dti */] <16.089727f ? 
         (data[10 /* total_acc */] <15.0f ? 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <13437.5f ? 
                        -0.02592742f : 
                        -4.2224943E-4f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8047.5f ? 
                        -0.0116338f : 
                        0.013914898f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        -0.0127826845f : 
                        0.004719989f) : 
                     (data[9 /* revol_util */] <72.45469f ? 
                        0.0051102755f : 
                        0.017091297f))) : 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <26.066015f ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <3.0f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.030241914f : 
                        -0.015692001f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.021505859f : 
                        0.077684686f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14516.5f ? 
                        -0.011362691f : 
                        -0.0019599255f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        0.0041913427f : 
                        0.041067917f)))) : 
         (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
             (!Double.isNaN(data[2]) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <25.986094f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.0063323085f : 
                        0.0034614843f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.004014169f : 
                        0.012410883f)) : 
                0.020671539f) : 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[3])) ? 
                        -0.012854883f : 
                        6.9337705E-4f) : 
                     (data[7 /* dti */] <21.691353f ? 
                        0.0042963284f : 
                        0.021136537f)) : 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <19.5f ? 
                     (data[0 /* loan_amnt */] <15344.5f ? 
                        0.006552571f : 
                        0.018989673f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -0.01182471f : 
                        0.008868242f)))));
    return pred;
  } // constant pool size = 214B, number of visited nodes = 28, static init size = 612B
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-68, 31, 0, 0};
  // {01101010 11000011 00101010 01000110 01000000 11000001 00}
  public static final byte[] GRPSPLIT1 = new byte[] {86, -61, 84, 98, 2, -125, 0};
  // {01011001 01111001 10111010 11011010 11111111 01100100 01}
  public static final byte[] GRPSPLIT2 = new byte[] {-102, -98, 93, 91, -1, 38, 2};
  // {11001011 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-45, 62, 0, 0};
  // {01111000 11100001 01100100 11011010 11111110 00110100 01}
  public static final byte[] GRPSPLIT4 = new byte[] {30, -121, 38, 91, 127, 44, 2};
  // {00000000 00100000 00010000 10010010 11000011 01100011 00}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 4, 8, 73, -61, -58, 0};
  // {00000100 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {32, 14, 0, 0};
  // {00000001 10100010 00010010 10001000 10000000 01010000 00}
  public static final byte[] GRPSPLIT7 = new byte[] {-128, 69, 72, 17, 1, 10, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {00111010 01000101 00010000 01011011 11010000 11001101 00}
  public static final byte[] GRPSPLIT9 = new byte[] {92, -94, 8, -38, 11, -77, 0};
  // {01001101 01110011 01010111 11001101 11010110 01111111 01}
  public static final byte[] GRPSPLIT10 = new byte[] {-78, -50, -22, -77, 107, -2, 2};
  // {00111110 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {124, 27, 0, 0};
  // {11000010 11010001 00001001 11000001 11110000 10010110 00}
  public static final byte[] GRPSPLIT12 = new byte[] {67, -117, -112, -125, 15, 105, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {32, 0, 0, 0};
  // {00101110 11100000 00110010 10000110 01100110 01111101 00}
  public static final byte[] GRPSPLIT14 = new byte[] {116, 7, 76, 97, 102, -66, 0};
}


class AtrociousLoanModel_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_29_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* dti */] <22.103848f ? 
         (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
             (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <3195.5f ? 
                        -0.046886347f : 
                        -0.022686532f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <38.415627f ? 
                        -0.024173059f : 
                        -0.0015447774f)) : 
                 (data[0 /* loan_amnt */] <7777.5f ? 
                     (data[4 /* annual_inc */] <18578.125f ? 
                        0.009239231f : 
                        -0.017062366f) : 
                     (data[4 /* annual_inc */] <49734.375f ? 
                        0.0101712905f : 
                        -0.0059276177f))) : 
             (data[9 /* revol_util */] <45.997658f ? 
                 (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.017773572f : 
                        -0.0047843386f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        -0.003705347f : 
                        0.008795662f)) : 
                 (data[4 /* annual_inc */] <57676.33f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.001811254f : 
                        0.014045357f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <20445.5f ? 
                        -0.003281791f : 
                        0.0070961276f)))) : 
         (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[12])) ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.046583425f : 
                        -0.01096295f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.063299835f : 
                        0.082646966f)) : 
                 (data[9 /* revol_util */] <33.36094f ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        -0.06093656f : 
                        -0.010801011f) : 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[3])) ? 
                        -0.0020473418f : 
                        0.015097623f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                        -0.009402297f : 
                        0.018008962f) : 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        0.0031279647f : 
                        0.01246869f)) : 
                 (data[9 /* revol_util */] <49.53594f ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        0.0041485685f : 
                        0.022959149f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <87031.25f ? 
                        0.017870998f : 
                        0.004500644f)))));
    return pred;
  } // constant pool size = 240B, number of visited nodes = 31, static init size = 684B
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-68, 31, 0, 0};
  // {10011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {57, 0, 0, 0};
  // {00100010 01000011 00010011 01110010 10010100 11000111 00}
  public static final byte[] GRPSPLIT2 = new byte[] {68, -62, -56, 78, 41, -29, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {40, 0, 0, 0};
  // {01100000 01001011 00101010 11011110 11110110 11000100 00}
  public static final byte[] GRPSPLIT4 = new byte[] {6, -46, 84, 123, 111, 35, 0};
  // {00011011 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-40, 31, 0, 0};
  // {00001000 01100001 10111011 10001011 10000001 11001100 00}
  public static final byte[] GRPSPLIT6 = new byte[] {16, -122, -35, -47, -127, 51, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {00111110 01010111 00010010 11000110 11000010 00000111 00}
  public static final byte[] GRPSPLIT8 = new byte[] {124, -22, 72, 99, 67, -32, 0};
  // {00010001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-120, 0, 0, 0};
  // {01111111 11110111 11111011 11111111 11111110 11111111 10}
  public static final byte[] GRPSPLIT10 = new byte[] {-2, -17, -33, -1, 127, -1, 1};
  // {00000000 00100000 10001001 00010000 00110101 00100000 00}
  public static final byte[] GRPSPLIT11 = new byte[] {0, 4, -111, 8, -84, 4, 0};
  // {01100010 01010100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {70, 42, 0, 0};
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {44, 0, 0, 0};
  // {01001000 01111111 01101110 01001111 11110110 01011010 00}
  public static final byte[] GRPSPLIT14 = new byte[] {18, -2, 118, -14, 111, 90, 0};
  // {00111011 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-36, 27, 0, 0};
  // {10000010 10000000 00000000 00000000 00000000 00000000 00}
  public static final byte[] GRPSPLIT16 = new byte[] {65, 1, 0, 0, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {2, 0, 0, 0};
}


class AtrociousLoanModel_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_30_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <85566.49f ? 
             (data[9 /* revol_util */] <74.057816f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (data[4 /* annual_inc */] <38499.0f ? 
                        0.0028492287f : 
                        -0.007433985f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        0.0036303764f : 
                        0.024294388f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <18020.5f ? 
                     (data[4 /* annual_inc */] <41104.125f ? 
                        0.012246035f : 
                        0.0020998286f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.0035464577f : 
                        0.03305804f))) : 
             (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <3.0f ? 
                 (data[11 /* longest_credit_length */] <14.0f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.009304623f : 
                        0.036266003f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <13.244687f ? 
                        -0.023707947f : 
                        -0.010336388f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <23680.5f ? 
                        -0.03093365f : 
                        0.045852967f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <91.8125f ? 
                        0.029752841f : 
                        0.15076208f)))) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <99511.58f ? 
             (data[0 /* loan_amnt */] <16141.5f ? 
                 (data[4 /* annual_inc */] <40312.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.0010258359f : 
                        0.024331743f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.0036226262f : 
                        0.015557717f)) : 
                 (data[4 /* annual_inc */] <60288.28f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.0024903214f : 
                        0.020326838f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        0.006555474f : 
                        0.030721232f))) : 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25969.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <9977.5f ? 
                        0.03448787f : 
                        -0.039073315f) : 
                     (data[9 /* revol_util */] <50.546875f ? 
                        -0.0175799f : 
                        0.0018658406f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                        -0.0052725105f : 
                        0.01463046f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        -0.03672475f : 
                        0.030961998f)))));
    return pred;
  } // constant pool size = 223B, number of visited nodes = 31, static init size = 582B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00010001 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-120, 31, 0, 0};
  // {01100000 00001010 01101010 11001010 10010000 01010000 00}
  public static final byte[] GRPSPLIT2 = new byte[] {6, 80, 86, 83, 9, 10, 0};
  // {00011110 01010011 11110001 00000110 11001101 00011001 00}
  public static final byte[] GRPSPLIT3 = new byte[] {120, -54, -113, 96, -77, -104, 0};
  // {00000001 10000000 00000000 00011100 00000000 11010000 00}
  public static final byte[] GRPSPLIT4 = new byte[] {-128, 1, 0, 56, 0, 11, 0};
  // {01000100 01100000 00010011 00010110 11100100 00111001 00}
  public static final byte[] GRPSPLIT5 = new byte[] {34, 6, -56, 104, 39, -100, 0};
  // {00111111 01101101 00110101 11001001 11001110 10110010 01}
  public static final byte[] GRPSPLIT6 = new byte[] {-4, -74, -84, -109, 115, 77, 2};
  // {00000000 01010000 11100000 00000101 00000000 11000000 00}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 10, 7, -96, 0, 3, 0};
  // {01111010 11111111 11111111 00011111 11110110 01111110 10}
  public static final byte[] GRPSPLIT8 = new byte[] {94, -1, -1, -8, 111, 126, 1};
  // {00000010 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {64, 27, 0, 0};
  // {11101011 11101111 10111111 00011010 11110111 01101111 10}
  public static final byte[] GRPSPLIT10 = new byte[] {-41, -9, -3, 88, -17, -10, 1};
  // {00100010 00010000 00101000 11100100 00111110 01010101 00}
  public static final byte[] GRPSPLIT11 = new byte[] {68, 8, 20, 39, 124, -86, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {48, 0, 0, 0};
  // {01110101 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-82, 30, 0, 0};
}


class AtrociousLoanModel_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_31_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* dti */] <16.089727f ? 
         (data[9 /* revol_util */] <85.42422f ? 
             (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -0.027563771f : 
                        -0.014238023f) : 
                     (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[12])) ? 
                        -0.01543738f : 
                        1.7743634E-5f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14516.5f ? 
                        -0.0060936343f : 
                        0.0054239407f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        0.011884483f : 
                        0.050362896f))) : 
             (data[4 /* annual_inc */] <29889.758f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (Double.isNaN(data[2]) || data[2 /* emp_length */] <6.5f ? 
                        -0.007137542f : 
                        0.07914699f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        0.0064638983f : 
                        0.068582475f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <6429.5f ? 
                        -0.012699697f : 
                        0.004110777f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        0.013946026f : 
                        0.06644805f)))) : 
         (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <63.183594f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (data[4 /* annual_inc */] <21150.0f ? 
                        0.042602163f : 
                        -0.021850219f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <29.160313f ? 
                        -0.0066721654f : 
                        0.0126560815f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <19367.5f ? 
                        -0.008164865f : 
                        0.0045936634f) : 
                     (data[4 /* annual_inc */] <45675.0f ? 
                        0.021552728f : 
                        0.0052654077f))) : 
             (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                 (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[3])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        -0.0052540964f : 
                        0.0061383513f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <25.05233f ? 
                        0.0056447284f : 
                        0.01866974f)) : 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <19.5f ? 
                     (data[0 /* loan_amnt */] <15344.5f ? 
                        0.005443447f : 
                        0.016828727f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                        -0.009885494f : 
                        0.008783312f)))));
    return pred;
  } // constant pool size = 235B, number of visited nodes = 31, static init size = 654B
  // {00011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {56, 0, 0, 0};
  // {01100000 01001011 01110111 11111110 11110100 01000001 00}
  public static final byte[] GRPSPLIT1 = new byte[] {6, -46, -18, 127, 47, -126, 0};
  // {00101100 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {52, 47, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {00000001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-128, 12, 0, 0};
  // {00110001 10100000 00110000 00000000 10001100 01010001 00}
  public static final byte[] GRPSPLIT5 = new byte[] {-116, 5, 12, 0, 49, -118, 0};
  // {00001000 01100011 01101001 00011010 00001001 10111000 10}
  public static final byte[] GRPSPLIT6 = new byte[] {16, -58, -106, 88, -112, 29, 1};
  // {01100101 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-90, 1, 0, 0};
  // {11100000 11100001 00001010 10001000 00010111 01110110 00}
  public static final byte[] GRPSPLIT8 = new byte[] {7, -121, 80, 17, -24, 110, 0};
  // {00000100 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {32, 8, 0, 0};
  // {00111111 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-4, 27, 0, 0};
  // {00011010 11001111 11110101 00011001 11110110 11001111 00}
  public static final byte[] GRPSPLIT11 = new byte[] {88, -13, -81, -104, 111, -13, 0};
  // {11100010 11010101 00101000 11000011 11001000 01000110 10}
  public static final byte[] GRPSPLIT12 = new byte[] {71, -85, 20, -61, 19, 98, 1};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {2, 0, 0, 0};
  // {00100100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {36, 0, 0, 0};
  // {01000010 01100000 01011010 01011011 10110000 01001001 00}
  public static final byte[] GRPSPLIT15 = new byte[] {66, 6, 90, -38, 13, -110, 0};
  // {00101110 11100000 00110010 10000110 01100110 01011101 00}
  public static final byte[] GRPSPLIT16 = new byte[] {116, 7, 76, 97, 102, -70, 0};
}


class AtrociousLoanModel_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_32_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <72.15566f ? 
         (Double.isNaN(data[7]) || data[7 /* dti */] <21.01037f ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                 (data[4 /* annual_inc */] <57779.516f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <13437.5f ? 
                        -0.004149867f : 
                        0.007999875f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14516.5f ? 
                        -0.015683457f : 
                        -0.0047843903f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <14.645312f ? 
                        -0.0074121677f : 
                        0.014930958f) : 
                     (data[7 /* dti */] <10.176898f ? 
                        0.013555181f : 
                        0.045973003f))) : 
             (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[12])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                        -0.016080795f : 
                        0.05087035f) : 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                        -0.008547534f : 
                        0.008493469f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        -0.00578602f : 
                        0.020465916f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <28.127731f ? 
                        0.0060142004f : 
                        0.01627467f)))) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <24.2908f ? 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <7508.5f ? 
                        -0.019697212f : 
                        -0.004480505f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28532.5f ? 
                        0.004471804f : 
                        0.041645885f)) : 
                 (data[10 /* total_acc */] <18.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        0.0038412907f : 
                        0.018484782f) : 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[1])) ? 
                        -6.64892E-4f : 
                        0.009302096f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <21.5f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <34.825626f ? 
                        0.010075022f : 
                        -0.0601349f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.0316002f : 
                        0.0047386233f)) : 
                 (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[3])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <19367.5f ? 
                        0.0076999874f : 
                        0.025797028f) : 
                     (data[11 /* longest_credit_length */] <12.5f ? 
                        0.014019788f : 
                        0.0369985f)))));
    return pred;
  } // constant pool size = 222B, number of visited nodes = 31, static init size = 576B
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {0, 8, 0, 0};
  // {00100000 11000011 00011000 10010000 10001000 01010000 00}
  public static final byte[] GRPSPLIT1 = new byte[] {4, -61, 24, 9, 17, 10, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {00101100 01010001 11001010 01000111 11110000 01011100 00}
  public static final byte[] GRPSPLIT3 = new byte[] {52, -118, 83, -30, 15, 58, 0};
  // {00000001 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-128, 40, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {48, 0, 0, 0};
  // {01001010 01111111 11111100 10001011 01110110 11111011 00}
  public static final byte[] GRPSPLIT6 = new byte[] {82, -2, 63, -47, 110, -33, 0};
  // {00000110 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {96, 10, 0, 0};
  // {10101111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-11, 15, 0, 0};
  // {01100010 01010010 00000000 10000010 00001000 11010100 00}
  public static final byte[] GRPSPLIT9 = new byte[] {70, 74, 0, 65, 16, 43, 0};
  // {01100000 01110001 10101010 10011010 11110001 01100100 00}
  public static final byte[] GRPSPLIT10 = new byte[] {6, -114, 85, 89, -113, 38, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {2, 0, 0, 0};
  // {01111001 00100111 01000011 01010111 11000100 01001010 00}
  public static final byte[] GRPSPLIT12 = new byte[] {-98, -28, -62, -22, 35, 82, 0};
  // {00000000 11010000 00100000 10000000 00100011 00010000 10}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 11, 4, 1, -60, 8, 1};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {32, 0, 0, 0};
}


class AtrociousLoanModel_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_33_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[4 /* annual_inc */] <85566.49f ? 
             (data[9 /* revol_util */] <26.520702f ? 
                 (data[10 /* total_acc */] <10.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.008499669f : 
                        0.024094068f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <12898.5f ? 
                        -0.017094463f : 
                        -0.0026972785f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                     (data[4 /* annual_inc */] <33270.0f ? 
                        0.00916838f : 
                        -0.0014979056f) : 
                     (data[0 /* loan_amnt */] <4273.5f ? 
                        -8.592283E-4f : 
                        0.020896804f))) : 
             (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <3.0f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <91.8125f ? 
                        -0.035393614f : 
                        0.002562735f) : 
                     (data[11 /* longest_credit_length */] <14.0f ? 
                        -0.005147093f : 
                        -0.0149741005f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <24758.5f ? 
                        -0.014997696f : 
                        0.045688774f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <91.8125f ? 
                        0.035517875f : 
                        0.14377052f)))) : 
         (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                     (data[11 /* longest_credit_length */] <13.5f ? 
                        -8.63692E-4f : 
                        -0.02207438f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                        2.6896424E-4f : 
                        0.02572084f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <25.273438f ? 
                     (data[10 /* total_acc */] <6.5f ? 
                        0.11065669f : 
                        -0.008993482f) : 
                     (data[4 /* annual_inc */] <65662.5f ? 
                        0.01511591f : 
                        0.005783722f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <20445.5f ? 
                        -0.038078427f : 
                        0.018367136f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.368906f ? 
                        0.0031441886f : 
                        0.01863874f)) : 
                 (data[9 /* revol_util */] <77.842186f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(43, 2, data[6]) || (GenModel.bitSetIsInRange(43, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 43, 2, data[6])) ? 
                        0.010969989f : 
                        0.042961866f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        0.02005678f : 
                        0.061392177f)))));
    return pred;
  } // constant pool size = 211B, number of visited nodes = 31, static init size = 510B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00010000 11001011 00101011 11110000 00011000 01110101 00}
  public static final byte[] GRPSPLIT1 = new byte[] {8, -45, -44, 15, 24, -82, 0};
  // {00010101 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-88, 27, 0, 0};
  // {01011011 11110011 10111110 11111111 11111111 11111011 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-38, -49, 125, -1, -1, -33, 0};
  // {01000000 01000000 00010011 00010110 11000100 00011001 00}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 2, -56, 104, 35, -104, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {40, 0, 0, 0};
  // {01000010 11000011 11100000 10010111 01100110 00010111 00}
  public static final byte[] GRPSPLIT6 = new byte[] {66, -61, 7, -23, 102, -24, 0};
  // {00111010 01110100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {92, 46, 0, 0};
  // {00010000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {8, 12, 0, 0};
  // {00111000 01111100 01011111 01011100 10110011 11111000 00}
  public static final byte[] GRPSPLIT9 = new byte[] {28, 62, -6, 58, -51, 31, 0};
  // {11111111 11111111 01111111 11011111 11111111 11111010 00}
  public static final byte[] GRPSPLIT10 = new byte[] {-1, -1, -2, -5, -1, 95, 0};
  // {...2 0-bits... 00000000 00000001 00000000 00000000 01000011 000}
  public static final byte[] GRPSPLIT11 = new byte[] {0, -128, 0, 0, -62, 0};
  // {00000110 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {96, 41, 0, 0};
}


class AtrociousLoanModel_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_34_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <44.986717f ? 
         (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <23244.5f ? 
                        -0.019498685f : 
                        -0.006263955f) : 
                     (data[11 /* longest_credit_length */] <13.5f ? 
                        0.001798504f : 
                        -0.011196269f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.012441785f : 
                        0.014664335f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.368906f ? 
                        0.044369478f : 
                        0.11534411f))) : 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
                        -0.008724889f : 
                        0.0024702752f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <17.495625f ? 
                        -7.213065E-4f : 
                        0.019305414f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <27.493126f ? 
                        -0.01842388f : 
                        0.06679413f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        0.01068307f : 
                        0.059961315f)))) : 
         (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <23.43164f ? 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        -0.015690498f : 
                        -0.00522781f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.005628561f : 
                        0.01093826f)) : 
                 (data[0 /* loan_amnt */] <8855.5f ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <78.75938f ? 
                        -0.013686084f : 
                        0.0055635767f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <106781.25f ? 
                        0.011545707f : 
                        -0.010733154f))) : 
             (data[4 /* annual_inc */] <85566.49f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
                     (data[4 /* annual_inc */] <37191.75f ? 
                        0.0133809475f : 
                        3.874926E-4f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        0.011330389f : 
                        0.037668627f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25028.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.018879108f : 
                        -0.0036423705f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -0.0017165301f : 
                        0.015876308f)))));
    return pred;
  } // constant pool size = 231B, number of visited nodes = 31, static init size = 630B
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {44, 0, 0, 0};
  // {01000000 01001011 00110011 11011111 11110000 11000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {2, -46, -52, -5, 15, 35, 0};
  // {01010010 00100010 00010000 01100100 00000011 01000000 00}
  public static final byte[] GRPSPLIT2 = new byte[] {74, 68, 8, 38, -64, 2, 0};
  // {00000000 01000000 11101010 00010010 01010100 00111001 00}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 2, 87, 72, 42, -100, 0};
  // {00010001 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-120, 31, 0, 0};
  // {11010100 01000001 01000001 00000001 00000011 11011100 00}
  public static final byte[] GRPSPLIT5 = new byte[] {43, -126, -126, -128, -64, 59, 0};
  // {00111111 01110000 01111010 11111010 11111111 10110010 00}
  public static final byte[] GRPSPLIT6 = new byte[] {-4, 14, 94, 95, -1, 77, 0};
  // {00100000 00000000 01100000 01000000 00000000 00010000 00}
  public static final byte[] GRPSPLIT7 = new byte[] {4, 0, 6, 2, 0, 8, 0};
  // {00111111 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-4, 31, 0, 0};
  // {00100010 11010101 00100000 01100011 10010000 11000110 00}
  public static final byte[] GRPSPLIT9 = new byte[] {68, -85, 4, -58, 9, 99, 0};
  // {00011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {56, 0, 0, 0};
  // {11000000 00100010 00010010 00000000 01100000 00011001 10}
  public static final byte[] GRPSPLIT11 = new byte[] {3, 68, 72, 0, 6, -104, 1};
  // {00000110 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {96, 31, 0, 0};
  // {01111001 01101101 10111111 11111110 11110110 11101011 00}
  public static final byte[] GRPSPLIT13 = new byte[] {-98, -74, -3, 127, 111, -41, 0};
  // {00110001 01110000 00101000 11100100 11111110 00110010 00}
  public static final byte[] GRPSPLIT14 = new byte[] {-116, 14, 20, 39, 127, 76, 0};
}


class AtrociousLoanModel_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_35_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* dti */] <16.089727f ? 
         (data[10 /* total_acc */] <15.0f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <34731.5f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        -0.016079267f : 
                        0.002628014f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.021163391f : 
                        0.17189823f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        0.0023408968f : 
                        0.012302174f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        0.044384975f : 
                        0.13504359f))) : 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14516.5f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (data[9 /* revol_util */] <26.507812f ? 
                        -0.023147697f : 
                        -0.009753109f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.032699373f : 
                        0.0038100975f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[3])) ? 
                        -0.010117809f : 
                        0.0031001528f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <114543.41f ? 
                        0.010076189f : 
                        -0.007420307f)))) : 
         (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <63.183594f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (data[4 /* annual_inc */] <21150.0f ? 
                        0.028108612f : 
                        -0.017793898f) : 
                     (data[11 /* longest_credit_length */] <8.0f ? 
                        0.012978946f : 
                        -0.004939645f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <19367.5f ? 
                        -0.007530821f : 
                        0.004608354f) : 
                     (!Double.isNaN(data[2]) ? 
                        0.008296682f : 
                        0.04319641f))) : 
             (data[9 /* revol_util */] <25.778906f ? 
                 (data[10 /* total_acc */] <18.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.010202339f : 
                        0.0339352f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -0.014890302f : 
                        0.013373865f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[5])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[3])) ? 
                        0.0029102676f : 
                        0.010138862f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT17, 50, 0, data[6])) ? 
                        0.010690828f : 
                        0.041070294f)))));
    return pred;
  } // constant pool size = 244B, number of visited nodes = 31, static init size = 720B
  // {01011000 01101011 10111010 11011010 11111111 01100101 00}
  public static final byte[] GRPSPLIT0 = new byte[] {26, -42, 93, 91, -1, -90, 0};
  // {00011001 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-104, 30, 0, 0};
  // {00100010 00000000 00000000 00000100 00000000 00001000 00}
  public static final byte[] GRPSPLIT2 = new byte[] {68, 0, 0, 32, 0, 16, 0};
  // {00000000 00001000 00000000 01001000 00000000 01000100 00}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 16, 0, 18, 0, 34, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {00001000 11000100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {16, 35, 0, 0};
  // {00000101 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-96, 14, 0, 0};
  // {01101101 01100111 11111110 10011011 11111101 01111011 10}
  public static final byte[] GRPSPLIT7 = new byte[] {-74, -26, 127, -39, -65, -34, 1};
  // {00000000 01000001 11110010 10011010 11110010 10010000 00}
  public static final byte[] GRPSPLIT8 = new byte[] {0, -126, 79, 89, 79, 9, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {40, 0, 0, 0};
  // {00111111 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-4, 27, 0, 0};
  // {00001010 11000011 10110001 00010001 10110110 10001111 00}
  public static final byte[] GRPSPLIT11 = new byte[] {80, -61, -115, -120, 109, -15, 0};
  // {11100010 11010101 00101000 11000011 11001000 01000110 10}
  public static final byte[] GRPSPLIT12 = new byte[] {71, -85, 20, -61, 19, 98, 1};
  // {00110110 01000001 01110001 00110001 01100010 00011110 00}
  public static final byte[] GRPSPLIT13 = new byte[] {108, -126, -114, -116, 70, 120, 0};
  // {10100001 00100000 01001000 01001100 00010000 10010000 10}
  public static final byte[] GRPSPLIT14 = new byte[] {-123, 4, 18, 50, 8, 9, 1};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {8, 8, 0, 0};
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {44, 0, 0, 0};
  // {11001001 01101111 11111110 01001010 10010111 10010000 10}
  public static final byte[] GRPSPLIT17 = new byte[] {-109, -10, 127, 82, -23, 9, 1};
}


class AtrociousLoanModel_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_36_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <72.15566f ? 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <99511.58f ? 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
                 (data[4 /* annual_inc */] <40085.938f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8230.5f ? 
                        -0.0010589376f : 
                        0.009998314f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                        -0.0101130335f : 
                        0.0010809371f)) : 
                 (data[4 /* annual_inc */] <52273.438f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        0.012516935f : 
                        0.035735317f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        0.0020558347f : 
                        0.031362265f))) : 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25971.5f ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.02748217f : 
                        -0.014323846f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.017332083f : 
                        0.010237019f)) : 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.03500512f : 
                        -0.0016958687f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -4.897183E-4f : 
                        0.0693821f)))) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <23.822168f ? 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <3195.5f ? 
                        -0.046700187f : 
                        -0.01353016f) : 
                     (data[2 /* emp_length */] <2.5f ? 
                        -0.010913808f : 
                        0.0030953155f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <34461.5f ? 
                        -0.0028265368f : 
                        0.026892548f) : 
                     (data[10 /* total_acc */] <18.5f ? 
                        0.012878318f : 
                        0.0035099133f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <34.758804f ? 
                        0.0049286317f : 
                        -0.04826407f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        0.053715114f : 
                        0.14934814f)) : 
                 (data[0 /* loan_amnt */] <8316.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(46, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 46, 1, data[6])) ? 
                        -0.016848413f : 
                        0.013600572f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        0.019892484f : 
                        0.13231523f)))));
    return pred;
  } // constant pool size = 230B, number of visited nodes = 31, static init size = 624B
  // {00011101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-72, 31, 0, 0};
  // {01000001 00000001 01110001 10000000 00000110 10000010 00}
  public static final byte[] GRPSPLIT1 = new byte[] {-126, -128, -114, 1, 96, 65, 0};
  // {00010000 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {8, 24, 0, 0};
  // {01001001 11100001 10100000 00100110 11011101 11010010 01}
  public static final byte[] GRPSPLIT3 = new byte[] {-110, -121, 5, 100, -69, 75, 2};
  // {10010101 11000010 00110010 00010101 01100011 00100001 10}
  public static final byte[] GRPSPLIT4 = new byte[] {-87, 67, 76, -88, -58, -124, 1};
  // {00111011 01101110 10111100 10101111 11110110 00111000 00}
  public static final byte[] GRPSPLIT5 = new byte[] {-36, 118, 61, -11, 111, 28, 0};
  // {01000010 00000010 11101001 10000100 10010000 01101100 00}
  public static final byte[] GRPSPLIT6 = new byte[] {66, 64, -105, 33, 9, 54, 0};
  // {10101111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-11, 15, 0, 0};
  // {11101010 01011111 00001010 10011010 01001000 11111111 00}
  public static final byte[] GRPSPLIT8 = new byte[] {87, -6, 80, 89, 18, -1, 0};
  // {01101000 11100111 10111110 11011010 11110011 01100110 00}
  public static final byte[] GRPSPLIT9 = new byte[] {22, -25, 125, 91, -49, 102, 0};
  // {01111001 10100100 01000011 11010111 11000100 01001010 00}
  public static final byte[] GRPSPLIT10 = new byte[] {-98, 37, -62, -21, 35, 82, 0};
  // {00000101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-96, 0, 0, 0};
  // {00000000 00000011 00000000 00000000 00010001 00000000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {0, -64, 0, 0, -120, 0, 0};
  // {...1 0-bits... 00111111 11111111 11111111 01011011 11111111 111011}
  public static final byte[] GRPSPLIT13 = new byte[] {-4, -1, -1, -38, -1, 55};
  // {00000010 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {64, 1, 0, 0};
}


class AtrociousLoanModel_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_37_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[7 /* dti */] <13.356035f ? 
             (data[10 /* total_acc */] <9.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.0219165f : 
                        0.0050801565f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8047.5f ? 
                        0.014836726f : 
                        0.06212893f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                        -0.024345413f : 
                        -0.0130392965f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <12898.5f ? 
                        -0.010179307f : 
                        -1.8164409E-4f))) : 
             (!Double.isNaN(data[2]) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (data[4 /* annual_inc */] <41182.125f ? 
                        0.0047168406f : 
                        -0.0033001958f) : 
                     (data[0 /* loan_amnt */] <4273.5f ? 
                        -0.0035259007f : 
                        0.01885722f)) : 
                0.0193119f)) : 
         (Double.isNaN(data[4]) || data[4 /* annual_inc */] <99511.58f ? 
             (data[4 /* annual_inc */] <42166.676f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <93.8f ? 
                        5.034351E-4f : 
                        0.05053549f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        -0.0075591714f : 
                        0.023488296f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <20391.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.0027111124f : 
                        0.008909215f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.005966196f : 
                        0.018491019f))) : 
             (data[10 /* total_acc */] <24.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.02985931f : 
                        0.0068919f) : 
                     (data[9 /* revol_util */] <67.73281f ? 
                        0.02696997f : 
                        0.086488724f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        -0.01054311f : 
                        0.023602173f) : 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <19.5f ? 
                        0.021748511f : 
                        -0.0111237075f)))));
    return pred;
  } // constant pool size = 209B, number of visited nodes = 28, static init size = 582B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00001000 10101001 11001010 00000100 01000100 01}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 16, -107, 83, 32, 34, 2};
  // {11111000 11101001 11101011 11011010 11110101 11111111 01}
  public static final byte[] GRPSPLIT2 = new byte[] {31, -105, -41, 91, -81, -1, 2};
  // {01111001 01000010 00110010 10001110 11111011 11000000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-98, 66, 76, 113, -33, 3, 0};
  // {00111001 01110100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-100, 46, 0, 0};
  // {00010000 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {8, 10, 0, 0};
  // {00111111 01100001 00110001 10010101 11000101 00010010 00}
  public static final byte[] GRPSPLIT6 = new byte[] {-4, -122, -116, -87, -93, 72, 0};
  // {01111010 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {94, 15, 0, 0};
  // {00000000 01010011 11101000 10010101 00010100 11001000 00}
  public static final byte[] GRPSPLIT8 = new byte[] {0, -54, 23, -87, 40, 19, 0};
  // {01010001 10101110 01110110 01001011 11100001 10011111 10}
  public static final byte[] GRPSPLIT9 = new byte[] {-118, 117, 110, -46, -121, -7, 1};
  // {10100000 00000000 01000000 00010000 00100011 01000000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {5, 0, 2, 8, -60, 2, 0};
  // {11111111 01111100 11111101 00011010 11111111 11101011 00}
  public static final byte[] GRPSPLIT11 = new byte[] {-1, 62, -65, 88, -1, -41, 0};
  // {00000001 10000011 10101000 01100000 00010110 00010100 11}
  public static final byte[] GRPSPLIT12 = new byte[] {-128, -63, 21, 6, 104, 40, 3};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 8, 0, 0};
}


class AtrociousLoanModel_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_38_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <25.778906f ? 
         (data[10 /* total_acc */] <11.0f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                 (data[10 /* total_acc */] <3.5f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        0.016348993f : 
                        0.13877493f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                        -0.012489944f : 
                        0.09851739f)) : 
                 (data[9 /* revol_util */] <0.20109375f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 0, data[6]) || (GenModel.bitSetIsInRange(48, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 48, 0, data[6])) ? 
                        0.02137031f : 
                        0.09961524f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        0.0071047028f : 
                        0.043810435f))) : 
             (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <21602.5f ? 
                        -0.018678578f : 
                        -0.002736635f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.0087757865f : 
                        0.024997957f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (data[2 /* emp_length */] <4.5f ? 
                        0.018611839f : 
                        -0.029776322f) : 
                     (data[10 /* total_acc */] <19.5f ? 
                        0.08645059f : 
                        0.020852188f)))) : 
         (data[4 /* annual_inc */] <85566.49f ? 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
                 (data[4 /* annual_inc */] <36538.125f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <7548.5f ? 
                        0.0031087378f : 
                        0.014713124f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        -0.0037387137f : 
                        0.008875733f)) : 
                 (data[4 /* annual_inc */] <60722.25f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        0.00126256f : 
                        0.015810637f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25038.0f ? 
                        9.0993306E-4f : 
                        0.016726077f))) : 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <29071.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        -0.020415533f : 
                        0.014174344f) : 
                     (data[11 /* longest_credit_length */] <15.5f ? 
                        -0.002166676f : 
                        -0.010317577f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.026553832f : 
                        0.0037377647f) : 
                     (!Double.isNaN(data[1 /* term */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        0.016256092f : 
                        0.0327562f)))));
    return pred;
  } // constant pool size = 214B, number of visited nodes = 31, static init size = 528B
  // {10010000 01001011 00101011 11110000 01011010 01100101 00}
  public static final byte[] GRPSPLIT0 = new byte[] {9, -46, -44, 15, 90, -90, 0};
  // {00100000 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 9, 0, 0};
  // {10010000 01000000 00000000 11010000 00010000 00000100}
  public static final byte[] GRPSPLIT2 = new byte[] {9, 2, 0, 11, 8, 32};
  // {00000001 11000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-128, 3, 0, 0};
  // {11100100 10000010 01001000 11010100 01011010 10110101 10}
  public static final byte[] GRPSPLIT4 = new byte[] {39, 65, 18, 43, 90, -83, 1};
  // {01010100 00100101 01011111 01111100 11011011 11111000 00}
  public static final byte[] GRPSPLIT5 = new byte[] {42, -92, -6, 62, -37, 31, 0};
  // {00010101 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-88, 27, 0, 0};
  // {01011000 01110111 01011111 10011011 11110110 11111111 00}
  public static final byte[] GRPSPLIT7 = new byte[] {26, -18, -6, -39, 111, -1, 0};
  // {11011001 11111101 10111111 11111111 11110011 11101011 00}
  public static final byte[] GRPSPLIT8 = new byte[] {-101, -65, -3, -1, -49, -41, 0};
  // {00000000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 12, 0, 0};
  // {00100001 00010000 00101000 11100100 00110110 10010000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {-124, 8, 20, 39, 108, 9, 0};
  // {00111111 01111111 00111110 11111111 11111110 11111011 10}
  public static final byte[] GRPSPLIT11 = new byte[] {-4, -2, 124, -1, 127, -33, 1};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 0, 0, 0};
}


class AtrociousLoanModel_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_39_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <77.589455f ? 
         (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
             (data[0 /* loan_amnt */] <7642.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (data[2 /* emp_length */] <9.5f ? 
                        -0.028019076f : 
                        -0.012194294f) : 
                     (data[0 /* loan_amnt */] <2843.5f ? 
                        -0.025955033f : 
                        -0.0076603414f)) : 
                 (data[11 /* longest_credit_length */] <6.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.0065145567f : 
                        0.028758872f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.012014205f : 
                        -6.898431E-4f))) : 
             (data[7 /* dti */] <10.309922f ? 
                 (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[3])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <16133.5f ? 
                        -0.017670346f : 
                        -0.0043019745f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.008390208f : 
                        0.0059732604f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.0068421224f : 
                        0.0028867868f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <10203.5f ? 
                        0.0074631553f : 
                        0.02251158f)))) : 
         (data[4 /* annual_inc */] <85566.49f ? 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <21119.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (data[4 /* annual_inc */] <31955.562f ? 
                        0.012575966f : 
                        -0.0018703107f) : 
                     (data[0 /* loan_amnt */] <7588.5f ? 
                        0.0035669275f : 
                        0.013515493f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        0.011513348f : 
                        0.06367726f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        0.03055609f : 
                        0.059923563f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -0.035241976f : 
                        -0.008560939f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <26375.5f ? 
                        -0.0101296585f : 
                        0.008214246f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[5])) ? 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[1])) ? 
                        -0.0012490675f : 
                        0.0099961255f) : 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <24.5f ? 
                        0.024368351f : 
                        0.12598275f)))));
    return pred;
  } // constant pool size = 238B, number of visited nodes = 31, static init size = 672B
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-68, 31, 0, 0};
  // {10111000 11000101 00100001 10000110 11100010 01100101 00}
  public static final byte[] GRPSPLIT1 = new byte[] {29, -93, -124, 97, 71, -90, 0};
  // {00101001 10101101 00110111 11111001 11111110 01100111 10}
  public static final byte[] GRPSPLIT2 = new byte[] {-108, -75, -20, -97, 127, -26, 1};
  // {00000010 11010011 01100011 00100011 10110100 11001000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {64, -53, -58, -60, 45, 19, 0};
  // {10111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {61, 0, 0, 0};
  // {00111000 00110001 00101000 11000001 10111101 01110000 00}
  public static final byte[] GRPSPLIT5 = new byte[] {28, -116, 20, -125, -67, 14, 0};
  // {00010000 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {8, 30, 0, 0};
  // {01011000 01100011 11110111 10011010 11111110 11001101 00}
  public static final byte[] GRPSPLIT7 = new byte[] {26, -58, -17, 89, 127, -77, 0};
  // {01101010 01000011 01001010 11011110 11010011 01000110 00}
  public static final byte[] GRPSPLIT8 = new byte[] {86, -62, 82, 123, -53, 98, 0};
  // {00000001 10000000 00001001 01010010 01110001 01011100 10}
  public static final byte[] GRPSPLIT9 = new byte[] {-128, 1, -112, 74, -114, 58, 1};
  // {10010010 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {73, 63, 0, 0};
  // {11011111 10111000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-5, 29, 0, 0};
  // {10001000 01111101 00001111 11111111 10100100 00110111 00}
  public static final byte[] GRPSPLIT12 = new byte[] {17, -66, -16, -1, 37, -20, 0};
  // {10101101 01010100 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-75, 42, 0, 0};
  // {01010010 00000010 00010000 00000000 00001010 00000000 00}
  public static final byte[] GRPSPLIT14 = new byte[] {74, 64, 8, 0, 80, 0, 0};
  // {00010100 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {40, 9, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {2, 0, 0, 0};
}


class AtrociousLoanModel_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_40_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* dti */] <24.525118f ? 
         (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <21.267876f ? 
                     (data[11 /* longest_credit_length */] <7.5f ? 
                        -0.003934789f : 
                        -0.018372208f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.022829663f : 
                        0.00917213f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <76.83125f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <13437.5f ? 
                        -0.011106166f : 
                        -0.0012668303f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(46, 2, data[6]) || (GenModel.bitSetIsInRange(46, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 46, 2, data[6])) ? 
                        4.7943544E-5f : 
                        0.01894018f))) : 
             (data[4 /* annual_inc */] <29786.164f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        0.008404629f : 
                        0.034245297f) : 
                     (data[2 /* emp_length */] <1.5f ? 
                        0.09384551f : 
                        0.04247478f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (data[9 /* revol_util */] <46.503124f ? 
                        -0.006581453f : 
                        0.0015552747f) : 
                     (data[7 /* dti */] <1.149375f ? 
                        -0.03151014f : 
                        0.01655416f)))) : 
         (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[12])) ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <30.08281f ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <73.05469f ? 
                        -0.013601219f : 
                        0.005507167f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        -0.040246766f : 
                        0.03434374f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <10203.5f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        -0.0011008095f : 
                        0.05528386f) : 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                        0.0010931814f : 
                        0.035573266f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                 (data[10 /* total_acc */] <24.5f ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        -3.3184795E-5f : 
                        0.015688237f) : 
                     (data[9 /* revol_util */] <98.07656f ? 
                        0.0023701217f : 
                        0.09238466f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <58.634377f ? 
                        0.006751064f : 
                        0.018775621f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        0.019900234f : 
                        0.11114473f)))));
    return pred;
  } // constant pool size = 226B, number of visited nodes = 31, static init size = 600B
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-68, 31, 0, 0};
  // {00111010 11010011 00100011 10010010 11001100 11000011 00}
  public static final byte[] GRPSPLIT1 = new byte[] {92, -53, -60, 73, 51, -61, 0};
  // {00000000 00100000 01001000 00000001 00100000 00111100 00}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 4, 18, -128, 4, 60, 0};
  // {...2 0-bits... 10001000 01000100 00000010 00000010 00100011 000000}
  public static final byte[] GRPSPLIT3 = new byte[] {17, 34, 64, 64, -60, 0};
  // {10000000 00001001 00001000 01001000 10000000 00000100 00}
  public static final byte[] GRPSPLIT4 = new byte[] {1, -112, 16, 18, 1, 32, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {0, 8, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {00001001 10110101 00010001 01000110 11000000 00000101 00}
  public static final byte[] GRPSPLIT8 = new byte[] {-112, -83, -120, 98, 3, -96, 0};
  // {10001001 10001000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-111, 17, 0, 0};
  // {10000001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-127, 8, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {32, 0, 0, 0};
  // {00000000 00000011 01101001 01000111 11100110 01011000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {0, -64, -106, -30, 103, 26, 0};
  // {00111011 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-36, 30, 0, 0};
  // {00000100 10011100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {32, 57, 0, 0};
  // {00000000 00000001 00101000 01000100 00000110 00001000 00}
  public static final byte[] GRPSPLIT15 = new byte[] {0, -128, 20, 34, 96, 16, 0};
}


class AtrociousLoanModel_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_41_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <64648.87f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
             (data[4 /* annual_inc */] <40130.016f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <7548.5f ? 
                     (data[4 /* annual_inc */] <22804.125f ? 
                        0.012387725f : 
                        -0.003014677f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -0.0017486359f : 
                        0.01303827f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.010282915f : 
                        -6.959461E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.008333271f : 
                        0.071754865f))) : 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <56796.125f ? 
                        0.001363963f : 
                        -0.03256259f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <26.86828f ? 
                        0.009501676f : 
                        0.019276412f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                        0.0033991528f : 
                        0.029570444f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <4.003125f ? 
                        -0.01667337f : 
                        0.04920882f)))) : 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25095.5f ? 
             (data[9 /* revol_util */] <37.910156f ? 
                 (data[10 /* total_acc */] <12.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.0062065246f : 
                        0.03798793f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <2.5f ? 
                        -0.018537618f : 
                        0.021011125f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.007564611f : 
                        -6.1312906E-4f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.010333038f : 
                        0.030519767f))) : 
             (Double.isNaN(data[4]) || data[4 /* annual_inc */] <119940.06f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <3.5f ? 
                        0.00959044f : 
                        0.08833954f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        0.0055894833f : 
                        0.07856758f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                        -0.007628607f : 
                        0.021718336f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[5])) ? 
                        -0.02668383f : 
                        0.04405901f)))));
    return pred;
  } // constant pool size = 236B, number of visited nodes = 31, static init size = 660B
  // {00111111 01101010 00111111 11011011 11111001 01001110 11}
  public static final byte[] GRPSPLIT0 = new byte[] {-4, 86, -4, -37, -97, 114, 3};
  // {00010101 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-88, 12, 0, 0};
  // {10001010 11010011 01110001 11011011 11000000 01001101 00}
  public static final byte[] GRPSPLIT2 = new byte[] {81, -53, -114, -37, 3, -78, 0};
  // {01100001 00010000 01010000 00000110 10010000 00010000 10}
  public static final byte[] GRPSPLIT3 = new byte[] {-122, 8, 10, 96, 9, 8, 1};
  // {00011010 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {88, 63, 0, 0};
  // {01011110 01110111 01011111 10011011 11111110 11111111 10}
  public static final byte[] GRPSPLIT5 = new byte[] {122, -18, -6, -39, 127, -1, 1};
  // {01100000 10011111 11100111 11011000 10100011 11010100 11}
  public static final byte[] GRPSPLIT6 = new byte[] {6, -7, -25, 27, -59, 43, 3};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {40, 0, 0, 0};
  // {10000000 01100000 00010011 00010000 10001100 01001000 00}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 6, -56, 8, 49, 18, 0};
  // {00010000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {8, 8, 0, 0};
  // {01010000 01010010 10100010 01001110 11010110 01001001 00}
  public static final byte[] GRPSPLIT10 = new byte[] {10, 74, 69, 114, 107, -110, 0};
  // {10101000 11001111 11011111 11001001 11001011 11010101 11}
  public static final byte[] GRPSPLIT11 = new byte[] {21, -13, -5, -109, -45, -85, 3};
  // {00000000 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 45, 0, 0};
  // {00000011 00100011 00101000 00010010 00110001 01101011 00}
  public static final byte[] GRPSPLIT13 = new byte[] {-64, -60, 20, 72, -116, -42, 0};
  // {00000000 00010000 00100000 11100001 10110000 00010100 00}
  public static final byte[] GRPSPLIT14 = new byte[] {0, 8, 4, -121, 13, 40, 0};
  // {01110101 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-82, 30, 0, 0};
}


class AtrociousLoanModel_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_42_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* dti */] <26.204384f ? 
         (data[9 /* revol_util */] <77.589455f ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[2]) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.009828423f : 
                        -0.0026842146f) : 
                    0.011310739f) : 
                 (data[7 /* dti */] <9.825f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.011330599f : 
                        0.0057519777f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.0028323662f : 
                        0.019194832f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[12])) ? 
                     (data[0 /* loan_amnt */] <5351.5f ? 
                        -0.026333272f : 
                        -0.0071438686f) : 
                     (data[9 /* revol_util */] <102.68519f ? 
                        -3.6746621E-4f : 
                        0.07506315f)) : 
                 (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        0.0043516345f : 
                        0.043860424f) : 
                     (data[2 /* emp_length */] <2.5f ? 
                        0.02182749f : 
                        0.007111429f)))) : 
         (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[12])) ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <19906.5f ? 
                     (!Double.isNaN(data[1 /* term */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        -0.043717474f : 
                        -0.014139005f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.01520454f : 
                        0.13894193f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <29.866188f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <12687.5f ? 
                        0.0069990167f : 
                        0.03229398f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(47, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 47, 1, data[6])) ? 
                        -0.055419855f : 
                        -0.005922301f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                     (data[0 /* loan_amnt */] <2656.5f ? 
                        -0.043917682f : 
                        0.003881657f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        -2.3481638E-4f : 
                        0.06549247f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[5])) ? 
                     (data[0 /* loan_amnt */] <3195.5f ? 
                        -0.016992519f : 
                        0.013860738f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT17, 50, 0, data[6])) ? 
                        0.026938215f : 
                        0.10501572f)))));
    return pred;
  } // constant pool size = 239B, number of visited nodes = 30, static init size = 714B
  // {00010001 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 31, 0, 0};
  // {01111000 01000101 11110011 00011011 11110100 11001000 00}
  public static final byte[] GRPSPLIT1 = new byte[] {30, -94, -49, -40, 47, 19, 0};
  // {00101000 00111011 00100010 11010000 10101100 00100011 10}
  public static final byte[] GRPSPLIT2 = new byte[] {20, -36, 68, 11, 53, -60, 1};
  // {11100001 11000010 01011010 10001011 11000000 01010001 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-121, 67, 90, -47, 3, -118, 0};
  // {01111010 01110111 00001110 11011110 11011111 01100110 10}
  public static final byte[] GRPSPLIT4 = new byte[] {94, -18, 112, 123, -5, 102, 1};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {10000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {33, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {01101101 00110001 00010000 01000110 11010010 00100111 00}
  public static final byte[] GRPSPLIT9 = new byte[] {-74, -116, 8, 98, 75, -28, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {1, 0, 0, 0};
  // {00000000 00000000 01100010 00000000 00100100 00011000 00}
  public static final byte[] GRPSPLIT11 = new byte[] {0, 0, 70, 0, 36, 24, 0};
  // {...1 0-bits... 11110111 11011111 11011111 11110010 11111111 1011101}
  public static final byte[] GRPSPLIT12 = new byte[] {-17, -5, -5, 79, -1, 93};
  // {00001000 01111111 01101111 11001101 10100110 01011010 01}
  public static final byte[] GRPSPLIT13 = new byte[] {16, -2, -10, -77, 101, 90, 2};
  // {00000000 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {0, 31, 0, 0};
  // {00101111 01111111 11111111 11101101 10110111 11111110 01}
  public static final byte[] GRPSPLIT15 = new byte[] {-12, -2, -1, -73, -19, 127, 2};
  // {00010111 00111100 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {-24, 60, 0, 0};
  // {00000000 00010001 00001001 01000100 00000110 00000000 00}
  public static final byte[] GRPSPLIT17 = new byte[] {0, -120, -112, 34, 96, 0, 0};
}


class AtrociousLoanModel_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_43_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <64648.87f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
             (data[4 /* annual_inc */] <40130.016f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <7548.5f ? 
                     (data[4 /* annual_inc */] <22804.125f ? 
                        0.011591396f : 
                        -0.0028622772f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <92.07188f ? 
                        0.0086445175f : 
                        0.031120906f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.0077647916f : 
                        0.0010922109f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        0.008114344f : 
                        0.06874709f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <56796.125f ? 
                        -0.009370337f : 
                        -0.052569825f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <19.370155f ? 
                        -0.0059137843f : 
                        0.050019942f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.0060498696f : 
                        0.013681465f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        0.019384999f : 
                        0.07364582f)))) : 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25095.5f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <37.910156f ? 
                 (data[10 /* total_acc */] <12.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.0060335044f : 
                        0.033595044f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <2.5f ? 
                        -0.01777736f : 
                        0.017913563f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.010569659f : 
                        -0.0027971044f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.0010873345f : 
                        0.02292939f))) : 
             (Double.isNaN(data[4]) || data[4 /* annual_inc */] <147585.1f ? 
                 (data[4 /* annual_inc */] <84126.195f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        0.01117647f : 
                        0.03222264f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.0014114575f : 
                        0.012805339f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        -0.036274504f : 
                        -0.0091097f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                        0.030075453f : 
                        0.13795395f)))));
    return pred;
  } // constant pool size = 250B, number of visited nodes = 31, static init size = 744B
  // {00010101 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-88, 12, 0, 0};
  // {10001010 01010010 00100001 11001011 10000000 01000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {81, 74, -124, -45, 1, 34, 0};
  // {01100000 00010000 01010000 00000110 10010000 00000000 10}
  public static final byte[] GRPSPLIT2 = new byte[] {6, 8, 10, 96, 9, 0, 1};
  // {01111110 11110111 11111111 10011011 11111110 11111111 10}
  public static final byte[] GRPSPLIT3 = new byte[] {126, -17, -1, -39, 127, -1, 1};
  // {01001010 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {82, 2, 0, 0};
  // {00010010 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {72, 63, 0, 0};
  // {11011001 00001101 01000100 01111111 11110111 11011110 11}
  public static final byte[] GRPSPLIT6 = new byte[] {-101, -80, 34, -2, -17, 123, 3};
  // {00100000 10000001 11000010 10000000 00000010 00010001 00}
  public static final byte[] GRPSPLIT7 = new byte[] {4, -127, 67, 1, 64, -120, 0};
  // {10000000 01100000 00010011 00010010 10001000 01001000 00}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 6, -56, 72, 17, 18, 0};
  // {00010001 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-120, 10, 0, 0};
  // {01011010 01000110 11110110 01111110 11110110 11001101 00}
  public static final byte[] GRPSPLIT10 = new byte[] {90, 98, 111, 126, 111, -77, 0};
  // {01100001 01010011 01011010 01000001 00001011 01010010 11}
  public static final byte[] GRPSPLIT11 = new byte[] {-122, -54, 90, -126, -48, 74, 3};
  // {01000010 00100000 10100011 01000000 01001000 01010000 10}
  public static final byte[] GRPSPLIT12 = new byte[] {66, 4, -59, 2, 18, 10, 1};
  // {00100000 11010000 00011000 10010100 01110110 10111010 00}
  public static final byte[] GRPSPLIT13 = new byte[] {4, 11, 24, 41, 110, 93, 0};
  // {00000010 00000000 00100000 10100000 10111010 00010101 00}
  public static final byte[] GRPSPLIT14 = new byte[] {64, 0, 4, 5, 93, -88, 0};
  // {01111111 01111111 01111110 10101111 11111011 10111111 00}
  public static final byte[] GRPSPLIT15 = new byte[] {-2, -2, 126, -11, -33, -3, 0};
  // {00000000 00000000 00000000 00100000 00010000 00000000 00}
  public static final byte[] GRPSPLIT16 = new byte[] {0, 0, 0, 4, 8, 0, 0};
}


class AtrociousLoanModel_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_44_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <25.778906f ? 
         (data[10 /* total_acc */] <11.0f ? 
             (data[9 /* revol_util */] <0.100546874f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.059777964f : 
                        0.003744875f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        0.049531337f : 
                        0.11810036f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <61250.0f ? 
                        -0.021742336f : 
                        0.001427164f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.553125f ? 
                        0.013153698f : 
                        0.1084253f))) : 
             (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <21602.5f ? 
                        -0.017264409f : 
                        -0.0022651725f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.00844212f : 
                        0.023713896f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (data[2 /* emp_length */] <3.5f ? 
                        0.022453953f : 
                        -0.024574457f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <29105.5f ? 
                        0.027719645f : 
                        0.12686317f)))) : 
         (data[4 /* annual_inc */] <99511.58f ? 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
                 (data[4 /* annual_inc */] <36973.875f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <7548.5f ? 
                        0.0027343177f : 
                        0.012212432f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        -0.003315131f : 
                        0.0074162004f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                     (data[4 /* annual_inc */] <61375.875f ? 
                        0.010394308f : 
                        0.0024171795f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        0.013360897f : 
                        0.033181872f))) : 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25904.0f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (Double.isNaN(data[2]) || data[2 /* emp_length */] <6.5f ? 
                        -0.014157105f : 
                        -0.02875898f) : 
                     (data[11 /* longest_credit_length */] <15.5f ? 
                        -0.002732039f : 
                        -0.011760134f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                        -0.008376184f : 
                        0.008291346f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        -0.005652279f : 
                        0.020318938f)))));
    return pred;
  } // constant pool size = 218B, number of visited nodes = 31, static init size = 552B
  // {11011000 01100000 00010001 11010010 11011000 00110100 00}
  public static final byte[] GRPSPLIT0 = new byte[] {27, 6, -120, 75, 27, 44, 0};
  // {00100000 00000010 01001010 00000000 00100101 00001010 00}
  public static final byte[] GRPSPLIT1 = new byte[] {4, 64, 82, 0, -92, 80, 0};
  // {10010000 00000000 00000000 11010000 10010000 00000100 00}
  public static final byte[] GRPSPLIT2 = new byte[] {9, 0, 0, 11, 9, 32, 0};
  // {00010000 01001011 00101011 01110000 01101110 01100001 00}
  public static final byte[] GRPSPLIT3 = new byte[] {8, -46, -44, 14, 118, -122, 0};
  // {11100100 10000010 01011000 11010100 01011010 10110101 10}
  public static final byte[] GRPSPLIT4 = new byte[] {39, 65, 26, 43, 90, -83, 1};
  // {01010000 00100001 01011011 01110000 11011011 01111000 00}
  public static final byte[] GRPSPLIT5 = new byte[] {10, -124, -38, 14, -37, 30, 0};
  // {00010101 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-88, 11, 0, 0};
  // {00011110 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {120, 63, 0, 0};
  // {01100001 01010010 11010000 01011100 10100000 11010111 01}
  public static final byte[] GRPSPLIT8 = new byte[] {-122, 74, 11, 58, 5, -21, 2};
  // {01001000 11101101 10111111 01110111 11010101 11101011 10}
  public static final byte[] GRPSPLIT9 = new byte[] {18, -73, -3, -18, -85, -41, 1};
  // {00110010 01010000 00101000 11100100 10110110 00010010 00}
  public static final byte[] GRPSPLIT10 = new byte[] {76, 10, 20, 39, 109, 72, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {48, 0, 0, 0};
  // {00100010 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {68, 10, 0, 0};
}


class AtrociousLoanModel_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_45_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <84.91875f ? 
                     (data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.014272798f : 
                        -0.0042917333f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        6.02409E-4f : 
                        0.063906565f)) : 
                 (data[9 /* revol_util */] <24.2625f ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.018026477f : 
                        0.008955255f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.0016074732f : 
                        0.01004416f))) : 
             (Double.isNaN(data[7]) || data[7 /* dti */] <24.525118f ? 
                 (!Double.isNaN(data[2]) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.0060386006f : 
                        0.0021473013f) : 
                    0.018322995f) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        -0.01813319f : 
                        0.0061456184f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <13976.5f ? 
                        0.010688831f : 
                        0.025217118f)))) : 
         (data[11 /* longest_credit_length */] <14.0f ? 
             (data[2 /* emp_length */] <7.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[12])) ? 
                        -0.01381898f : 
                        0.0024464696f) : 
                     (data[9 /* revol_util */] <68.0625f ? 
                        0.0070795305f : 
                        0.018728461f)) : 
                 (data[11 /* longest_credit_length */] <8.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.021507138f : 
                        0.079169974f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        3.266436E-4f : 
                        0.019835291f))) : 
             (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        -0.007536574f : 
                        0.020287015f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <126525.0f ? 
                        0.005870931f : 
                        -0.009854464f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (Double.isNaN(data[2]) || data[2 /* emp_length */] <7.5f ? 
                        0.0068937647f : 
                        -0.013259697f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <31282.5f ? 
                        0.010860646f : 
                        0.03058488f)))));
    return pred;
  } // constant pool size = 219B, number of visited nodes = 30, static init size = 594B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {44, 0, 0, 0};
  // {01100000 01101011 01011110 11011111 11110110 01001000 00}
  public static final byte[] GRPSPLIT2 = new byte[] {6, -42, 122, -5, 111, 18, 0};
  // {00000110 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {96, 1, 0, 0};
  // {00011010 01010001 10110001 10001011 11011001 11000111 00}
  public static final byte[] GRPSPLIT4 = new byte[] {88, -118, -115, -47, -101, -29, 0};
  // {10101101 11011111 11100110 01001100 11000110 01101110 00}
  public static final byte[] GRPSPLIT5 = new byte[] {-75, -5, 103, 50, 99, 118, 0};
  // {10110111 11010100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-19, 43, 0, 0};
  // {01100000 01100010 10000001 10110001 10010100 11100100 00}
  public static final byte[] GRPSPLIT7 = new byte[] {6, 70, -127, -115, 41, 39, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {10000011 00000010 10111001 11000001 00100001 00101001 00}
  public static final byte[] GRPSPLIT9 = new byte[] {-63, 64, -99, -125, -124, -108, 0};
  // {10110111 00111110 11101110 01011110 01110011 11010001 11}
  public static final byte[] GRPSPLIT10 = new byte[] {-19, 124, 119, 122, -50, -117, 3};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {40, 0, 0, 0};
  // {01100010 11000011 11111000 10000010 01000100 00110110 00}
  public static final byte[] GRPSPLIT12 = new byte[] {70, -61, 31, 65, 34, 108, 0};
  // {00010000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {8, 12, 0, 0};
  // {01011000 11101111 01011111 00001111 10111110 11111000 00}
  public static final byte[] GRPSPLIT14 = new byte[] {26, -9, -6, -16, 125, 31, 0};
}


class AtrociousLoanModel_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_46_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
         (data[0 /* loan_amnt */] <7508.5f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <3730.5f ? 
                        -0.05578673f : 
                        -0.03050734f) : 
                     (Double.isNaN(data[2]) || data[2 /* emp_length */] <0.5f ? 
                        -0.00497769f : 
                        -0.02445193f)) : 
                 (!Double.isNaN(data[2]) ? 
                     (data[0 /* loan_amnt */] <2906.5f ? 
                        -0.024177354f : 
                        -0.008239121f) : 
                    0.0110050235f)) : 
             (data[11 /* longest_credit_length */] <6.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <70.625f ? 
                        0.0033135489f : 
                        -0.024953643f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <21.18625f ? 
                        0.021350283f : 
                        0.051552966f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <64.44531f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.015774727f : 
                        -0.0032246003f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.004541637f : 
                        0.007903919f)))) : 
         (data[9 /* revol_util */] <44.986717f ? 
             (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                 (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.0154270455f : 
                        -0.003235924f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.0026640538f : 
                        0.011567268f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <16.185f ? 
                        -0.0071305553f : 
                        0.008816598f) : 
                     (Double.isNaN(data[10]) || data[10 /* total_acc */] <28.5f ? 
                        0.02711549f : 
                        0.0037685996f))) : 
             (!Double.isNaN(data[2]) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <27.451876f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        0.0012057504f : 
                        0.00975811f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.01268224f : 
                        0.012219909f)) : 
                0.017560873f)));
    return pred;
  } // constant pool size = 193B, number of visited nodes = 27, static init size = 522B
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-68, 31, 0, 0};
  // {10111011 01111111 10100001 10011111 11101000 01110111 00}
  public static final byte[] GRPSPLIT1 = new byte[] {-35, -2, -123, -7, 23, -18, 0};
  // {11111111 11111111 10111011 11111111 11101110 01111111 00}
  public static final byte[] GRPSPLIT2 = new byte[] {-1, -1, -35, -1, 119, -2, 0};
  // {00101000 10001101 00111111 11111000 01111111 01100011 10}
  public static final byte[] GRPSPLIT3 = new byte[] {20, -79, -4, 31, -2, -58, 1};
  // {00010010 11110011 01110011 00000010 10110100 11001110 00}
  public static final byte[] GRPSPLIT4 = new byte[] {72, -49, -50, 64, 45, 115, 0};
  // {01100010 11010001 11001010 11110011 11000000 11000010 10}
  public static final byte[] GRPSPLIT5 = new byte[] {70, -117, 83, -49, 3, 67, 1};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {40, 0, 0, 0};
  // {01100000 01101011 00100011 11011111 11110100 10000100 00}
  public static final byte[] GRPSPLIT7 = new byte[] {6, -42, -60, -5, 47, 33, 0};
  // {10000000 01100001 01100001 00000001 10000011 11010100 00}
  public static final byte[] GRPSPLIT8 = new byte[] {1, -122, -122, -128, -63, 43, 0};
  // {01000000 00000010 10011000 11010010 01111010 01110011 11}
  public static final byte[] GRPSPLIT9 = new byte[] {2, 64, 25, 75, 94, -50, 3};
  // {00000100 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {32, 15, 0, 0};
  // {01111101 01111011 01111101 11111110 11110111 01101011 01}
  public static final byte[] GRPSPLIT11 = new byte[] {-66, -34, -66, 127, -17, -42, 2};
}


class AtrociousLoanModel_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_47_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <92539.03f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
             (data[4 /* annual_inc */] <40133.906f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <7548.5f ? 
                     (data[4 /* annual_inc */] <22804.125f ? 
                        0.0107612135f : 
                        -0.0026500202f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -0.0047051418f : 
                        0.010884888f)) : 
                 (data[9 /* revol_util */] <27.021093f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        -0.015735472f : 
                        0.01008755f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.0041246274f : 
                        0.005158997f))) : 
             (data[4 /* annual_inc */] <52171.766f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                        -0.0015540901f : 
                        0.16272178f) : 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                        -0.0016025018f : 
                        0.017373636f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <23481.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.003430009f : 
                        0.008801334f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <27.4175f ? 
                        0.008319339f : 
                        0.024512721f)))) : 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28060.5f ? 
             (data[11 /* longest_credit_length */] <14.0f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                     (data[7 /* dti */] <3.6121874f ? 
                        0.012727374f : 
                        -0.013810073f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <533150.2f ? 
                        0.003502882f : 
                        0.14472462f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        -0.019408122f : 
                        0.0063496362f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        -0.018004311f : 
                        -0.0023353416f))) : 
             (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                 (data[11 /* longest_credit_length */] <11.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        0.0129622705f : 
                        0.10792365f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.026055656f : 
                        -0.0013849518f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        -0.021946533f : 
                        0.009991733f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        0.0468701f : 
                        0.08710628f)))));
    return pred;
  } // constant pool size = 236B, number of visited nodes = 31, static init size = 660B
  // {00111111 01101011 00111111 11011011 11111101 01001110 11}
  public static final byte[] GRPSPLIT0 = new byte[] {-4, -42, -4, -37, -65, 114, 3};
  // {00010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-120, 12, 0, 0};
  // {10000010 01010010 01000000 10001010 10000000 01000100 00}
  public static final byte[] GRPSPLIT2 = new byte[] {65, 74, 2, 81, 1, 34, 0};
  // {01111101 01100101 01110111 00011011 11110110 11111010 10}
  public static final byte[] GRPSPLIT3 = new byte[] {-66, -90, -18, -40, 111, 95, 1};
  // {00000000 10000100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 33, 0, 0};
  // {01000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {34, 0, 0, 0};
  // {00000000 00010011 11000000 11000011 11010000 11011101 00}
  public static final byte[] GRPSPLIT6 = new byte[] {0, -56, 3, -61, 11, -69, 0};
  // {00001001 11100000 10110000 10011101 10010001 01001011 01}
  public static final byte[] GRPSPLIT7 = new byte[] {-112, 7, 13, -71, -119, -46, 2};
  // {00010000 01100001 10011011 01100110 11010010 11100101 00}
  public static final byte[] GRPSPLIT8 = new byte[] {8, -122, -39, 102, 75, -89, 0};
  // {00000100 10011100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {32, 57, 0, 0};
  // {10110100 01110100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {45, 46, 0, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {32, 0, 0, 0};
  // {00000000 00010000 00000000 10100000 00100110 00010000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 8, 0, 5, 100, 8, 0};
  // {00101110 01101111 00111100 10101111 11111110 00111011 11}
  public static final byte[] GRPSPLIT13 = new byte[] {116, -10, 60, -11, 127, -36, 3};
  // {00000000 00110000 11101010 01010100 00110010 01111000 00}
  public static final byte[] GRPSPLIT14 = new byte[] {0, 12, 87, 42, 76, 30, 0};
  // {11011011 01111100 11101111 01111110 01110111 11111110 10}
  public static final byte[] GRPSPLIT15 = new byte[] {-37, 62, -9, 126, -18, 127, 1};
}


class AtrociousLoanModel_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_48_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <77.589455f ? 
         (data[7 /* dti */] <13.356035f ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14246.5f ? 
                     (data[10 /* total_acc */] <19.0f ? 
                        -0.0053689284f : 
                        -0.014886864f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.016120443f : 
                        0.0019303294f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.017147485f : 
                        0.01880633f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        0.008461315f : 
                        0.03017985f))) : 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[2]) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.0023885828f : 
                        0.0077283788f) : 
                    0.013416979f) : 
                 (data[0 /* loan_amnt */] <4004.5f ? 
                     (data[4 /* annual_inc */] <15281.25f ? 
                        0.06439725f : 
                        -0.006950455f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.012788287f : 
                        0.044294536f)))) : 
         (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <20041.5f ? 
                 (data[4 /* annual_inc */] <40884.438f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                        0.0030192537f : 
                        0.076303534f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <5.5f ? 
                        -0.006916315f : 
                        0.120321035f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <29.456171f ? 
                     (data[4 /* annual_inc */] <75187.5f ? 
                        0.017873073f : 
                        -1.0436918E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.02761529f : 
                        0.10811534f))) : 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <4812.5f ? 
                        -0.03177953f : 
                        -0.0017695894f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <27.493126f ? 
                        0.004888828f : 
                        0.027693586f)) : 
                 (data[0 /* loan_amnt */] <1847.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 48, 1, data[6])) ? 
                        -0.029901642f : 
                        0.0228258f) : 
                     (data[11 /* longest_credit_length */] <21.5f ? 
                        0.011042737f : 
                        -9.0719113E-4f)))));
    return pred;
  } // constant pool size = 208B, number of visited nodes = 30, static init size = 528B
  // {00010001 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 13, 0, 0};
  // {01111010 11011011 11110110 10011110 11110111 11011000 01}
  public static final byte[] GRPSPLIT1 = new byte[] {94, -37, 111, 121, -17, 27, 2};
  // {01101011 01100110 00111100 11011010 10101101 01110010 10}
  public static final byte[] GRPSPLIT2 = new byte[] {-42, 102, 60, 91, -75, 78, 1};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {00000000 00000000 00110000 10000000 10001100 00000000 00}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 0, 12, 1, 49, 0, 0};
  // {00010000 01011000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {8, 26, 0, 0};
  // {10100001 00000000 00000001 11110001 00010000 10010000 00}
  public static final byte[] GRPSPLIT6 = new byte[] {-123, 0, -128, -113, 8, 9, 0};
  // {01101010 01100111 00001110 11011110 11010011 01100110 10}
  public static final byte[] GRPSPLIT7 = new byte[] {86, -26, 112, 123, -53, 102, 1};
  // {00000100 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {32, 44, 0, 0};
  // {00000000 00000000 01010001 00100000 00000000 00010000 00}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 0, -118, 4, 0, 8, 0};
  // {10101111 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-11, 11, 0, 0};
  // {01100010 01000010 00001010 00000010 00000000 01000110 00}
  public static final byte[] GRPSPLIT11 = new byte[] {70, 66, 80, 64, 0, 98, 0};
  // {...1 0-bits... 00000000 11000000 00000001 00010001 00100000 00000100}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 3, -128, -120, 4, 32};
}


class AtrociousLoanModel_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_49_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <64648.87f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14583.5f ? 
             (data[4 /* annual_inc */] <36698.758f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <7538.0f ? 
                     (data[4 /* annual_inc */] <22014.75f ? 
                        0.010266329f : 
                        -0.0021347972f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        0.0056447885f : 
                        0.02103831f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.006375915f : 
                        0.0011647949f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.0048077316f : 
                        0.043084003f))) : 
             (data[0 /* loan_amnt */] <14743.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.06606204f : 
                        0.041703545f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.13698934f : 
                        0.20242904f)) : 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <25.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        0.0031220426f : 
                        0.011522252f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.028703174f : 
                        0.004677137f)))) : 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28060.5f ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <85.42422f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (data[10 /* total_acc */] <6.5f ? 
                        0.03160045f : 
                        -0.012209358f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <38.707848f ? 
                        -0.011149595f : 
                        -0.0017837442f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        -0.00841728f : 
                        0.0044197226f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        0.017858008f : 
                        0.113464735f))) : 
             (Double.isNaN(data[4]) || data[4 /* annual_inc */] <119940.06f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <29286.5f ? 
                        0.024401879f : 
                        0.0028566113f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <34138.5f ? 
                        0.012530325f : 
                        0.030383993f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[3])) ? 
                        -0.010422204f : 
                        0.0056426064f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT16, 32, 0, data[5])) ? 
                        -0.012820028f : 
                        0.038055655f)))));
    return pred;
  } // constant pool size = 250B, number of visited nodes = 31, static init size = 744B
  // {00110001 10000010 00111011 01001000 10111000 01001110 10}
  public static final byte[] GRPSPLIT0 = new byte[] {-116, 65, -36, 18, 29, 114, 1};
  // {00010100 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {40, 12, 0, 0};
  // {10101010 01000000 00100001 11001011 10000010 01001000 00}
  public static final byte[] GRPSPLIT2 = new byte[] {85, 2, -124, -45, 65, 18, 0};
  // {01100011 00110010 00111000 00000110 10001000 11110001 10}
  public static final byte[] GRPSPLIT3 = new byte[] {-58, 76, 28, 96, 17, -113, 1};
  // {01000010 00001001 01010000 00000100 10011100 00000000 00}
  public static final byte[] GRPSPLIT4 = new byte[] {66, -112, 10, 32, 57, 0, 0};
  // {01101110 11101111 01010101 01111111 11111111 01111111 11}
  public static final byte[] GRPSPLIT5 = new byte[] {118, -9, -86, -2, -1, -2, 3};
  // {11111101 11111111 10111111 11111111 11111011 11111111 11}
  public static final byte[] GRPSPLIT6 = new byte[] {-65, -1, -3, -1, -33, -1, 3};
  // {01011000 01100101 01110111 10011011 11110110 11010110 00}
  public static final byte[] GRPSPLIT7 = new byte[] {26, -90, -18, -39, 111, 107, 0};
  // {01111001 11001110 10111100 00111101 00100111 01111110 00}
  public static final byte[] GRPSPLIT8 = new byte[] {-98, 115, 61, -68, -28, 126, 0};
  // {01111000 11000010 11110110 01111110 11110101 11000001 00}
  public static final byte[] GRPSPLIT9 = new byte[] {30, 67, 111, 126, -81, -125, 0};
  // {00000000 00000001 00001010 11000001 10000010 00000110 00}
  public static final byte[] GRPSPLIT10 = new byte[] {0, -128, 80, -125, 65, 96, 0};
  // {10100100 01010100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {37, 42, 0, 0};
  // {00000000 00000000 00000000 01000000 00000000 00000100 00}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 0, 0, 2, 0, 32, 0};
  // {00100011 10110001 00000010 01000110 01010111 11111001 10}
  public static final byte[] GRPSPLIT13 = new byte[] {-60, -115, 64, 98, -22, -97, 1};
  // {00000000 00010000 00101000 11100001 10111000 00010000 00}
  public static final byte[] GRPSPLIT14 = new byte[] {0, 8, 20, -121, 29, 8, 0};
  // {00111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {60, 0, 0, 0};
  // {01100100 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {38, 8, 0, 0};
}


class AtrociousLoanModel_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_50_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
         (data[9 /* revol_util */] <85.42422f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[2]) ? 
                     (data[0 /* loan_amnt */] <3125.5f ? 
                        -0.034185633f : 
                        -0.012262585f) : 
                    0.009558953f) : 
                 (data[9 /* revol_util */] <19.353924f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(46, 2, data[6]) || (GenModel.bitSetIsInRange(46, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 46, 2, data[6])) ? 
                        -0.027093943f : 
                        0.0060269125f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <29.91f ? 
                        -0.0032407725f : 
                        0.012381898f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        -0.015724551f : 
                        0.06895619f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <81078.125f ? 
                        0.006156235f : 
                        -0.007359964f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28801.5f ? 
                     (data[0 /* loan_amnt */] <8819.5f ? 
                        0.0047938963f : 
                        0.024710143f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <92.82188f ? 
                        0.035612408f : 
                        0.1565172f)))) : 
         (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <23141.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <7.5f ? 
                        0.005296142f : 
                        -0.008814053f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -8.989085E-4f : 
                        0.013347176f)) : 
                 (data[7 /* dti */] <10.934766f ? 
                     (data[10 /* total_acc */] <19.5f ? 
                        0.0025496697f : 
                        -0.010545103f) : 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        0.0019211137f : 
                        0.007741445f))) : 
             (Double.isNaN(data[7]) || data[7 /* dti */] <24.525118f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (data[2 /* emp_length */] <9.5f ? 
                        -9.335893E-5f : 
                        0.009296193f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        -0.042255808f : 
                        0.011114315f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[2]) ? 
                        -7.460376E-4f : 
                        0.04984685f) : 
                     (data[9 /* revol_util */] <68.1875f ? 
                        0.009874213f : 
                        0.02273281f)))));
    return pred;
  } // constant pool size = 198B, number of visited nodes = 30, static init size = 480B
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-68, 31, 0, 0};
  // {00101010 11010111 00110011 00110011 11110000 01001001 00}
  public static final byte[] GRPSPLIT1 = new byte[] {84, -21, -52, -52, 15, -110, 0};
  // {...2 0-bits... 00000001 01000000 00000100 00000010 00000001 000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-128, 2, 32, 64, -128, 0};
  // {11100010 11000000 00001010 10000000 00001010 10010110 00}
  public static final byte[] GRPSPLIT3 = new byte[] {71, 3, 80, 1, 80, 105, 0};
  // {00011000 00110010 10100000 00000011 01000100 01100001 00}
  public static final byte[] GRPSPLIT4 = new byte[] {24, 76, 5, -64, 34, -122, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {44, 0, 0, 0};
  // {01100000 01100011 11111110 11011111 11110110 01001000 00}
  public static final byte[] GRPSPLIT7 = new byte[] {6, -58, 127, -5, 111, 18, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {00010000 01000000 00000001 00001000 10010001 11010100 00}
  public static final byte[] GRPSPLIT9 = new byte[] {8, 2, -128, 16, -119, 43, 0};
  // {00111111 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-4, 15, 0, 0};
  // {00011101 10110011 01000011 01000110 11010110 01101000 00}
  public static final byte[] GRPSPLIT11 = new byte[] {-72, -51, -62, 98, 107, 22, 0};
}


class AtrociousLoanModel_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_51_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <92539.03f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
             (data[4 /* annual_inc */] <40133.906f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8684.5f ? 
                     (data[4 /* annual_inc */] <25193.625f ? 
                        0.0072856415f : 
                        -0.0020867742f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        0.0020074127f : 
                        0.014323176f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -0.005698535f : 
                        0.0022514237f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        0.0066839512f : 
                        0.03489083f))) : 
             (data[4 /* annual_inc */] <52171.766f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.0017220058f : 
                        0.0134490365f) : 
                     (data[7 /* dti */] <16.20125f ? 
                        0.059624597f : 
                        0.11389533f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <21146.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.0037400178f : 
                        0.008474587f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        0.0051416904f : 
                        0.017582161f)))) : 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25938.0f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                 (data[9 /* revol_util */] <94.01719f ? 
                     (data[11 /* longest_credit_length */] <13.0f ? 
                        -0.004384697f : 
                        -0.022834022f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <167715.62f ? 
                        -0.05354104f : 
                        0.018465884f)) : 
                 (data[9 /* revol_util */] <86.94063f ? 
                     (data[11 /* longest_credit_length */] <13.5f ? 
                        -0.0035142095f : 
                        -0.012370183f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(47, 1, data[6]) || (GenModel.bitSetIsInRange(47, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 47, 1, data[6])) ? 
                        -0.0053460975f : 
                        0.016933873f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.026562724f : 
                        -0.0059225243f) : 
                     (Double.isNaN(data[2]) || data[2 /* emp_length */] <3.5f ? 
                        -0.03219839f : 
                        0.044688515f)) : 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <3.5f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.729063f ? 
                        0.0036321413f : 
                        0.020637061f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(45, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 45, 2, data[6])) ? 
                        -0.009932576f : 
                        0.15220259f)))));
    return pred;
  } // constant pool size = 224B, number of visited nodes = 31, static init size = 588B
  // {00011101 00101010 00111111 11001011 10011001 01001110 00}
  public static final byte[] GRPSPLIT0 = new byte[] {-72, 84, -4, -45, -103, 114, 0};
  // {00000000 00000000 00000000 01001010 10000000 01000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {0, 0, 0, 82, 1, 34, 0};
  // {00011101 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-72, 30, 0, 0};
  // {00010101 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-88, 13, 0, 0};
  // {00000000 10101000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 21, 0, 0};
  // {01111101 01100101 01110111 00011011 11110111 11111010 10}
  public static final byte[] GRPSPLIT5 = new byte[] {-66, -90, -18, -40, -17, 95, 1};
  // {00100010 10010011 01000000 11000001 01010000 11011101 00}
  public static final byte[] GRPSPLIT6 = new byte[] {68, -55, 2, -125, 10, -69, 0};
  // {01000001 00000000 01100010 01000011 11100000 10010001 10}
  public static final byte[] GRPSPLIT7 = new byte[] {-126, 0, 70, -62, 7, -119, 1};
  // {01011000 11101001 10111111 01111110 11010111 11101011 00}
  public static final byte[] GRPSPLIT8 = new byte[] {26, -105, -3, 126, -21, -41, 0};
  // {...1 0-bits... 00000000 11000000 00000110 11101001 00000000 0101010}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 3, 96, -105, 0, 42};
  // {00110010 01111110 00111100 11101100 11110110 00111110 00}
  public static final byte[] GRPSPLIT10 = new byte[] {76, 126, 60, 55, 111, 124, 0};
  // {00000011 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-64, 2, 0, 0};
  // {00111110 01111110 11111110 11111110 11111111 01111111 00}
  public static final byte[] GRPSPLIT12 = new byte[] {124, 126, 127, 127, -1, -2, 0};
  // {...2 0-bits... 11110111 01111111 11011111 11111110 11111111 11010}
  public static final byte[] GRPSPLIT13 = new byte[] {-17, -2, -5, 127, -1, 11};
}


class AtrociousLoanModel_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_52_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[2]) ? 
         (data[9 /* revol_util */] <85.42422f ? 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <42.5f ? 
                        -0.013885186f : 
                        0.11754452f) : 
                     (data[9 /* revol_util */] <20.021301f ? 
                        -0.019963413f : 
                        -0.0031171937f)) : 
                 (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                     (data[11 /* longest_credit_length */] <13.5f ? 
                        0.0016991212f : 
                        -0.0055503333f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0012422604f : 
                        0.006014968f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                 (data[11 /* longest_credit_length */] <9.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.029825594f : 
                        -0.0043972535f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.686407f ? 
                        -3.3852636E-4f : 
                        0.011636794f)) : 
                 (data[0 /* loan_amnt */] <7508.5f ? 
                     (data[10 /* total_acc */] <29.0f ? 
                        0.005225838f : 
                        -0.015301132f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <99250.0f ? 
                        0.016003992f : 
                        0.0041119573f)))) : 
        0.012079597f);
    return pred;
  } // constant pool size = 106B, number of visited nodes = 16, static init size = 252B
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-68, 31, 0, 0};
  // {00101010 11011111 00110011 01110011 11110100 11001001 00}
  public static final byte[] GRPSPLIT1 = new byte[] {84, -5, -52, -50, 47, -109, 0};
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {44, 0, 0, 0};
  // {00011100 01110001 11110001 00000010 10011011 11110100 00}
  public static final byte[] GRPSPLIT3 = new byte[] {56, -114, -113, 64, -39, 47, 0};
  // {01000010 11100111 00001110 11011111 01001111 01101110 10}
  public static final byte[] GRPSPLIT4 = new byte[] {66, -25, 112, -5, -14, 118, 1};
  // {10001100 00000000 10010001 00100000 00100000 10000001 00}
  public static final byte[] GRPSPLIT5 = new byte[] {49, 0, -119, 4, 4, -127, 0};
}


class AtrociousLoanModel_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_53_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[7 /* dti */] <13.356035f ? 
             (data[10 /* total_acc */] <9.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.020942004f : 
                        0.004375926f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8047.5f ? 
                        0.013544966f : 
                        0.054331712f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <3.0f ? 
                        -0.009347426f : 
                        0.014698955f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <13976.5f ? 
                        -0.0020115492f : 
                        0.020169133f))) : 
             (!Double.isNaN(data[2]) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        -0.0055419584f : 
                        0.015920581f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        -0.0039537866f : 
                        0.0037652368f)) : 
                0.014071715f)) : 
         (data[4 /* annual_inc */] <29786.164f ? 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.075366266f : 
                        -0.021992052f) : 
                    0.07048571f) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (data[2 /* emp_length */] <4.5f ? 
                        0.0016494481f : 
                        0.036072653f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        0.023350025f : 
                        0.068947904f))) : 
             (data[10 /* total_acc */] <24.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        -0.025725195f : 
                        -4.5170437E-4f) : 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[3])) ? 
                        0.00417194f : 
                        0.011791827f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <74.80937f ? 
                        -0.0041855285f : 
                        0.004727467f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <90350.625f ? 
                        0.00912929f : 
                        -0.0017705505f)))));
    return pred;
  } // constant pool size = 215B, number of visited nodes = 27, static init size = 642B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00001000 10101001 11001010 00000100 01000100 01}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 16, -107, 83, 32, 34, 2};
  // {11111000 11101001 11101011 11011010 11110101 11111111 01}
  public static final byte[] GRPSPLIT2 = new byte[] {31, -105, -41, 91, -81, -1, 2};
  // {00100000 00000000 00000010 10001000 10010011 01000000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {4, 0, 64, 17, -55, 2, 0};
  // {01111010 01110111 01010011 01011011 11010010 01001111 00}
  public static final byte[] GRPSPLIT4 = new byte[] {94, -18, -54, -38, 75, -14, 0};
  // {00010001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-120, 12, 0, 0};
  // {10111110 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {125, 27, 0, 0};
  // {01111110 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {126, 62, 0, 0};
  // {00000010 00100000 00000000 00010000 01000000 00000000 00}
  public static final byte[] GRPSPLIT8 = new byte[] {64, 4, 0, 8, 2, 0, 0};
  // {00001000 00000000 00011001 00000000 00010000 00000000 10}
  public static final byte[] GRPSPLIT9 = new byte[] {16, 0, -104, 0, 8, 0, 1};
  // {01000100 00100000 01100011 10010001 00001000 11100000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {34, 4, -58, -119, 16, 7, 0};
  // {00100000 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {4, 10, 0, 0};
  // {11101010 11111101 11101110 11011010 01110111 11100010 00}
  public static final byte[] GRPSPLIT12 = new byte[] {87, -65, 119, 91, -18, 71, 0};
  // {01101001 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-106, 47, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {48, 0, 0, 0};
  // {01110000 00100011 11110001 00000111 00000100 10011001 00}
  public static final byte[] GRPSPLIT15 = new byte[] {14, -60, -113, -32, 32, -103, 0};
}


class AtrociousLoanModel_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_54_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <25.778906f ? 
         (data[9 /* revol_util */] <0.12587357f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                 (data[10 /* total_acc */] <5.5f ? 
                     (data[0 /* loan_amnt */] <4543.0f ? 
                        0.11260977f : 
                        -0.03770881f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.03549503f : 
                        0.010977699f)) : 
                 (data[10 /* total_acc */] <14.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* total_acc */] <12.5f ? 
                        0.057301193f : 
                        -6.2714895E-4f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        5.169781E-4f : 
                        0.058463067f))) : 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <21389.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (Double.isNaN(data[10]) || data[10 /* total_acc */] <24.5f ? 
                        -0.008955238f : 
                        -0.018717332f) : 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[3])) ? 
                        -0.008202368f : 
                        0.011237014f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.014213517f : 
                        0.0060072583f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        0.025878256f : 
                        0.09373299f)))) : 
         (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
             (Double.isNaN(data[7]) || data[7 /* dti */] <27.493126f ? 
                 (!Double.isNaN(data[2]) ? 
                     (data[9 /* revol_util */] <85.69375f ? 
                        -0.0022431498f : 
                        0.005004739f) : 
                    0.012046049f) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <35.303673f ? 
                        0.005125232f : 
                        -0.032874603f) : 
                     (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[12])) ? 
                        -0.0036260164f : 
                        0.020069217f))) : 
             (data[0 /* loan_amnt */] <4004.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.04829414f : 
                        -0.020070594f) : 
                     (data[4 /* annual_inc */] <18000.0f ? 
                        0.020990938f : 
                        -0.002157284f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                        0.0010969226f : 
                        0.012608914f) : 
                     (data[7 /* dti */] <9.8775f ? 
                        0.0031092858f : 
                        0.024439903f)))));
    return pred;
  } // constant pool size = 209B, number of visited nodes = 30, static init size = 534B
  // {10011100 01110000 00110010 11110010 01011000 01110100 10}
  public static final byte[] GRPSPLIT0 = new byte[] {57, 14, 76, 79, 26, 46, 1};
  // {01110000 00001001 00101000 01011000 10001010 11010000 00}
  public static final byte[] GRPSPLIT1 = new byte[] {14, -112, 20, 26, 81, 11, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {40, 0, 0, 0};
  // {01000000 10000010 01100000 00110000 10000001 10010100 01}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 65, 6, 12, -127, 41, 2};
  // {00100100 01000000 00000011 00000111 01100100 01101010 10}
  public static final byte[] GRPSPLIT4 = new byte[] {36, 2, -64, -32, 38, 86, 1};
  // {10000001 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-127, 24, 0, 0};
  // {00010101 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-88, 27, 0, 0};
  // {01000000 10000011 01000000 11000100 10000010 01001011 00}
  public static final byte[] GRPSPLIT7 = new byte[] {2, -63, 2, 35, 65, -46, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {01011100 11010110 11101010 11011111 11111101 00101111 00}
  public static final byte[] GRPSPLIT9 = new byte[] {58, 107, 87, -5, -65, -12, 0};
  // {00000010 00100001 00010000 00000000 00000010 01010000 10}
  public static final byte[] GRPSPLIT10 = new byte[] {64, -124, 8, 0, 64, 10, 1};
  // {10100001 11000011 00011000 11001010 10010000 11010000 01}
  public static final byte[] GRPSPLIT11 = new byte[] {-123, -61, 24, 83, 9, 11, 2};
  // {00011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {56, 0, 0, 0};
}


class AtrociousLoanModel_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_55_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <92539.03f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
             (data[4 /* annual_inc */] <32344.703f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8230.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -3.072762E-5f : 
                        0.014966657f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        0.009586824f : 
                        0.04758696f)) : 
                 (data[9 /* revol_util */] <76.05937f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.0071075824f : 
                        -7.2017964E-4f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.008912832f : 
                        0.005426354f))) : 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                 (data[4 /* annual_inc */] <60669.08f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        3.8779655E-4f : 
                        0.010293381f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25038.0f ? 
                        -9.0495386E-4f : 
                        0.00890377f)) : 
                 (Double.isNaN(data[10]) || data[10 /* total_acc */] <48.5f ? 
                     (data[4 /* annual_inc */] <34625.812f ? 
                        0.107819416f : 
                        0.018488208f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.02404351f : 
                        0.15582472f)))) : 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25938.0f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                 (data[10 /* total_acc */] <5.5f ? 
                    0.11602411f : 
                     (data[11 /* longest_credit_length */] <12.5f ? 
                        -0.0041640657f : 
                        -0.019676518f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.033680487f : 
                        -0.009055962f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.005100225f : 
                        0.013016253f))) : 
             (data[4 /* annual_inc */] <120096.01f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.004839674f : 
                        0.021147892f) : 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                        0.012457075f : 
                        0.03123381f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        -0.00889153f : 
                        0.031736f) : 
                     (data[11 /* longest_credit_length */] <16.5f ? 
                        0.04418556f : 
                        0.012081925f)))));
    return pred;
  } // constant pool size = 230B, number of visited nodes = 30, static init size = 648B
  // {00000000 00100001 10001000 10001100 10010000 01100100 00}
  public static final byte[] GRPSPLIT0 = new byte[] {0, -124, 17, 49, 9, 38, 0};
  // {00000001 00001000 00111000 01100000 00001000 00000110 01}
  public static final byte[] GRPSPLIT1 = new byte[] {-128, 16, 28, 6, 16, 96, 2};
  // {00101000 01010110 01011010 11011011 10000000 01001101 00}
  public static final byte[] GRPSPLIT2 = new byte[] {20, 106, 90, -37, 1, -78, 0};
  // {11111010 01100011 00101111 10111110 11011110 01100110 00}
  public static final byte[] GRPSPLIT3 = new byte[] {95, -58, -12, 125, 123, 102, 0};
  // {00010000 10111100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {8, 61, 0, 0};
  // {01011100 11000101 01001111 00011011 11110110 11111111 00}
  public static final byte[] GRPSPLIT5 = new byte[] {58, -93, -14, -40, 111, -1, 0};
  // {11110111 11111111 11111101 01111101 11111111 11011111 11}
  public static final byte[] GRPSPLIT6 = new byte[] {-17, -1, -65, -66, -1, -5, 3};
  // {00001000 11101001 10111111 01111110 11010011 11100001 00}
  public static final byte[] GRPSPLIT7 = new byte[] {16, -105, -3, 126, -53, -121, 0};
  // {10111000 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {29, 58, 0, 0};
  // {11111111 11111111 11111111 10010011 10101110 01111110 11}
  public static final byte[] GRPSPLIT9 = new byte[] {-1, -1, -1, -55, 117, 126, 3};
  // {00000000 00000001 00000000 01101100 00010001 11000001 00}
  public static final byte[] GRPSPLIT10 = new byte[] {0, -128, 0, 54, -120, -125, 0};
  // {00100010 11010000 00000000 11010100 01000110 01111110 00}
  public static final byte[] GRPSPLIT11 = new byte[] {68, 11, 0, 43, 98, 126, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {48, 0, 0, 0};
  // {00000000 00010000 00000000 10100101 10111000 00010100 00}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 8, 0, -91, 29, 40, 0};
  // {10000011 00000100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-63, 32, 0, 0};
}


class AtrociousLoanModel_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_56_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
         (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
             (Double.isNaN(data[9]) || data[9 /* revol_util */] <84.413284f ? 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <10.5f ? 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                        -0.0043798685f : 
                        0.0073619285f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.02368975f : 
                        -0.0096789f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <31.5f ? 
                        -0.0043094917f : 
                        0.045205843f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        0.011235699f : 
                        0.069570206f))) : 
             (data[9 /* revol_util */] <23.75703f ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <33.04297f ? 
                        -0.014442578f : 
                        0.09374665f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(47, 1, data[6]) || (GenModel.bitSetIsInRange(47, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 47, 1, data[6])) ? 
                        -0.011434089f : 
                        0.026233783f)) : 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
                        -0.0020367173f : 
                        0.0042714514f) : 
                     (Double.isNaN(data[2]) || data[2 /* emp_length */] <3.5f ? 
                        0.02086545f : 
                        0.004351854f)))) : 
         (data[2 /* emp_length */] <9.5f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14246.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(49, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 49, 1, data[6])) ? 
                        -0.023222685f : 
                        -0.0023375591f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.67875f ? 
                        0.0021575924f : 
                        0.012161923f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <22063.5f ? 
                        -0.0027843749f : 
                        0.042651977f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        0.008067372f : 
                        0.025918668f))) : 
             (data[11 /* longest_credit_length */] <9.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <19329.0f ? 
                        -0.012312594f : 
                        0.06458378f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        0.035677675f : 
                        0.15972045f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <16.8075f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        -0.0018254421f : 
                        0.029838556f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        -0.005242332f : 
                        0.015537176f)))));
    return pred;
  } // constant pool size = 235B, number of visited nodes = 31, static init size = 654B
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {44, 0, 0, 0};
  // {01100010 01100011 11111110 11011111 11110110 01001101 00}
  public static final byte[] GRPSPLIT1 = new byte[] {70, -58, 127, -5, 111, -78, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {01111110 11100011 11111111 11011111 11111111 11111111 00}
  public static final byte[] GRPSPLIT3 = new byte[] {126, -57, -1, -5, -1, -1, 0};
  // {00000000 10000000 00000000 00000000 00001000 00100010 10}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 1, 0, 0, 16, 68, 1};
  // {00010101 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-88, 0, 0, 0};
  // {...1 0-bits... 11111011 01111110 01111011 11111000 01110111 1110111}
  public static final byte[] GRPSPLIT6 = new byte[] {-33, 126, -34, 31, -18, 119};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {10010100 01010101 00100001 00001000 10010001 11000100 00}
  public static final byte[] GRPSPLIT8 = new byte[] {41, -86, -124, 16, -119, 35, 0};
  // {...1 0-bits... 01111111 11101111 11110111 10110111 11111111 11111110 0}
  public static final byte[] GRPSPLIT9 = new byte[] {-2, -9, -17, -19, -1, 127, 0};
  // {10111101 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-67, 11, 0, 0};
  // {00000000 00000000 00000000 00000000 10000000 01000100 00}
  public static final byte[] GRPSPLIT11 = new byte[] {0, 0, 0, 0, 1, 34, 0};
  // {11101001 01110001 00011100 11011011 01110001 10111001 01}
  public static final byte[] GRPSPLIT12 = new byte[] {-105, -114, 56, -37, -114, -99, 2};
  // {00000001 00000001 00000000 11000000 00000000 00000000 00}
  public static final byte[] GRPSPLIT13 = new byte[] {-128, -128, 0, 3, 0, 0, 0};
  // {00001001 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-112, 40, 0, 0};
  // {01111010 11101110 11111101 00001111 01010111 01011010 10}
  public static final byte[] GRPSPLIT15 = new byte[] {94, 119, -65, -16, -22, 90, 1};
}


class AtrociousLoanModel_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_57_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <50703.79f ? 
         (data[0 /* loan_amnt */] <7508.5f ? 
             (data[4 /* annual_inc */] <22866.469f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                     (data[2 /* emp_length */] <9.5f ? 
                        -0.003088219f : 
                        0.0153367715f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        -0.003051882f : 
                        0.035237484f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <1046.5f ? 
                        -0.04504908f : 
                        -0.008308019f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        -6.462404E-4f : 
                        0.008856069f))) : 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <18677.5f ? 
                        -0.0023822645f : 
                        0.013302824f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <84.06563f ? 
                        0.0056223255f : 
                        0.014158383f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <7938.5f ? 
                        0.09727105f : 
                        -0.0075566f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        0.016824057f : 
                        0.041173562f)))) : 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <21119.5f ? 
             (data[9 /* revol_util */] <38.921093f ? 
                 (data[11 /* longest_credit_length */] <6.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        0.0037027958f : 
                        0.09315799f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.013903578f : 
                        0.0010414434f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.016868886f : 
                        -0.0033768802f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.0023099529f : 
                        0.0038000506f))) : 
             (Double.isNaN(data[4]) || data[4 /* annual_inc */] <106104.01f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        0.002453006f : 
                        0.013531428f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        0.004155595f : 
                        0.03872644f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                        -0.005262486f : 
                        0.017346619f) : 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[3])) ? 
                        0.027629128f : 
                        0.15887159f)))));
    return pred;
  } // constant pool size = 252B, number of visited nodes = 31, static init size = 756B
  // {01100101 00100001 11101000 10000111 10010011 00000100 00}
  public static final byte[] GRPSPLIT0 = new byte[] {-90, -124, 23, -31, -55, 32, 0};
  // {11100101 11101000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-89, 23, 0, 0};
  // {10101000 01100100 00001000 11001000 11001110 01100001 00}
  public static final byte[] GRPSPLIT2 = new byte[] {21, 38, 16, 19, 115, -122, 0};
  // {00010001 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-120, 15, 0, 0};
  // {00001000 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {16, 31, 0, 0};
  // {01101100 01100000 01111001 11001010 11111000 01001010 00}
  public static final byte[] GRPSPLIT5 = new byte[] {54, 6, -98, 83, 31, 82, 0};
  // {01001001 01011011 01101101 11011011 11110111 11111010 01}
  public static final byte[] GRPSPLIT6 = new byte[] {-110, -38, -74, -37, -17, 95, 2};
  // {00000001 00001001 00100000 01010010 00100000 10010000 00}
  public static final byte[] GRPSPLIT7 = new byte[] {-128, -112, 4, 74, 4, 9, 0};
  // {01000000 10000001 10000001 01000001 10001000 01000000 10}
  public static final byte[] GRPSPLIT8 = new byte[] {2, -127, -127, -126, 17, 2, 1};
  // {00000000 00000001 00001010 00011100 10010000 11000100 00}
  public static final byte[] GRPSPLIT9 = new byte[] {0, -128, 80, 56, 9, 35, 0};
  // {10111111 11011100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-3, 59, 0, 0};
  // {01111010 11011111 10100110 00001011 10110010 11110110 10}
  public static final byte[] GRPSPLIT11 = new byte[] {94, -5, 101, -48, 77, 111, 1};
  // {01010000 00010001 01010010 11010110 10000010 01001101 00}
  public static final byte[] GRPSPLIT12 = new byte[] {10, -120, 74, 107, 65, -78, 0};
  // {10011000 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {25, 24, 0, 0};
  // {01010001 00000000 01100010 01000010 11100000 10010001 10}
  public static final byte[] GRPSPLIT14 = new byte[] {-118, 0, 70, 66, 7, -119, 1};
  // {11000000 11100010 00111001 01011110 00000011 00101111 10}
  public static final byte[] GRPSPLIT15 = new byte[] {3, 71, -100, 122, -64, -12, 1};
  // {00000000 00000000 00000000 00100100 00010000 00010000 00}
  public static final byte[] GRPSPLIT16 = new byte[] {0, 0, 0, 36, 8, 8, 0};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {32, 0, 0, 0};
}


class AtrociousLoanModel_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_58_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* dti */] <10.895713f ? 
         (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <23141.5f ? 
                     (data[0 /* loan_amnt */] <7083.5f ? 
                        -0.024209062f : 
                        -0.012747913f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <2.5f ? 
                        -0.002093066f : 
                        0.067907974f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <79.86406f ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <3.5f ? 
                        -0.007078577f : 
                        0.06955189f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 1, data[6]) || (GenModel.bitSetIsInRange(49, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 49, 1, data[6])) ? 
                        9.474596E-4f : 
                        0.036686413f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                 (data[10 /* total_acc */] <12.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.01126722f : 
                        0.0068443813f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.029995922f : 
                        -0.0071002883f)) : 
                 (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[1])) ? 
                     (data[7 /* dti */] <0.17024551f ? 
                        0.070072465f : 
                        0.001364151f) : 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <29.5f ? 
                        0.0143190045f : 
                        0.07610745f)))) : 
         (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
             (data[0 /* loan_amnt */] <2925.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (data[11 /* longest_credit_length */] <10.5f ? 
                        -0.052989073f : 
                        -0.027209392f) : 
                     (data[4 /* annual_inc */] <14875.0f ? 
                        0.05831578f : 
                        -0.0010075473f)) : 
                 (data[4 /* annual_inc */] <42062.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.015392116f : 
                        0.005924833f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.014019749f : 
                        -0.0033216758f))) : 
             (data[10 /* total_acc */] <25.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <25.868593f ? 
                        6.541412E-4f : 
                        0.010344508f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        0.007780368f : 
                        0.026454603f)) : 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.005496906f : 
                        0.0027322525f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -8.0473936E-4f : 
                        0.01616263f)))));
    return pred;
  } // constant pool size = 234B, number of visited nodes = 31, static init size = 648B
  // {10011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {57, 0, 0, 0};
  // {01100000 00101011 11000010 11111110 01011011 01010000 01}
  public static final byte[] GRPSPLIT1 = new byte[] {6, -44, 67, 127, -38, 10, 2};
  // {...1 0-bits... 01000000 01000000 00000000 00000000 00100110 10100000 0}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 2, 0, 0, 100, 5, 0};
  // {00111000 01100001 00100000 11001001 10000101 01110000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {28, -122, 4, -109, -95, 14, 0};
  // {11000000 00000000 10011001 00010110 01100000 10000101 00}
  public static final byte[] GRPSPLIT4 = new byte[] {3, 0, -103, 104, 6, -95, 0};
  // {00111111 01110111 01111111 11011011 11111111 01111010 10}
  public static final byte[] GRPSPLIT5 = new byte[] {-4, -18, -2, -37, -1, 94, 1};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {00111111 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-4, 31, 0, 0};
  // {00100100 00000010 00010010 10010001 00001000 01101001 00}
  public static final byte[] GRPSPLIT8 = new byte[] {36, 64, 72, -119, 16, -106, 0};
  // {10101110 11101111 10111111 10001101 11101101 01101011 10}
  public static final byte[] GRPSPLIT9 = new byte[] {117, -9, -3, -79, -73, -42, 1};
  // {10011010 11111111 01111101 01111011 11111110 10001111 10}
  public static final byte[] GRPSPLIT10 = new byte[] {89, -1, -66, -34, 127, -15, 1};
  // {01010010 11000000 11110010 10011010 11100000 01000100 00}
  public static final byte[] GRPSPLIT11 = new byte[] {74, 3, 79, 89, 7, 34, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 8, 0, 0};
  // {00001001 00100011 01010001 00001011 10010110 10011001 00}
  public static final byte[] GRPSPLIT13 = new byte[] {-112, -60, -118, -48, 105, -103, 0};
  // {01000001 01000011 10001011 11000110 00111000 01111101 00}
  public static final byte[] GRPSPLIT14 = new byte[] {-126, -62, -47, 99, 28, -66, 0};
}


class AtrociousLoanModel_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_59_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <25.778906f ? 
         (data[9 /* revol_util */] <0.12587357f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                 (data[10 /* total_acc */] <5.5f ? 
                     (data[0 /* loan_amnt */] <4543.0f ? 
                        0.097961836f : 
                        -0.037223943f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.039193887f : 
                        0.011296618f)) : 
                 (data[10 /* total_acc */] <14.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* total_acc */] <12.5f ? 
                        0.052078936f : 
                        -0.0032691013f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        0.0014618132f : 
                        0.04812261f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <20.53713f ? 
                        -0.026558092f : 
                        -0.0093330275f) : 
                     (Double.isNaN(data[10]) || data[10 /* total_acc */] <38.5f ? 
                        -0.007227309f : 
                        -0.022473225f)) : 
                 (data[10 /* total_acc */] <10.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 1, data[6]) || (GenModel.bitSetIsInRange(49, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 49, 1, data[6])) ? 
                        0.009545753f : 
                        0.12067744f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.009190479f : 
                        0.011520835f)))) : 
         (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
             (!Double.isNaN(data[2]) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <26.243437f ? 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.0021607676f : 
                        0.0026915525f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.019838609f : 
                        0.006434873f)) : 
                0.010841569f) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <29610.0f ? 
                     (data[0 /* loan_amnt */] <3682.5f ? 
                        -0.030433465f : 
                        -4.4933925E-4f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.022331113f : 
                        0.050543934f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <2656.5f ? 
                        -0.006774042f : 
                        0.015235656f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <26.86828f ? 
                        0.029037f : 
                        0.10488358f)))));
    return pred;
  } // constant pool size = 183B, number of visited nodes = 28, static init size = 426B
  // {10011100 01111000 00110010 11111010 01011000 11111100 10}
  public static final byte[] GRPSPLIT0 = new byte[] {57, 30, 76, 95, 26, 63, 1};
  // {01110000 11001001 01101000 01011001 11001110 11110000 01}
  public static final byte[] GRPSPLIT1 = new byte[] {14, -109, 22, -102, 115, 15, 2};
  // {00111000 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {28, 58, 0, 0};
  // {...1 0-bits... 00000000 00010000 00000000 00000000 00000000 10000000 0}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 8, 0, 0, 0, 1, 0};
  // {00000100 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {32, 9, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {01111100 11110011 11111111 11011111 11110111 01111111 01}
  public static final byte[] GRPSPLIT6 = new byte[] {62, -49, -1, -5, -17, -2, 2};
  // {00101011 11111111 01111110 10001110 11011110 11010000 00}
  public static final byte[] GRPSPLIT7 = new byte[] {-44, -1, 126, 113, 123, 11, 0};
  // {10111111 11111111 01111110 11011110 11111110 11111111 11}
  public static final byte[] GRPSPLIT8 = new byte[] {-3, -1, 126, 123, 127, -1, 3};
  // {00000001 10010001 00110000 00000100 00000100 01010000 00}
  public static final byte[] GRPSPLIT9 = new byte[] {-128, -119, 12, 32, 32, 10, 0};
}


class AtrociousLoanModel_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_60_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <92539.03f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <20041.5f ? 
             (data[4 /* annual_inc */] <45090.67f ? 
                 (data[0 /* loan_amnt */] <7517.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -0.021393286f : 
                        4.7454695E-4f) : 
                     (data[9 /* revol_util */] <92.07188f ? 
                        0.005050214f : 
                        0.023845846f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.013693074f : 
                        -0.002970311f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0020557672f : 
                        0.0063312035f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <80.0625f ? 
                        -0.005012778f : 
                        0.012095904f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.008302879f : 
                        0.03129508f)) : 
                 (data[4 /* annual_inc */] <62085.297f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 48, 1, data[6])) ? 
                        -0.0078072655f : 
                        0.019352635f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                        0.007503109f : 
                        0.03396508f)))) : 
         (data[11 /* longest_credit_length */] <14.0f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <24758.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 49, 0, data[6])) ? 
                        -0.016515583f : 
                        -0.002076219f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 0, data[6]) || (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 49, 0, data[6])) ? 
                        3.9068857E-4f : 
                        0.02072515f)) : 
                 (data[9 /* revol_util */] <85.92969f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <26.0925f ? 
                        0.007213458f : 
                        0.058949135f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(43, 7, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 43, 7, data[6])) ? 
                        0.00309604f : 
                        0.06410383f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <30.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <19.5f ? 
                        -0.012854677f : 
                        -0.02670756f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        -0.0067325877f : 
                        0.091006316f)) : 
                 (data[7 /* dti */] <12.777187f ? 
                     (data[0 /* loan_amnt */] <15833.5f ? 
                        -0.021492086f : 
                        -0.005359054f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <33936.5f ? 
                        -0.0037189603f : 
                        0.011174983f)))));
    return pred;
  } // constant pool size = 232B, number of visited nodes = 31, static init size = 636B
  // {11111111 01100111 11111010 10011111 11111111 01111111 00}
  public static final byte[] GRPSPLIT0 = new byte[] {-1, -26, 95, -7, -1, -2, 0};
  // {00101111 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-12, 31, 0, 0};
  // {10111010 01010011 01001000 01100010 00011110 11000110 00}
  public static final byte[] GRPSPLIT2 = new byte[] {93, -54, 18, 70, 120, 99, 0};
  // {01000000 00010001 01010010 10001011 10000000 01000100 00}
  public static final byte[] GRPSPLIT3 = new byte[] {2, -120, 74, -47, 1, 34, 0};
  // {01011001 00000010 01110010 01000011 11100100 10011011 10}
  public static final byte[] GRPSPLIT4 = new byte[] {-102, 64, 78, -62, 39, -39, 1};
  // {00011001 00111000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-104, 28, 0, 0};
  // {10000000 11100000 00001001 00010100 00000000 01100100 00}
  public static final byte[] GRPSPLIT6 = new byte[] {1, 7, -112, 40, 0, 38, 0};
  // {...1 0-bits... 11111101 11111111 10111111 11111110 11111110 11101111}
  public static final byte[] GRPSPLIT7 = new byte[] {-65, -1, -3, 127, 127, -9};
  // {00000000 00011100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {0, 56, 0, 0};
  // {00000001 10110000 10000000 10111101 00010001 01001010 01}
  public static final byte[] GRPSPLIT9 = new byte[] {-128, 13, 1, -67, -120, 82, 2};
  // {00001010 01000010 00111000 00000010 10000000 00100001 0}
  public static final byte[] GRPSPLIT10 = new byte[] {80, 66, 28, 64, 1, -124, 0};
  // {01010100 01000000 00001010 00000000 00100110 00010000 0}
  public static final byte[] GRPSPLIT11 = new byte[] {42, 2, 80, 0, 100, 8, 0};
  // {...7 0-bits... 00011000 00000000 01001010 00000000 00100100 000}
  public static final byte[] GRPSPLIT12 = new byte[] {24, 0, 82, 0, 36, 0};
  // {00111010 01111001 10011111 11100110 11110110 10110101 10}
  public static final byte[] GRPSPLIT13 = new byte[] {92, -98, -7, 103, 111, -83, 1};
  // {10001001 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-111, 0, 0, 0};
}


class AtrociousLoanModel_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_61_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
         (data[9 /* revol_util */] <71.52383f ? 
             (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -0.020246308f : 
                        -0.008752335f) : 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[1])) ? 
                        -0.0061278837f : 
                        0.0023538661f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        -0.021443794f : 
                        0.033694223f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        -6.327203E-4f : 
                        0.007343618f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                 (data[9 /* revol_util */] <106.66293f ? 
                     (data[0 /* loan_amnt */] <3734.5f ? 
                        -0.014874567f : 
                        -4.3170867E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        5.0619163E-4f : 
                        0.11018158f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.744062f ? 
                        0.003200141f : 
                        0.009052077f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.003352897f : 
                        0.040619202f)))) : 
         (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <25.618593f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25836.5f ? 
                        -0.0029264553f : 
                        0.010232541f) : 
                     (data[9 /* revol_util */] <60.65625f ? 
                        0.023287032f : 
                        7.925105E-5f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                     (data[11 /* longest_credit_length */] <13.5f ? 
                        -0.03980794f : 
                        0.010722922f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <12898.5f ? 
                        0.019061599f : 
                        0.044651218f))) : 
             (!Double.isNaN(data[2]) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 48, 1, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[5])) ? 
                        -0.0016550047f : 
                        0.012686685f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.2775f ? 
                        0.021275207f : 
                        0.0486808f)) : 
                0.040813103f)));
    return pred;
  } // constant pool size = 215B, number of visited nodes = 28, static init size = 618B
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {40, 0, 0, 0};
  // {01100010 11101011 11111111 10011011 11110100 10100010 00}
  public static final byte[] GRPSPLIT1 = new byte[] {70, -41, -1, -39, 47, 69, 0};
  // {00111110 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {124, 58, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {2, 0, 0, 0};
  // {11111110 11110011 11111011 10001011 11111111 11111111 00}
  public static final byte[] GRPSPLIT4 = new byte[] {127, -49, -33, -47, -1, -1, 0};
  // {00011001 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-104, 40, 0, 0};
  // {00001001 01011000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-112, 26, 0, 0};
  // {01111000 11100111 00001010 11011111 11001001 01000010 00}
  public static final byte[] GRPSPLIT7 = new byte[] {30, -25, 80, -5, -109, 66, 0};
  // {11111110 11101111 01101111 11111111 11111011 01001111 11}
  public static final byte[] GRPSPLIT8 = new byte[] {127, -9, -10, -1, -33, -14, 3};
  // {10000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {33, 1, 0, 0};
  // {00101000 01000011 00001000 00010100 00000000 01000010 00}
  public static final byte[] GRPSPLIT10 = new byte[] {20, -62, 16, 40, 0, 66, 0};
  // {01110000 00000011 11010010 11000100 00111010 11101001 10}
  public static final byte[] GRPSPLIT11 = new byte[] {14, -64, 75, 35, 92, -105, 1};
  // {00000000 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 25, 0, 0};
  // {01111011 11111111 11011110 11011110 01111110 11101011 11}
  public static final byte[] GRPSPLIT13 = new byte[] {-34, -1, 123, 123, 126, -41, 3};
  // {...1 0-bits... 00000000 00000000 00000000 10001000 00100100 10000011}
  public static final byte[] GRPSPLIT14 = new byte[] {0, 0, 0, 17, 36, -63};
  // {00111111 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {-4, 62, 0, 0};
}


class AtrociousLoanModel_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_62_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <24.641602f ? 
         (data[10 /* total_acc */] <7.0f ? 
             (data[7 /* dti */] <0.155625f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                    -0.027586887f : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        0.09967096f : 
                        0.18859467f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.047145374f : 
                        0.008316913f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                        -0.0037567518f : 
                        0.07196245f))) : 
             (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                     (data[11 /* longest_credit_length */] <14.0f ? 
                        -0.0066723013f : 
                        -0.015944885f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.005449951f : 
                        0.022700293f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (data[2 /* emp_length */] <4.5f ? 
                        0.024746632f : 
                        -0.023222089f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        -0.039613042f : 
                        0.047335584f)))) : 
         (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
             (data[9 /* revol_util */] <84.79584f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[3])) ? 
                        -0.008657079f : 
                        -0.0019838496f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14516.5f ? 
                        -0.0014785605f : 
                        0.0032107413f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <34461.5f ? 
                        -0.006703922f : 
                        0.028435983f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        0.004804296f : 
                        0.011972197f))) : 
             (data[0 /* loan_amnt */] <4004.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -0.041738614f : 
                        -0.013282926f) : 
                     (!Double.isNaN(data[2]) ? 
                        -2.0972351E-5f : 
                        0.033905104f)) : 
                 (data[4 /* annual_inc */] <60000.0f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        -0.002186006f : 
                        0.017626362f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                        0.0020401007f : 
                        0.020356517f)))));
    return pred;
  } // constant pool size = 244B, number of visited nodes = 30, static init size = 744B
  // {11111001 01111111 11111111 11111101 11111011 11111000 11}
  public static final byte[] GRPSPLIT0 = new byte[] {-97, -2, -1, -65, -33, 31, 3};
  // {10000000 01000010 00000000 01000000 10000001 00100000 00}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 66, 0, 2, -127, 4, 0};
  // {00010000 00000000 00101010 01010000 10111000 00010101 00}
  public static final byte[] GRPSPLIT2 = new byte[] {8, 0, 84, 10, 29, -88, 0};
  // {01001010 01100000 00000001 00000010 01000100 01101010 00}
  public static final byte[] GRPSPLIT3 = new byte[] {82, 6, -128, 64, 34, 86, 0};
  // {01111000 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {30, 47, 0, 0};
  // {10100100 10000010 00011000 11010100 01011010 10110111 10}
  public static final byte[] GRPSPLIT5 = new byte[] {37, 65, 24, 43, 90, -19, 1};
  // {01000000 00100001 01011011 01010000 01011001 01011010 00}
  public static final byte[] GRPSPLIT6 = new byte[] {2, -124, -38, 10, -102, 90, 0};
  // {00101111 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-12, 62, 0, 0};
  // {00010101 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-88, 27, 0, 0};
  // {01111010 01100111 11110011 11001011 11110110 01001001 00}
  public static final byte[] GRPSPLIT9 = new byte[] {94, -26, -49, -45, 111, -110, 0};
  // {00111100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {60, 0, 0, 0};
  // {11111010 11100111 00001110 11111011 11001111 01101110 10}
  public static final byte[] GRPSPLIT11 = new byte[] {95, -25, 112, -33, -13, 118, 1};
  // {01000010 00000000 00001010 11001000 00000000 01101110 00}
  public static final byte[] GRPSPLIT12 = new byte[] {66, 0, 80, 19, 0, 118, 0};
  // {01001000 10010110 11101010 11011111 11011001 00101111 00}
  public static final byte[] GRPSPLIT13 = new byte[] {18, 105, 87, -5, -101, -12, 0};
  // {00010110 01100001 00010000 00000000 00100100 00010000 10}
  public static final byte[] GRPSPLIT14 = new byte[] {104, -122, 8, 0, 36, 8, 1};
  // {10101101 11100010 11011101 10001010 11110100 11110111 01}
  public static final byte[] GRPSPLIT15 = new byte[] {-75, 71, -69, 81, 47, -17, 2};
  // {11100001 01010011 00010010 01000100 00001001 01010100 11}
  public static final byte[] GRPSPLIT16 = new byte[] {-121, -54, 72, 34, -112, 42, 3};
}


class AtrociousLoanModel_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_63_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <92539.03f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
             (data[4 /* annual_inc */] <30928.484f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <7548.5f ? 
                        -0.0012436188f : 
                        0.007906364f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        4.137364E-5f : 
                        0.016525019f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0137142f : 
                        -0.0019428055f) : 
                     (data[0 /* loan_amnt */] <4137.5f ? 
                        -0.0057609375f : 
                        0.008194422f))) : 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                 (data[4 /* annual_inc */] <60669.08f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.0045430637f : 
                        0.007895698f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.0017090738f : 
                        0.008543769f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <48.0375f ? 
                        0.0026154441f : 
                        0.015020757f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <18.745312f ? 
                        0.04186055f : 
                        0.008709087f)))) : 
         (data[11 /* longest_credit_length */] <14.0f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <24758.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 49, 0, data[6])) ? 
                        -0.017354956f : 
                        -0.0024881782f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 0, data[6]) || (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 49, 0, data[6])) ? 
                        2.3155578E-4f : 
                        0.019301299f)) : 
                 (data[2 /* emp_length */] <3.5f ? 
                     (data[0 /* loan_amnt */] <14525.5f ? 
                        0.02016331f : 
                        -0.015256693f) : 
                     (data[9 /* revol_util */] <86.0625f ? 
                        0.018937843f : 
                        0.054779623f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <30.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <19.5f ? 
                        -0.012322244f : 
                        -0.025883114f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.004451354f : 
                        0.095172964f)) : 
                 (data[7 /* dti */] <12.777187f ? 
                     (data[0 /* loan_amnt */] <15833.5f ? 
                        -0.020666469f : 
                        -0.005142374f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <33936.5f ? 
                        -0.0035891251f : 
                        0.010296904f)))));
    return pred;
  } // constant pool size = 221B, number of visited nodes = 31, static init size = 570B
  // {00110100 00101001 10101010 11011100 10011001 01100110 00}
  public static final byte[] GRPSPLIT0 = new byte[] {44, -108, 85, 59, -103, 102, 0};
  // {00111101 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-68, 58, 0, 0};
  // {00000101 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-96, 15, 0, 0};
  // {11111010 01110111 11111111 10011011 11111110 01101111 00}
  public static final byte[] GRPSPLIT3 = new byte[] {95, -18, -1, -39, 127, -10, 0};
  // {00011010 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {88, 63, 0, 0};
  // {01011100 01110101 01011111 10011011 11111110 11111111 00}
  public static final byte[] GRPSPLIT5 = new byte[] {58, -82, -6, -39, 127, -1, 0};
  // {00000000 10000001 01100000 11000011 01000000 11011000 00}
  public static final byte[] GRPSPLIT6 = new byte[] {0, -127, 6, -61, 2, 27, 0};
  // {01100001 10000011 10100010 01010100 10100010 11000100 00}
  public static final byte[] GRPSPLIT7 = new byte[] {-122, -63, 69, 42, 69, 35, 0};
  // {00000001 10110000 10000000 10111101 00010001 01001010 01}
  public static final byte[] GRPSPLIT8 = new byte[] {-128, 13, 1, -67, -120, 82, 2};
  // {00011010 01000010 00111000 00000010 10000100 00100001 0}
  public static final byte[] GRPSPLIT9 = new byte[] {88, 66, 28, 64, 33, -124, 0};
  // {01010100 01000000 00001010 00000000 00100110 00010000 0}
  public static final byte[] GRPSPLIT10 = new byte[] {42, 2, 80, 0, 100, 8, 0};
  // {00111010 01111001 10011111 11100110 11110110 10110101 10}
  public static final byte[] GRPSPLIT11 = new byte[] {92, -98, -7, 103, 111, -83, 1};
  // {01000000 10000000 00100000 00000000 00000000 00000000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {2, 1, 4, 0, 0, 0, 0};
}


class AtrociousLoanModel_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_64_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[2]) ? 
         (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
             (data[0 /* loan_amnt */] <3060.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.032908272f : 
                        -0.009954775f) : 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <16.5f ? 
                        0.096362464f : 
                        -0.028675433f)) : 
                 (data[11 /* longest_credit_length */] <5.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0086046485f : 
                        0.020827027f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <22.494375f ? 
                        -0.0066067823f : 
                        0.0016334302f))) : 
             (data[10 /* total_acc */] <25.5f ? 
                 (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        9.092605E-4f : 
                        0.013798513f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.004114063f : 
                        0.007551802f)) : 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.0073617324f : 
                        -5.5539823E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -9.872916E-4f : 
                        0.013196248f)))) : 
        0.009522025f);
    return pred;
  } // constant pool size = 130B, number of visited nodes = 16, static init size = 396B
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-68, 31, 0, 0};
  // {00000000 10000100 00000000 01000000 00000000 01000001 00}
  public static final byte[] GRPSPLIT1 = new byte[] {0, 33, 0, 2, 0, -126, 0};
  // {00100110 01100011 00110001 00000010 01001000 00001000 00}
  public static final byte[] GRPSPLIT2 = new byte[] {100, -58, -116, 64, 18, 16, 0};
  // {01111010 11100001 00101010 00000001 11001000 01100001 10}
  public static final byte[] GRPSPLIT3 = new byte[] {94, -121, 84, -128, 19, -122, 1};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 00000000 01001001 10000000 01000000 00}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, -110, 1, 2, 0};
  // {01111000 11111101 11101111 11011010 01110111 01101010 01}
  public static final byte[] GRPSPLIT6 = new byte[] {30, -65, -9, 91, -18, 86, 2};
  // {00101001 00100011 01010000 00001111 11001111 10011110 01}
  public static final byte[] GRPSPLIT7 = new byte[] {-108, -60, 10, -16, -13, 121, 2};
  // {01100001 00000010 01101001 11000100 00111010 01111101 10}
  public static final byte[] GRPSPLIT8 = new byte[] {-122, 64, -106, 35, 92, -66, 1};
}


class AtrociousLoanModel_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_65_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
         (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <3.5f ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <41.448437f ? 
                        0.14864233f : 
                        -0.018726965f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <46.503124f ? 
                        -0.014630546f : 
                        -0.0050468906f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <16.55836f ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <89.775f ? 
                        -0.004375037f : 
                        0.06055807f) : 
                     (data[0 /* loan_amnt */] <5781.5f ? 
                        -0.034368098f : 
                        0.042053413f))) : 
             (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                 (data[9 /* revol_util */] <24.01875f ? 
                     (data[10 /* total_acc */] <10.5f ? 
                        0.010002259f : 
                        -0.012160528f) : 
                     (data[11 /* longest_credit_length */] <19.5f ? 
                        0.0018995336f : 
                        -0.004805017f)) : 
                 (Double.isNaN(data[2]) || data[2 /* emp_length */] <2.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(47, 1, data[6]) || (GenModel.bitSetIsInRange(47, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 47, 1, data[6])) ? 
                        0.02362765f : 
                        0.070206665f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(47, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 47, 1, data[6])) ? 
                        -0.0071052476f : 
                        0.015230144f)))) : 
         (data[2 /* emp_length */] <9.5f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <30149.5f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        -0.0041598585f : 
                        0.008227374f) : 
                     (data[7 /* dti */] <9.9625f ? 
                        -0.017550709f : 
                        0.03097329f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <12359.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <9.5f ? 
                        -0.0038110423f : 
                        0.005283285f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(46, 0, data[6]) || (GenModel.bitSetIsInRange(46, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 46, 0, data[6])) ? 
                        0.0062823608f : 
                        0.02035567f))) : 
             (data[11 /* longest_credit_length */] <9.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <19329.0f ? 
                        -0.012332875f : 
                        0.05838844f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.032229777f : 
                        0.137356f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <16.8075f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        -0.0017437588f : 
                        0.026604451f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.0035859586f : 
                        0.014549163f)))));
    return pred;
  } // constant pool size = 207B, number of visited nodes = 31, static init size = 486B
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {44, 0, 0, 0};
  // {01100010 01100011 11111110 11011111 11110110 11101101 00}
  public static final byte[] GRPSPLIT1 = new byte[] {70, -58, 127, -5, 111, -73, 0};
  // {00010100 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {40, 9, 0, 0};
  // {...1 0-bits... 10000000 00000110 00000000 00001000 00000100 1000101}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 96, 0, 16, 32, 81};
  // {...1 0-bits... 10111011 01111101 11111110 11111100 01011110 1111011}
  public static final byte[] GRPSPLIT4 = new byte[] {-35, -66, 127, 63, 122, 111};
  // {10011100 01010101 00100011 00001000 10011001 11101100 00}
  public static final byte[] GRPSPLIT5 = new byte[] {57, -86, -60, 16, -103, 55, 0};
  // {00001001 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-112, 13, 0, 0};
  // {11110011 10101110 11111110 11111111 11110111 110101}
  public static final byte[] GRPSPLIT7 = new byte[] {-49, 117, 127, -1, -17, 43};
  // {11101001 01110001 00011100 11011011 01110001 10111001 01}
  public static final byte[] GRPSPLIT8 = new byte[] {-105, -114, 56, -37, -114, -99, 2};
  // {00000001 00000001 00000000 11000000 00000000 00000000 00}
  public static final byte[] GRPSPLIT9 = new byte[] {-128, -128, 0, 3, 0, 0, 0};
  // {00001001 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-112, 40, 0, 0};
  // {01101010 11001110 11111101 00001111 01000111 01011010 10}
  public static final byte[] GRPSPLIT11 = new byte[] {86, 115, -65, -16, -30, 90, 1};
}


class AtrociousLoanModel_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_66_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <64648.87f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14583.5f ? 
             (data[4 /* annual_inc */] <30326.422f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <8637.5f ? 
                        -0.0018880875f : 
                        0.009096516f) : 
                     (data[11 /* longest_credit_length */] <9.5f ? 
                        0.003950152f : 
                        0.015148378f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -0.0059833573f : 
                        0.0089218505f) : 
                     (data[9 /* revol_util */] <62.04844f ? 
                        -0.0011767f : 
                        0.0047506285f))) : 
             (data[0 /* loan_amnt */] <14743.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.01391637f : 
                        0.053764623f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        0.12003796f : 
                        0.16891143f)) : 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <25.5f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <36.14125f ? 
                        0.006932675f : 
                        -0.059286296f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.012674593f : 
                        0.039283004f)))) : 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28060.5f ? 
             (data[10 /* total_acc */] <17.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                     (data[10 /* total_acc */] <8.5f ? 
                        0.013119219f : 
                        -0.0020867847f) : 
                     (data[7 /* dti */] <10.558594f ? 
                        4.6467435E-4f : 
                        0.022917703f)) : 
                 (data[7 /* dti */] <10.869141f ? 
                     (data[0 /* loan_amnt */] <6011.5f ? 
                        -0.026008701f : 
                        -0.009639432f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.0064820424f : 
                        0.0010124907f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                 (data[0 /* loan_amnt */] <28494.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        0.024334079f : 
                        0.16688971f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.026739113f : 
                        5.3878356E-4f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <21.117188f ? 
                     (data[0 /* loan_amnt */] <34030.5f ? 
                        -0.0030166956f : 
                        0.012494666f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(47, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 47, 2, data[6])) ? 
                        0.007264334f : 
                        0.031038465f)))));
    return pred;
  } // constant pool size = 226B, number of visited nodes = 31, static init size = 600B
  // {00110110 00101001 10101010 11011100 11111001 01100110 00}
  public static final byte[] GRPSPLIT0 = new byte[] {108, -108, 85, 59, -97, 102, 0};
  // {10101010 01010110 00111001 10001011 11000010 01001001 00}
  public static final byte[] GRPSPLIT1 = new byte[] {85, 106, -100, -47, 67, -110, 0};
  // {00010101 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-88, 12, 0, 0};
  // {01000010 00001001 01010000 00000100 10011100 00000000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {66, -112, 10, 32, 57, 0, 0};
  // {00001000 00100010 00000000 00010010 00100001 00101010 00}
  public static final byte[] GRPSPLIT4 = new byte[] {16, 68, 0, 72, -124, 84, 0};
  // {11111101 11111111 10111111 11111111 11111011 11111111 11}
  public static final byte[] GRPSPLIT5 = new byte[] {-65, -1, -3, -1, -33, -1, 3};
  // {00000001 10000000 00001000 00000100 00000011 01011100 00}
  public static final byte[] GRPSPLIT6 = new byte[] {-128, 1, 16, 32, -64, 58, 0};
  // {01000000 10110000 00100010 00010000 00110000 01000011 01}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 13, 68, 8, 12, -62, 2};
  // {01010000 01000011 11010010 01101110 11010100 11000000 00}
  public static final byte[] GRPSPLIT8 = new byte[] {10, -62, 75, 118, 43, 3, 0};
  // {00100011 00111100 00101110 11001100 01111111 10111001 10}
  public static final byte[] GRPSPLIT9 = new byte[] {-60, 60, 116, 51, -2, -99, 1};
  // {10000100 00000000 11000000 00000010 10000000 00000000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {33, 0, 3, 64, 1, 0, 0};
  // {01111111 11111111 10111111 11111111 11111111 11111011 10}
  public static final byte[] GRPSPLIT11 = new byte[] {-2, -1, -3, -1, -1, -33, 1};
  // {...2 0-bits... 11110011 11111111 01110111 11111111 11001111 1001101}
  public static final byte[] GRPSPLIT12 = new byte[] {-49, -1, -18, -1, -13, 89};
}


class AtrociousLoanModel_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_67_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
         (data[9 /* revol_util */] <71.52383f ? 
             (data[9 /* revol_util */] <25.424486f ? 
                 (data[10 /* total_acc */] <10.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -0.009471322f : 
                        0.016448995f) : 
                     (!Double.isNaN(data[2]) ? 
                        -0.012219655f : 
                        0.00557866f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.0062879934f : 
                        -5.276293E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.0018334666f : 
                        0.01809992f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                 (data[9 /* revol_util */] <102.02192f ? 
                     (data[0 /* loan_amnt */] <3734.5f ? 
                        -0.013869713f : 
                        -4.1203838E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        0.008743379f : 
                        0.08935439f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <22.181953f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        0.0024038297f : 
                        0.024657436f) : 
                     (data[0 /* loan_amnt */] <6512.5f ? 
                        -0.0035685152f : 
                        0.010500668f)))) : 
         (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <25.618593f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.012070071f : 
                        3.3654232E-4f) : 
                     (data[9 /* revol_util */] <60.65625f ? 
                        0.021561233f : 
                        -2.3881478E-4f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (data[11 /* longest_credit_length */] <13.5f ? 
                        -0.046596754f : 
                        0.010589663f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <12359.5f ? 
                        0.016764684f : 
                        0.040574264f))) : 
             (!Double.isNaN(data[2]) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 48, 1, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        -0.0013296895f : 
                        0.011405487f) : 
                     (data[7 /* dti */] <13.695f ? 
                        0.00518406f : 
                        0.032699276f)) : 
                0.03640322f)));
    return pred;
  } // constant pool size = 201B, number of visited nodes = 28, static init size = 546B
  // {00010000 01001011 00101011 11110000 01011100 01110101 00}
  public static final byte[] GRPSPLIT0 = new byte[] {8, -46, -44, 15, 58, -82, 0};
  // {00010111 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-24, 27, 0, 0};
  // {00001010 01110001 11110101 00001011 11110110 11001110 00}
  public static final byte[] GRPSPLIT2 = new byte[] {80, -114, -81, -48, 111, 115, 0};
  // {10000001 00010010 00010010 10001010 10000000 10000000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-127, 72, 72, 81, 1, 1, 0};
  // {01111000 11100110 00001010 11011111 11001001 01000010 00}
  public static final byte[] GRPSPLIT4 = new byte[] {30, 103, 80, -5, -109, 66, 0};
  // {00000110 00000001 10000001 00000000 00100000 00001001 00}
  public static final byte[] GRPSPLIT5 = new byte[] {96, -128, -127, 0, 4, -112, 0};
  // {10000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {33, 1, 0, 0};
  // {01110000 00000011 11010010 11000100 00111010 11101001 10}
  public static final byte[] GRPSPLIT7 = new byte[] {14, -64, 75, 35, 92, -105, 1};
  // {00000000 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {0, 25, 0, 0};
  // {01111111 01010011 11111111 11011110 01111110 11111101 10}
  public static final byte[] GRPSPLIT9 = new byte[] {-2, -54, -1, 123, 126, -65, 1};
  // {01111011 11111111 11011110 11111110 01111110 11101011 11}
  public static final byte[] GRPSPLIT10 = new byte[] {-34, -1, 123, 127, 126, -41, 3};
  // {...1 0-bits... 00000000 00000000 00000000 10001000 00100100 10000011}
  public static final byte[] GRPSPLIT11 = new byte[] {0, 0, 0, 17, 36, -63};
  // {00111111 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-4, 62, 0, 0};
}


class AtrociousLoanModel_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_68_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* dti */] <8.982129f ? 
         (data[10 /* total_acc */] <9.0f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                 (data[2 /* emp_length */] <3.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 2, data[6]) || (GenModel.bitSetIsInRange(48, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 48, 2, data[6])) ? 
                        -0.017261732f : 
                        0.011128293f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(48, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 48, 2, data[6])) ? 
                        -0.029181331f : 
                        0.016924692f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <9125.5f ? 
                        -0.011116896f : 
                        0.047059f) : 
                     (Double.isNaN(data[2]) || data[2 /* emp_length */] <1.5f ? 
                        0.06651732f : 
                        0.034076687f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                        -0.016358837f : 
                        -0.0061577754f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 0, data[6]) || (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 49, 0, data[6])) ? 
                        0.0026486304f : 
                        0.058987334f)) : 
                 (data[0 /* loan_amnt */] <4543.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 2, data[6]) || (GenModel.bitSetIsInRange(48, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 48, 2, data[6])) ? 
                        -0.018872585f : 
                        0.038801204f) : 
                     (data[11 /* longest_credit_length */] <9.5f ? 
                        0.015437176f : 
                        -1.8769623E-4f)))) : 
         (!Double.isNaN(data[2]) ? 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (data[11 /* longest_credit_length */] <6.5f ? 
                        0.0078744525f : 
                        -0.007311292f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <22.240625f ? 
                        -0.02813891f : 
                        0.0021864523f)) : 
                 (data[10 /* total_acc */] <24.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        5.2380975E-4f : 
                        0.006553744f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.0041410057f : 
                        0.0018685204f))) : 
            0.010995939f));
    return pred;
  } // constant pool size = 180B, number of visited nodes = 24, static init size = 504B
  // {11010000 10000001 00101000 01010110 00010100 10100100 00}
  public static final byte[] GRPSPLIT0 = new byte[] {11, -127, 20, 106, 40, 37, 0};
  // {...2 0-bits... 10001001 11000000 00001100 00000110 00100100 01000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-111, 3, 48, 96, 36, 2};
  // {...2 0-bits... 00100001 11001011 01000000 00000111 10000001 00101100}
  public static final byte[] GRPSPLIT2 = new byte[] {-124, -45, 2, -32, -127, 52};
  // {00111100 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {60, 25, 0, 0};
  // {00100000 01101010 10100000 11001101 00111011 01010000 01}
  public static final byte[] GRPSPLIT4 = new byte[] {4, 86, 5, -77, -36, 10, 2};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {48, 0, 0, 0};
  // {01000110 00000000 00001011 00000000 00000000 00000001 0}
  public static final byte[] GRPSPLIT6 = new byte[] {98, 0, -48, 0, 0, -128, 0};
  // {...2 0-bits... 10000000 00000000 00000001 00000100 00000001 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 0, -128, 32, -128, 0};
  // {00111111 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-4, 31, 0, 0};
  // {00100010 11010111 00000000 00100011 11000000 11000110 00}
  public static final byte[] GRPSPLIT9 = new byte[] {68, -21, 0, -60, 3, 99, 0};
  // {01010000 11010000 10111011 10011010 11000010 01100000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {10, 11, -35, 89, 67, 6, 0};
  // {01111001 00100011 01010101 01011110 11010010 11011101 00}
  public static final byte[] GRPSPLIT11 = new byte[] {-98, -60, -86, 122, 75, -69, 0};
}


class AtrociousLoanModel_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_69_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
         (data[9 /* revol_util */] <71.52383f ? 
             (data[9 /* revol_util */] <25.424486f ? 
                 (data[10 /* total_acc */] <10.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -0.008671482f : 
                        0.015499787f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <21524.5f ? 
                        -0.012520504f : 
                        -4.6901984E-4f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.005982227f : 
                        -5.0470897E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.0017184538f : 
                        0.016930003f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                 (data[9 /* revol_util */] <102.02192f ? 
                     (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[12])) ? 
                        -0.0064292946f : 
                        9.369165E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.015098396f : 
                        0.09334399f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <22.181953f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        0.0022390615f : 
                        0.023094147f) : 
                     (data[0 /* loan_amnt */] <6512.5f ? 
                        -0.003507992f : 
                        0.009857168f)))) : 
         (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <25836.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.009993908f : 
                        6.670144E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        0.006495529f : 
                        0.043766204f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (data[11 /* longest_credit_length */] <13.5f ? 
                        -0.045566328f : 
                        0.009869746f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <12359.5f ? 
                        0.015740097f : 
                        0.037909888f))) : 
             (!Double.isNaN(data[2]) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 48, 1, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        -0.027313458f : 
                        0.009315613f) : 
                     (data[7 /* dti */] <13.695f ? 
                        0.0046970565f : 
                        0.030497288f)) : 
                0.03336347f)));
    return pred;
  } // constant pool size = 216B, number of visited nodes = 28, static init size = 624B
  // {00010000 01001011 00101011 01110000 01011100 01110101 00}
  public static final byte[] GRPSPLIT0 = new byte[] {8, -46, -44, 14, 58, -82, 0};
  // {00010111 11011000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-24, 27, 0, 0};
  // {00001010 01110001 11110101 00001011 11110110 11001110 00}
  public static final byte[] GRPSPLIT2 = new byte[] {80, -114, -81, -48, 111, 115, 0};
  // {10000001 00010010 00010010 10001010 10000000 10000000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-127, 72, 72, 81, 1, 1, 0};
  // {01111000 11100110 00001010 11011111 11001001 01000010 00}
  public static final byte[] GRPSPLIT4 = new byte[] {30, 103, 80, -5, -109, 66, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {00000110 00000001 00000000 00000000 00100000 00001001 00}
  public static final byte[] GRPSPLIT6 = new byte[] {96, -128, 0, 0, 4, -112, 0};
  // {10000100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {33, 1, 0, 0};
  // {01110000 00000011 11010010 11000100 00111010 11101001 10}
  public static final byte[] GRPSPLIT8 = new byte[] {14, -64, 75, 35, 92, -105, 1};
  // {00000000 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 25, 0, 0};
  // {00001101 01000000 00101001 00010010 01000100 00010000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {-80, 2, -108, 72, 34, 8, 0};
  // {00000010 10010000 00100001 00000000 10000000 00010100 00}
  public static final byte[] GRPSPLIT11 = new byte[] {64, 9, -124, 0, 1, 40, 0};
  // {01111011 11111111 11011110 11111110 01111110 11101011 11}
  public static final byte[] GRPSPLIT12 = new byte[] {-34, -1, 123, 127, 126, -41, 3};
  // {...1 0-bits... 00000000 00000000 00000000 10001000 00100100 10000011}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 0, 0, 17, 36, -63};
  // {01111111 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-2, 62, 0, 0};
}


class AtrociousLoanModel_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_70_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <92539.03f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <20041.5f ? 
             (data[4 /* annual_inc */] <45090.67f ? 
                 (data[0 /* loan_amnt */] <7517.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -0.01393281f : 
                        7.034227E-4f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <92.07188f ? 
                        0.004493644f : 
                        0.02101284f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                        -0.0033540532f : 
                        0.007902587f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <34.366405f ? 
                        0.0046763113f : 
                        0.073509865f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <80.0625f ? 
                        -0.004695599f : 
                        0.010245979f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.008423618f : 
                        0.027873319f)) : 
                 (Double.isNaN(data[4]) || data[4 /* annual_inc */] <81204.25f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 48, 1, data[6])) ? 
                        0.010908268f : 
                        0.042019878f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 48, 1, data[6])) ? 
                        0.001674541f : 
                        0.060582586f)))) : 
         (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[1])) ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <82.425f ? 
                        -0.016000988f : 
                        -0.023422226f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14812.5f ? 
                        -0.017489789f : 
                        0.031472642f)) : 
                 (data[11 /* longest_credit_length */] <13.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(44, 3, data[6]) || (GenModel.bitSetIsInRange(44, 3, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 44, 3, data[6])) ? 
                        6.1257015E-4f : 
                        0.06854836f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <26.489374f ? 
                        -0.01007704f : 
                        0.011705893f))) : 
             (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <19.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.0029180371f : 
                        0.015333004f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        -0.027223798f : 
                        0.017028397f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[10]) || data[10 /* total_acc */] <62.5f ? 
                        -0.023046015f : 
                        0.055125583f) : 
                     (data[10 /* total_acc */] <28.5f ? 
                        0.014878454f : 
                        -0.0053929402f)))));
    return pred;
  } // constant pool size = 218B, number of visited nodes = 31, static init size = 552B
  // {11111111 01100111 11001010 10011111 11111110 01111111 00}
  public static final byte[] GRPSPLIT0 = new byte[] {-1, -26, 83, -7, 127, -2, 0};
  // {00000000 00010001 01000010 00001010 10000000 01000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {0, -120, 66, 80, 1, 34, 0};
  // {01011001 10000010 01110010 01000011 11100100 10011011 10}
  public static final byte[] GRPSPLIT2 = new byte[] {-102, 65, 78, -62, 39, -39, 1};
  // {00011001 00111000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-104, 28, 0, 0};
  // {10000000 01100000 00001001 00010100 00000000 01100100 00}
  public static final byte[] GRPSPLIT4 = new byte[] {1, 6, -112, 40, 0, 38, 0};
  // {...1 0-bits... 00000000 00000000 00000000 10000000 00000000 00100001}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 0, 0, 1, 0, -124};
  // {...1 0-bits... 00000010 00000000 01000000 00000000 00000001 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {64, 0, 2, 0, -128, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {00011000 11111001 00110110 11111100 11010001 11111010 00}
  public static final byte[] GRPSPLIT8 = new byte[] {24, -97, 108, 63, -117, 95, 0};
  // {...3 0-bits... 00000100 00000000 00000000 01100000 00000010 0000}
  public static final byte[] GRPSPLIT9 = new byte[] {32, 0, 0, 6, 64, 0};
  // {00000110 00100011 10001000 00100000 00000111 00000010 00}
  public static final byte[] GRPSPLIT10 = new byte[] {96, -60, 17, 4, -32, 64, 0};
  // {11111001 01010100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-97, 42, 0, 0};
  // {00111011 11010000 00000001 10010010 11110001 01100101 00}
  public static final byte[] GRPSPLIT12 = new byte[] {-36, 11, -128, 73, -113, -90, 0};
}


class AtrociousLoanModel_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_71_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* dti */] <26.204384f ? 
         (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (data[0 /* loan_amnt */] <3464.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.046083897f : 
                        -0.015862798f) : 
                     (data[11 /* longest_credit_length */] <6.5f ? 
                        0.0070711966f : 
                        -0.007131929f)) : 
                 (Double.isNaN(data[10]) || data[10 /* total_acc */] <48.5f ? 
                     (data[7 /* dti */] <0.409375f ? 
                        0.060215905f : 
                        -1.287039E-4f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <27453.5f ? 
                        -0.03370132f : 
                        0.023214556f))) : 
             (data[4 /* annual_inc */] <29786.164f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[1])) ? 
                        0.0024526478f : 
                        0.020320466f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        -0.018008564f : 
                        0.027184827f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                     (data[9 /* revol_util */] <46.503124f ? 
                        -0.0037562598f : 
                        9.686383E-4f) : 
                     (data[7 /* dti */] <1.228125f ? 
                        -0.02424036f : 
                        0.009306665f)))) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <34.95502f ? 
             (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[12])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        -0.015139536f : 
                        0.05055433f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <29.2161f ? 
                        0.0130049875f : 
                        -0.011873117f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <34.81838f ? 
                        0.0038382506f : 
                        0.05996915f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        0.011865787f : 
                        0.053308863f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[1 /* term */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[1])) ? 
                        -0.077637285f : 
                        -0.056929853f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <86.067184f ? 
                        -0.031607807f : 
                        -0.07452302f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <80.0625f ? 
                        0.018518787f : 
                        -0.053246636f) : 
                    0.10375963f))));
    return pred;
  } // constant pool size = 226B, number of visited nodes = 30, static init size = 624B
  // {00111101 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-68, 31, 0, 0};
  // {00100010 11010110 00000000 10010010 01000000 11000011 00}
  public static final byte[] GRPSPLIT1 = new byte[] {68, 107, 0, 73, 2, -61, 0};
  // {01001000 00100000 10110011 01000000 10101100 00101100 00}
  public static final byte[] GRPSPLIT2 = new byte[] {18, 4, -51, 2, 53, 52, 0};
  // {10000100 00101001 11001000 01011000 10011000 01000100 00}
  public static final byte[] GRPSPLIT3 = new byte[] {33, -108, 19, 26, 25, 34, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {2, 0, 0, 0};
  // {00101111 01101000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-12, 22, 0, 0};
  // {00010000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {8, 12, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 0, 0, 0};
  // {01101101 00110001 00010000 01000100 11010010 00100111 00}
  public static final byte[] GRPSPLIT8 = new byte[] {-74, -116, 8, 34, 75, -28, 0};
  // {00000001 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-128, 8, 0, 0};
  // {00000100 00100011 01001001 11000101 00100111 01011000 01}
  public static final byte[] GRPSPLIT10 = new byte[] {32, -60, -110, -93, -28, 26, 2};
  // {00000100 00111100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {32, 60, 0, 0};
  // {01100000 10010010 11011000 01000011 10000100 01101000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {6, 73, 27, -62, 33, 22, 0};
  // {00011110 01000000 00000011 00100000 01101000 00000001 00}
  public static final byte[] GRPSPLIT13 = new byte[] {120, 2, -64, 4, 22, -128, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {1, 0, 0, 0};
  // {00000000 10000000 01000000 01000001 00000000 01000000 00}
  public static final byte[] GRPSPLIT15 = new byte[] {0, 1, 2, -126, 0, 2, 0};
}


class AtrociousLoanModel_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_72_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
         (data[11 /* longest_credit_length */] <14.0f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[1])) ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <338583.34f ? 
                        -0.004978624f : 
                        0.09807963f) : 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[3])) ? 
                        0.0010986289f : 
                        0.01666084f)) : 
                 (data[2 /* emp_length */] <9.5f ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        9.715967E-4f : 
                        0.01833796f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                        0.012025402f : 
                        0.06412816f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                 (data[8 /* delinq_2yrs */] <1.5f ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <84.91875f ? 
                        -0.010687027f : 
                        -9.907652E-4f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.04385301f : 
                        0.009375342f)) : 
                 (Double.isNaN(data[2]) || data[2 /* emp_length */] <1.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(41, 6, data[6]) || (GenModel.bitSetIsInRange(41, 6, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 41, 6, data[6])) ? 
                        0.0026276405f : 
                        0.01607185f) : 
                     (data[10 /* total_acc */] <11.5f ? 
                        0.015719805f : 
                        -0.0028605675f)))) : 
         (data[2 /* emp_length */] <6.5f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <12.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.009723694f : 
                        -0.0016992012f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <21.18625f ? 
                        -6.9512625E-4f : 
                        0.008462364f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <22063.5f ? 
                        -0.0035631424f : 
                        0.030198362f) : 
                     (Double.isNaN(data[2]) || data[2 /* emp_length */] <5.5f ? 
                        0.009114684f : 
                        0.030909203f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                 (data[11 /* longest_credit_length */] <12.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <19594.5f ? 
                        0.0047210283f : 
                        0.025116172f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[5])) ? 
                        -0.0042384746f : 
                        0.019872878f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <62.617188f ? 
                        0.0021023683f : 
                        0.011462734f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        0.017531939f : 
                        0.057928003f)))));
    return pred;
  } // constant pool size = 224B, number of visited nodes = 31, static init size = 588B
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {44, 0, 0, 0};
  // {01110001 10101011 11001100 11111101 11101010 11001101 01}
  public static final byte[] GRPSPLIT1 = new byte[] {-114, -43, 51, -65, 87, -77, 2};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {2, 0, 0, 0};
  // {00001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {16, 0, 0, 0};
  // {00000000 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 40, 0, 0};
  // {00000010 01000010 00110011 11011011 11110110 00100010 00}
  public static final byte[] GRPSPLIT5 = new byte[] {64, 66, -52, -37, 111, 68, 0};
  // {01011111 01101111 11111111 11111111 11110111 01111011 10}
  public static final byte[] GRPSPLIT6 = new byte[] {-6, -10, -1, -1, -17, -34, 1};
  // {...6 0-bits... 10000000 10001000 10110010 00001000 00000000 0}
  public static final byte[] GRPSPLIT7 = new byte[] {1, 17, 77, 16, 0, 0};
  // {00010100 01010101 01000001 00001000 10010001 11000100 00}
  public static final byte[] GRPSPLIT8 = new byte[] {40, -86, -126, 16, -119, 35, 0};
  // {00001011 00000000 10100000 11000010 01001000 00111010 00}
  public static final byte[] GRPSPLIT9 = new byte[] {-48, 0, 5, 67, 18, 92, 0};
  // {10111101 11010000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {-67, 11, 0, 0};
  // {11101000 10100011 10111000 10000011 00010010 01111010 10}
  public static final byte[] GRPSPLIT11 = new byte[] {23, -59, 29, -63, 72, 94, 1};
  // {00000011 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {-64, 41, 0, 0};
  // {00000000 11011100 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 59, 0, 0};
  // {00000000 10100000 00101000 00000000 00000010 01010000 10}
  public static final byte[] GRPSPLIT14 = new byte[] {0, 5, 20, 0, 64, 10, 1};
}


class AtrociousLoanModel_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_73_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <99511.58f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <20041.5f ? 
             (data[4 /* annual_inc */] <49174.875f ? 
                 (data[0 /* loan_amnt */] <7517.5f ? 
                     (data[4 /* annual_inc */] <22580.125f ? 
                        0.0069554f : 
                        -0.0022347092f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -0.0020988795f : 
                        0.006440367f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (data[11 /* longest_credit_length */] <6.5f ? 
                        0.0072756493f : 
                        -0.004142683f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.368906f ? 
                        0.0010817009f : 
                        0.011754564f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <92.07188f ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                        -0.008886106f : 
                        0.03566735f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.00781927f : 
                        0.06334784f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        0.003539538f : 
                        0.012285453f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.014032026f : 
                        0.041429356f)))) : 
         (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
             (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (data[11 /* longest_credit_length */] <12.5f ? 
                        -0.0039699827f : 
                        -0.017407747f) : 
                     (data[11 /* longest_credit_length */] <15.5f ? 
                        0.0010425362f : 
                        -0.00856764f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <31227.5f ? 
                        -0.014262297f : 
                        0.013147708f) : 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[1])) ? 
                        0.004641984f : 
                        0.017430019f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <28.596563f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.035211578f : 
                        0.004678445f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.014332071f : 
                        0.12997863f)) : 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <26.5f ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <3.5f ? 
                        0.07793447f : 
                        0.0027534068f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        -0.05966024f : 
                        0.045589436f)))));
    return pred;
  } // constant pool size = 234B, number of visited nodes = 31, static init size = 648B
  // {01101101 01101001 00111101 11011010 11111101 01011010 00}
  public static final byte[] GRPSPLIT0 = new byte[] {-74, -106, -68, 91, -65, 90, 0};
  // {00000010 00010011 01000010 00011010 10000010 11000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {64, -56, 66, 88, 65, 35, 0};
  // {01011000 11101110 01110111 11011011 11100101 10111011 10}
  public static final byte[] GRPSPLIT2 = new byte[] {26, 119, -18, -37, -89, -35, 1};
  // {10000001 00000000 10001000 00000100 00001000 00000100 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-127, 0, 17, 32, 16, 32, 0};
  // {10011000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {25, 12, 0, 0};
  // {01010000 00000000 01100010 01000010 01100000 10010001 10}
  public static final byte[] GRPSPLIT5 = new byte[] {10, 0, 70, 66, 6, -119, 1};
  // {11100111 10111111 11111100 01111100 10011010 11001111 11}
  public static final byte[] GRPSPLIT6 = new byte[] {-25, -3, 63, 62, 89, -13, 3};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {40, 0, 0, 0};
  // {00000000 11101011 10111100 11110111 11011101 11110110 11}
  public static final byte[] GRPSPLIT8 = new byte[] {0, -41, 61, -17, -69, 111, 3};
  // {01111000 00010001 11100010 01000100 00110011 00111011 00}
  public static final byte[] GRPSPLIT9 = new byte[] {30, -120, 71, 34, -52, -36, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 0, 0};
  // {01000010 00000000 00000011 00000100 00100011 00000100 10}
  public static final byte[] GRPSPLIT11 = new byte[] {66, 0, -64, 32, -60, 32, 1};
  // {00011100 01100010 00111000 00010010 11000100 00101001 00}
  public static final byte[] GRPSPLIT12 = new byte[] {56, 70, 28, 72, 35, -108, 0};
  // {00001000 01000010 00100000 00000000 00000000 00100010 00}
  public static final byte[] GRPSPLIT13 = new byte[] {16, 66, 4, 0, 0, 68, 0};
  // {01001000 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {18, 2, 0, 0};
}


class AtrociousLoanModel_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_74_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* dti */] <8.982129f ? 
         (data[10 /* total_acc */] <9.0f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                 (data[2 /* emp_length */] <3.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 2, data[6]) || (GenModel.bitSetIsInRange(48, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 48, 2, data[6])) ? 
                        -0.016596686f : 
                        0.010105927f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <62781.25f ? 
                        -2.657523E-4f : 
                        0.03702314f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                     (Double.isNaN(data[2]) || data[2 /* emp_length */] <2.5f ? 
                        -0.021732911f : 
                        0.023121346f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15055.5f ? 
                        0.034568302f : 
                        0.07678174f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <2.5f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                        -0.013061146f : 
                        0.0031786785f) : 
                     (data[2 /* emp_length */] <1.5f ? 
                        0.10954913f : 
                        0.012045193f)) : 
                 (data[0 /* loan_amnt */] <4543.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 2, data[6]) || (GenModel.bitSetIsInRange(48, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 48, 2, data[6])) ? 
                        -0.018951314f : 
                        0.033560727f) : 
                     (data[11 /* longest_credit_length */] <12.5f ? 
                        0.0060921446f : 
                        -0.0048348582f)))) : 
         (!Double.isNaN(data[2]) ? 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                     (data[11 /* longest_credit_length */] <6.5f ? 
                        0.007927326f : 
                        -0.0062011904f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <38.415627f ? 
                        -0.014329821f : 
                        0.004402415f)) : 
                 (data[10 /* total_acc */] <24.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        3.5875125E-4f : 
                        0.005985438f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.0033117626f : 
                        0.002171988f))) : 
            0.009989381f));
    return pred;
  } // constant pool size = 165B, number of visited nodes = 24, static init size = 414B
  // {11010000 10000001 00101000 01010110 00010100 10100100 00}
  public static final byte[] GRPSPLIT0 = new byte[] {11, -127, 20, 106, 40, 37, 0};
  // {...2 0-bits... 10001001 11000000 00001100 00000110 00100100 01000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-111, 3, 48, 96, 36, 2};
  // {01111100 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {62, 25, 0, 0};
  // {00101001 01101010 11100010 11001101 00111011 01010000 01}
  public static final byte[] GRPSPLIT3 = new byte[] {-108, 86, 71, -77, -36, 10, 2};
  // {00010001 00110100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-120, 44, 0, 0};
  // {...2 0-bits... 10000100 00000001 00000001 00000100 00000001 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {33, -128, -128, 32, -128, 0};
  // {00111111 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-4, 31, 0, 0};
  // {00100010 11010111 00000000 00100011 00000000 11000110 00}
  public static final byte[] GRPSPLIT7 = new byte[] {68, -21, 0, -60, 0, 99, 0};
  // {01010000 11010000 10111011 10011010 11000010 01100000 00}
  public static final byte[] GRPSPLIT8 = new byte[] {10, 11, -35, 89, 67, 6, 0};
  // {01111001 00100011 01010001 01011010 10010010 11011101 00}
  public static final byte[] GRPSPLIT9 = new byte[] {-98, -60, -118, 90, 73, -69, 0};
}


class AtrociousLoanModel_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_75_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
         (data[9 /* revol_util */] <71.52383f ? 
             (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                 (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[3])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.012693876f : 
                        -0.0032384396f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0020317314f : 
                        0.01417883f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <19.5f ? 
                        -0.0075692497f : 
                        -0.047266226f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        0.0011372406f : 
                        0.008586078f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                 (data[0 /* loan_amnt */] <1847.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.02597787f : 
                        0.058708124f) : 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[3])) ? 
                        -0.0012900134f : 
                        0.0038877872f)) : 
                 (data[10 /* total_acc */] <30.5f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        0.0069987294f : 
                        0.022339199f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <92.76719f ? 
                        -0.006970794f : 
                        0.018036624f)))) : 
         (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                 (data[4 /* annual_inc */] <57676.33f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.009758933f : 
                        0.006957495f) : 
                     (!Double.isNaN(data[2]) ? 
                        -0.006258981f : 
                        0.03153488f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <89.973434f ? 
                     (data[0 /* loan_amnt */] <4718.5f ? 
                        -0.029287644f : 
                        0.015738547f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <18.299376f ? 
                        0.11883707f : 
                        0.0149350995f))) : 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28532.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 48, 1, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        -0.0019011976f : 
                        0.007900878f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[5])) ? 
                        0.022074038f : 
                        0.12824188f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 48, 1, data[6])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <3.5f ? 
                        0.01147553f : 
                        0.09686686f) : 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <22.5f ? 
                        0.059430007f : 
                        0.17315559f)))));
    return pred;
  } // constant pool size = 234B, number of visited nodes = 31, static init size = 660B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {56, 0, 0, 0};
  // {01000011 01101010 00011111 11111010 11110110 10000000 01}
  public static final byte[] GRPSPLIT2 = new byte[] {-62, 86, -8, 95, 111, 1, 2};
  // {00000000 00000001 00100000 00000001 10000000 11000100 00}
  public static final byte[] GRPSPLIT3 = new byte[] {0, -128, 4, -128, 1, 35, 0};
  // {11111110 11111111 11111111 10011111 01111111 10111011 00}
  public static final byte[] GRPSPLIT4 = new byte[] {127, -1, -1, -7, -2, -35, 0};
  // {00010010 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {72, 30, 0, 0};
  // {01000000 11100100 00000010 11011101 10000001 01000010 00}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 39, 64, -69, -127, 66, 0};
  // {00000000 00010000 00000000 00000000 00011000 00000001 00}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 8, 0, 0, 24, -128, 0};
  // {00100100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {36, 0, 0, 0};
  // {10000101 01000000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-95, 2, 0, 0};
  // {01110000 00010011 11111111 11001110 01111110 11101001 10}
  public static final byte[] GRPSPLIT10 = new byte[] {14, -56, -1, 115, 126, -105, 1};
  // {00000000 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {0, 41, 0, 0};
  // {00001100 01000000 00000000 00110001 00000000 00010100 00}
  public static final byte[] GRPSPLIT12 = new byte[] {48, 2, 0, -116, 0, 40, 0};
  // {...1 0-bits... 00000000 00000000 00000000 00000000 00000100 10000011}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 0, 0, 0, 32, -63};
  // {00111111 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-4, 62, 0, 0};
  // {00010100 10000100 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {40, 33, 0, 0};
  // {...1 0-bits... 10000000 00100001 11000010 10001000 00100101 00000000}
  public static final byte[] GRPSPLIT16 = new byte[] {1, -124, 67, 17, -92, 0};
}


class AtrociousLoanModel_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_76_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* dti */] <26.204384f ? 
         (data[9 /* revol_util */] <89.21523f ? 
             (!Double.isNaN(data[2]) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                     (data[11 /* longest_credit_length */] <6.5f ? 
                        0.004087104f : 
                        -0.002903789f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        0.0013759927f : 
                        0.0114595285f)) : 
                0.007893625f) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                 (data[9 /* revol_util */] <93.2965f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        -0.010686659f : 
                        0.02199502f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(48, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 48, 2, data[6])) ? 
                        -0.014771645f : 
                        0.0065875077f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <98.63354f ? 
                     (data[7 /* dti */] <11.4625f ? 
                        0.0017521486f : 
                        0.013664872f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(47, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 47, 0, data[6])) ? 
                        -0.06338453f : 
                        -0.0036198546f)))) : 
         (Double.isNaN(data[7]) || data[7 /* dti */] <34.95502f ? 
             (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[12])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[1 /* term */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                        -0.036568433f : 
                        -0.010997533f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <29.2161f ? 
                        0.012221659f : 
                        -0.011324859f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.0026059737f : 
                        0.016672093f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <34.68174f ? 
                        0.008690407f : 
                        0.043673813f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[1 /* term */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[1])) ? 
                        -0.07600566f : 
                        -0.05660729f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <86.067184f ? 
                        -0.026831532f : 
                        -0.07378082f)) : 
                 (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[1])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                        -0.028143f : 
                        0.052605215f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        0.010878735f : 
                        0.12086756f)))));
    return pred;
  } // constant pool size = 220B, number of visited nodes = 28, static init size = 648B
  // {00010001 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-120, 15, 0, 0};
  // {01100001 10001010 00001010 11011000 10001000 00010000 10}
  public static final byte[] GRPSPLIT1 = new byte[] {-122, 81, 80, 27, 17, 8, 1};
  // {11010010 11100101 00001110 11011011 01011110 00111110 00}
  public static final byte[] GRPSPLIT2 = new byte[] {75, -89, 112, -37, 122, 124, 0};
  // {10001100 10011100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {49, 57, 0, 0};
  // {...2 0-bits... 01101011 10011101 01111111 01111111 11111111 11111110}
  public static final byte[] GRPSPLIT4 = new byte[] {-42, -71, -2, -2, -1, 127};
  // {01111101 11111111 11111101 10111110 11100101 1110101}
  public static final byte[] GRPSPLIT5 = new byte[] {-66, -1, -65, 125, -89, 87};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {2, 0, 0, 0};
  // {01101101 00110001 00010000 01000100 11010010 00100111 00}
  public static final byte[] GRPSPLIT7 = new byte[] {-74, -116, 8, 34, 75, -28, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {00001100 01111111 01101111 11001101 00100111 01111010 01}
  public static final byte[] GRPSPLIT9 = new byte[] {48, -2, -10, -77, -28, 94, 2};
  // {01100000 10010010 11010000 01000011 10000100 01101000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {6, 73, 11, -62, 33, 22, 0};
  // {00011110 01000000 00001010 00000000 01101000 00000001 00}
  public static final byte[] GRPSPLIT11 = new byte[] {120, 2, 80, 0, 22, -128, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {2, 0, 0, 0};
  // {01000000 00000000 01000000 01000000 00000000 01001000 00}
  public static final byte[] GRPSPLIT14 = new byte[] {2, 0, 2, 2, 0, 18, 0};
  // {11011111 11111101 11101111 11111111 11111011 11010111 11}
  public static final byte[] GRPSPLIT15 = new byte[] {-5, -65, -9, -1, -33, -21, 3};
}


class AtrociousLoanModel_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_77_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
         (data[9 /* revol_util */] <25.778906f ? 
             (data[10 /* total_acc */] <5.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <9.5f ? 
                        -0.03494371f : 
                        0.033335533f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        0.0017190534f : 
                        0.060524773f)) : 
                 (data[11 /* longest_credit_length */] <13.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.007983042f : 
                        0.0096354885f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.017990341f : 
                        -0.0073565985f))) : 
             (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <13.5f ? 
                        -0.0016737947f : 
                        -0.007711209f) : 
                     (data[11 /* longest_credit_length */] <19.5f ? 
                        0.001970496f : 
                        -0.0047205067f)) : 
                 (data[2 /* emp_length */] <9.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <12.5f ? 
                        -0.0019798696f : 
                        0.0047934772f) : 
                     (data[11 /* longest_credit_length */] <9.5f ? 
                        0.025417015f : 
                        0.004698745f)))) : 
         (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <26914.5f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.6075f ? 
                        -0.0028271682f : 
                        0.006267782f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.014607288f : 
                        0.01793336f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <4.04375f ? 
                        0.061240405f : 
                        0.0105373915f) : 
                     (data[0 /* loan_amnt */] <7238.5f ? 
                        0.035046566f : 
                        0.10611976f))) : 
             (Double.isNaN(data[2]) || data[2 /* emp_length */] <2.5f ? 
                 (data[9 /* revol_util */] <90.53203f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <25.016407f ? 
                        0.013652681f : 
                        0.033692174f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 48, 1, data[6])) ? 
                        -0.011678129f : 
                        0.075259425f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                     (data[11 /* longest_credit_length */] <8.5f ? 
                        0.030806884f : 
                        0.0047941846f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 48, 1, data[6])) ? 
                        0.0016557737f : 
                        0.13016218f)))));
    return pred;
  } // constant pool size = 216B, number of visited nodes = 31, static init size = 540B
  // {01011000 00000000 00101011 01010000 10101100 00110111 00}
  public static final byte[] GRPSPLIT0 = new byte[] {26, 0, -44, 10, 53, -20, 0};
  // {01111000 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {30, 47, 0, 0};
  // {00100000 01001000 01100000 00111001 10010011 11000000 01}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 18, 6, -100, -55, 3, 2};
  // {01111010 10000000 01101001 01010010 00000110 10110000 00}
  public static final byte[] GRPSPLIT3 = new byte[] {94, 1, -106, 74, 96, 13, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {40, 0, 0, 0};
  // {01100010 01100011 11111110 11111011 11110110 01000010 00}
  public static final byte[] GRPSPLIT5 = new byte[] {70, -58, 127, -33, 111, 66, 0};
  // {01110000 00000001 10010010 11000100 00111010 11101001 10}
  public static final byte[] GRPSPLIT6 = new byte[] {14, -128, 73, 35, 92, -105, 1};
  // {00000000 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 25, 0, 0};
  // {01111011 10111111 11111111 11011110 11111110 11111001 10}
  public static final byte[] GRPSPLIT8 = new byte[] {-34, -3, -1, 123, 127, -97, 1};
  // {00000010 00010000 01000000 00000000 00000000 00000000 01}
  public static final byte[] GRPSPLIT9 = new byte[] {64, 8, 2, 0, 0, 0, 2};
  // {...1 0-bits... 01111111 11111110 11011111 11110111 10111111 01111110}
  public static final byte[] GRPSPLIT10 = new byte[] {-2, 127, -5, -17, -3, 126};
  // {00010100 00100100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {40, 36, 0, 0};
  // {...1 0-bits... 10000000 00000000 00000000 10000000 00010100 01000011}
  public static final byte[] GRPSPLIT12 = new byte[] {1, 0, 0, 1, 40, -62};
}


class AtrociousLoanModel_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_78_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
         (data[7 /* dti */] <13.356035f ? 
             (data[10 /* total_acc */] <9.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.019626316f : 
                        0.0027761355f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        0.0032335906f : 
                        0.037244745f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.036465805f : 
                        -0.009612205f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <13437.5f ? 
                        -0.005927465f : 
                        0.0034516854f))) : 
             (data[0 /* loan_amnt */] <1982.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.762344f ? 
                        -0.023576178f : 
                        -0.049608752f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        -0.015657237f : 
                        0.018206505f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <28.339375f ? 
                        -8.064846E-4f : 
                        0.005618291f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.005142159f : 
                        0.019140175f)))) : 
         (data[4 /* annual_inc */] <29786.164f ? 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <25101.258f ? 
                        -0.07473868f : 
                        -0.017319946f) : 
                    0.042963043f) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (data[2 /* emp_length */] <4.5f ? 
                        -9.519935E-4f : 
                        0.029728709f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        0.021123702f : 
                        0.058684725f))) : 
             (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[12])) ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <26.794374f ? 
                        -0.010831604f : 
                        -0.04662315f) : 
                     (Double.isNaN(data[10]) || data[10 /* total_acc */] <39.5f ? 
                        -0.0011698281f : 
                        0.035885572f)) : 
                 (data[4 /* annual_inc */] <60022.21f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                        -0.0018285213f : 
                        0.0070246793f) : 
                     (data[10 /* total_acc */] <19.5f ? 
                        0.005906802f : 
                        -2.8311508E-4f)))));
    return pred;
  } // constant pool size = 237B, number of visited nodes = 30, static init size = 690B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {10000000 00001000 10101001 11001010 00000100 11000100 01}
  public static final byte[] GRPSPLIT1 = new byte[] {1, 16, -107, 83, 32, 35, 2};
  // {11111000 11101001 11101011 11011010 11110101 11111111 01}
  public static final byte[] GRPSPLIT2 = new byte[] {31, -105, -41, 91, -81, -1, 2};
  // {10111100 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {61, 1, 0, 0};
  // {01111001 01000010 00110010 10001100 11111011 11000000 01}
  public static final byte[] GRPSPLIT4 = new byte[] {-98, 66, 76, 49, -33, 3, 2};
  // {01111111 01110011 11111111 10111111 11111111 11111011 11}
  public static final byte[] GRPSPLIT5 = new byte[] {-2, -50, -1, -3, -1, -33, 3};
  // {01100100 10110000 01110000 10010001 01111110 00101000 10}
  public static final byte[] GRPSPLIT6 = new byte[] {38, 13, 14, -119, 126, 20, 1};
  // {00001011 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {-48, 62, 0, 0};
  // {00011001 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-104, 31, 0, 0};
  // {10000001 00010001 00001000 01001110 10010010 00010100 00}
  public static final byte[] GRPSPLIT9 = new byte[] {-127, -120, 16, 114, 73, 40, 0};
  // {01101110 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {118, 62, 0, 0};
  // {00000010 00100000 00010001 10010000 01000000 00000000 00}
  public static final byte[] GRPSPLIT11 = new byte[] {64, 4, -120, 9, 2, 0, 0};
  // {01000100 00100000 01100011 10010001 00001000 11100000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {34, 4, -58, -119, 16, 7, 0};
  // {00100000 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {4, 10, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {2, 0, 0, 0};
  // {00001010 10010011 11100001 00000000 01011000 10100001 10}
  public static final byte[] GRPSPLIT15 = new byte[] {80, -55, -121, 0, 26, -123, 1};
  // {01111010 11101111 11111111 10011111 00110110 00111110 00}
  public static final byte[] GRPSPLIT16 = new byte[] {94, -9, -1, -7, 108, 124, 0};
}


class AtrociousLoanModel_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_79_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <92539.03f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14044.5f ? 
             (data[4 /* annual_inc */] <36593.36f ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <7051.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -0.0041640694f : 
                        0.0054393923f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        0.003330127f : 
                        0.017356394f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <6.5f ? 
                        0.0053276676f : 
                        -0.0036953625f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.002109492f : 
                        0.029040327f))) : 
             (data[11 /* longest_credit_length */] <9.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.009998694f : 
                        0.009373434f) : 
                     (data[2 /* emp_length */] <8.5f ? 
                        0.02088953f : 
                        0.0633307f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <85.82344f ? 
                        -0.0055186725f : 
                        0.009388242f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        0.0030349356f : 
                        0.016582899f)))) : 
         (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                        -0.016409444f : 
                        0.0050183497f) : 
                     (data[11 /* longest_credit_length */] <13.5f ? 
                        0.0014414372f : 
                        -0.00839416f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <21524.5f ? 
                        -0.040001567f : 
                        0.074510284f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <86.94063f ? 
                        0.049926627f : 
                        0.11963313f))) : 
             (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <19.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.0026927975f : 
                        0.013502124f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        0.0108073745f : 
                        0.035089325f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <34479.5f ? 
                        -0.025759785f : 
                        -0.0028154573f) : 
                     (data[10 /* total_acc */] <28.5f ? 
                        0.015207796f : 
                        -0.0043017515f)))));
    return pred;
  } // constant pool size = 231B, number of visited nodes = 31, static init size = 630B
  // {01010001 01100101 00001000 00001100 11010010 01101001 00}
  public static final byte[] GRPSPLIT0 = new byte[] {-118, -90, 16, 48, 75, -106, 0};
  // {00100110 00000010 00110011 01000000 00011000 10001110 00}
  public static final byte[] GRPSPLIT1 = new byte[] {100, 64, -52, 2, 24, 113, 0};
  // {00010101 10110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-88, 13, 0, 0};
  // {01000001 00000010 00100000 00000010 10001100 01010000 10}
  public static final byte[] GRPSPLIT3 = new byte[] {-126, 64, 4, 64, 49, 10, 1};
  // {10000010 01001001 11110000 11101001 00110011 11000100 01}
  public static final byte[] GRPSPLIT4 = new byte[] {65, -110, 15, -105, -52, 35, 2};
  // {11001110 11001101 11110111 11111011 11111111 11101110 01}
  public static final byte[] GRPSPLIT5 = new byte[] {115, -77, -17, -33, -1, 119, 2};
  // {01011000 10110111 01111111 01011011 11110110 11111001 00}
  public static final byte[] GRPSPLIT6 = new byte[] {26, -19, -2, -38, 111, -97, 0};
  // {10000010 00111000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {65, 28, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {00000000 00000000 00000000 01101100 00000000 10000000 00}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 0, 0, 54, 0, 1, 0};
  // {00011000 11111001 00110110 11111101 11010001 11111011 00}
  public static final byte[] GRPSPLIT10 = new byte[] {24, -97, 108, -65, -117, -33, 0};
  // {10100000 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {5, 10, 0, 0};
  // {10000110 00100011 10001000 00100000 00000111 00000010 00}
  public static final byte[] GRPSPLIT12 = new byte[] {97, -60, 17, 4, -32, 64, 0};
  // {00001000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {16, 8, 0, 0};
  // {00111011 11010000 00000001 10000010 11110001 01100101 00}
  public static final byte[] GRPSPLIT14 = new byte[] {-36, 11, -128, 65, -113, -90, 0};
}


class AtrociousLoanModel_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_80_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
         (data[9 /* revol_util */] <25.778906f ? 
             (data[10 /* total_acc */] <5.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <9.5f ? 
                        -0.034066845f : 
                        0.03069961f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        0.0015048161f : 
                        0.054931402f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <21254.5f ? 
                     (!Double.isNaN(data[2]) ? 
                        -0.010745937f : 
                        0.00694506f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.006750923f : 
                        0.024206234f))) : 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <27.493126f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.003641023f : 
                        3.8266546E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -5.74173E-4f : 
                        0.010545845f)) : 
                 (data[0 /* loan_amnt */] <4004.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.0148242265f : 
                        0.0040465277f) : 
                     (data[9 /* revol_util */] <52.37031f ? 
                        0.0012029348f : 
                        0.010059066f)))) : 
         (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                 (data[4 /* annual_inc */] <57676.33f ? 
                     (data[4 /* annual_inc */] <23503.623f ? 
                        0.037121587f : 
                        6.610849E-4f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <56.6125f ? 
                        -3.0813794E-4f : 
                        -0.00962503f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <52.56875f ? 
                     (data[0 /* loan_amnt */] <6312.5f ? 
                        -0.025501829f : 
                        0.011054896f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <94562.5f ? 
                        0.049429726f : 
                        -0.011271773f))) : 
             (Double.isNaN(data[7]) || data[7 /* dti */] <24.212696f ? 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 48, 1, data[6])) ? 
                        -0.007353015f : 
                        0.045956574f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 48, 1, data[6])) ? 
                        0.00367294f : 
                        0.015862312f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 48, 1, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        -0.038067825f : 
                        0.008199266f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <21188.5f ? 
                        0.021682968f : 
                        0.052354336f)))));
    return pred;
  } // constant pool size = 218B, number of visited nodes = 31, static init size = 564B
  // {01011000 00000000 00101011 01010000 10101100 00110111 00}
  public static final byte[] GRPSPLIT0 = new byte[] {26, 0, -44, 10, 53, -20, 0};
  // {01111000 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {30, 47, 0, 0};
  // {01000000 11000011 01100000 00110100 10000101 10010000 01}
  public static final byte[] GRPSPLIT2 = new byte[] {2, -61, 6, 44, -95, 9, 2};
  // {00001111 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-16, 31, 0, 0};
  // {00101010 01000101 00110011 00001011 11110000 11000110 00}
  public static final byte[] GRPSPLIT4 = new byte[] {84, -94, -52, -48, 15, 99, 0};
  // {00000100 11100011 01000000 10100100 10000010 01101010 00}
  public static final byte[] GRPSPLIT5 = new byte[] {32, -57, 2, 37, 65, 86, 0};
  // {01001000 00010000 11101010 11011110 10100101 00000101 00}
  public static final byte[] GRPSPLIT6 = new byte[] {18, 8, 87, 123, -91, -96, 0};
  // {01110000 00010011 11111111 11011110 01111110 11111001 10}
  public static final byte[] GRPSPLIT7 = new byte[] {14, -56, -1, 123, 126, -97, 1};
  // {00000000 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {0, 41, 0, 0};
  // {00111111 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-4, 62, 0, 0};
  // {...1 0-bits... 01000000 00000000 11000000 10000000 00001101 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {2, 0, 3, 1, -80, 0};
  // {...1 0-bits... 10000000 00000011 00100001 10000000 00100101 11100011}
  public static final byte[] GRPSPLIT11 = new byte[] {1, -64, -124, 1, -92, -57};
  // {...1 0-bits... 11000000 00000000 00000000 10101100 10000100 10010011}
  public static final byte[] GRPSPLIT12 = new byte[] {3, 0, 0, 53, 33, -55};
  // {01111001 01101100 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-98, 54, 0, 0};
}


class AtrociousLoanModel_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_81_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* dti */] <8.982129f ? 
         (data[10 /* total_acc */] <9.0f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                 (data[2 /* emp_length */] <3.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 2, data[6]) || (GenModel.bitSetIsInRange(48, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 48, 2, data[6])) ? 
                        -0.016016306f : 
                        0.009167189f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(48, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 48, 2, data[6])) ? 
                        -0.02260163f : 
                        0.015576904f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <62.2125f ? 
                        -0.019035626f : 
                        0.021467756f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <16672.5f ? 
                        0.030489326f : 
                        0.0750364f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <2.5f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        -0.010156021f : 
                        0.0031790095f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.007545023f : 
                        0.04503419f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <20445.5f ? 
                     (Double.isNaN(data[10]) || data[10 /* total_acc */] <19.5f ? 
                        0.0048223636f : 
                        -0.008077895f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(42, 2, data[6]) || (GenModel.bitSetIsInRange(42, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 42, 2, data[6])) ? 
                        0.007544511f : 
                        0.09065474f)))) : 
         (!Double.isNaN(data[2]) ? 
             (data[0 /* loan_amnt */] <1982.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <22.068125f ? 
                        -0.02154246f : 
                        -0.037657008f) : 
                     (data[9 /* revol_util */] <95.02812f ? 
                        -9.650352E-4f : 
                        0.05922572f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                     (data[11 /* longest_credit_length */] <6.5f ? 
                        0.006220831f : 
                        -3.4317168E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        0.002727852f : 
                        0.016457362f))) : 
            0.008802854f));
    return pred;
  } // constant pool size = 172B, number of visited nodes = 24, static init size = 456B
  // {11010000 10000001 00101000 01010110 00010100 10100100 00}
  public static final byte[] GRPSPLIT0 = new byte[] {11, -127, 20, 106, 40, 37, 0};
  // {...2 0-bits... 10001001 11000000 00001100 00000110 00100100 01000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-111, 3, 48, 96, 36, 2};
  // {...2 0-bits... 00100001 11001010 00000000 00000111 10000001 00101100}
  public static final byte[] GRPSPLIT2 = new byte[] {-124, 83, 0, -32, -127, 52};
  // {01111100 10011100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {62, 57, 0, 0};
  // {00100000 01101010 10100000 11001101 00011011 01010000 00}
  public static final byte[] GRPSPLIT4 = new byte[] {4, 86, 5, -77, -40, 10, 0};
  // {00010001 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-120, 45, 0, 0};
  // {01000110 00000000 01011011 00010010 01000000 00000001 00}
  public static final byte[] GRPSPLIT6 = new byte[] {98, 0, -38, 72, 2, -128, 0};
  // {...2 0-bits... 00000000 00000000 00000000 00100000 00000100 01}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 0, 0, 4, 32, 2};
  // {01100000 10110000 00100010 10011101 11111000 00111000 10}
  public static final byte[] GRPSPLIT8 = new byte[] {6, 13, 68, -71, 31, 28, 1};
  // {00010000 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {8, 14, 0, 0};
  // {10000101 00000011 10001001 11011110 10010001 00010100 00}
  public static final byte[] GRPSPLIT10 = new byte[] {-95, -64, -111, 123, -119, 40, 0};
}


class AtrociousLoanModel_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_82_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
         (data[0 /* loan_amnt */] <2858.5f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <15.5f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <16.575312f ? 
                        -0.036473937f : 
                        -0.054597512f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <18.179375f ? 
                        -0.043360703f : 
                        0.029609988f)) : 
                 (!Double.isNaN(data[2]) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <85.88125f ? 
                        -0.020904357f : 
                        0.016075095f) : 
                    0.038557198f)) : 
             (data[11 /* longest_credit_length */] <6.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (data[0 /* loan_amnt */] <7894.5f ? 
                        -0.0088908095f : 
                        0.010539857f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <4.003125f ? 
                        0.19029826f : 
                        0.02427154f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[3])) ? 
                        -0.008608383f : 
                        -0.0022977912f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <29981.5f ? 
                        5.0090766E-4f : 
                        0.023532625f)))) : 
         (data[4 /* annual_inc */] <29786.164f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                 (Double.isNaN(data[4]) || data[4 /* annual_inc */] <26953.568f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.018707585f : 
                        0.0055004815f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.018581575f : 
                        0.013718061f)) : 
                 (data[9 /* revol_util */] <101.09375f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <7572.5f ? 
                        0.00961036f : 
                        0.025735829f) : 
                    0.10187845f)) : 
             (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <72.7875f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.004578806f : 
                        -1.5888827E-4f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.0065443898f : 
                        0.0036188771f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.01680503f : 
                        4.7495312E-5f) : 
                     (Double.isNaN(data[2]) || data[2 /* emp_length */] <3.5f ? 
                        0.015076948f : 
                        0.0059123235f)))));
    return pred;
  } // constant pool size = 206B, number of visited nodes = 29, static init size = 540B
  // {00111101 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-68, 63, 0, 0};
  // {01100110 01100010 10010001 10010011 11100000 01101111 00}
  public static final byte[] GRPSPLIT1 = new byte[] {102, 70, -119, -55, 7, -10, 0};
  // {00110000 10000001 00010000 10100000 00001010 01100101 10}
  public static final byte[] GRPSPLIT2 = new byte[] {12, -127, 8, 5, 80, -90, 1};
  // {00000010 11010110 00100010 00100001 00000000 11000011 00}
  public static final byte[] GRPSPLIT3 = new byte[] {64, 107, 68, -124, 0, -61, 0};
  // {00011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {56, 0, 0, 0};
  // {00010100 00101001 11001001 11011000 10111001 01100110 00}
  public static final byte[] GRPSPLIT5 = new byte[] {40, -108, -109, 27, -99, 102, 0};
  // {01111101 01101011 11111011 11011011 11111111 11111111 00}
  public static final byte[] GRPSPLIT6 = new byte[] {-66, -42, -33, -37, -1, -1, 0};
  // {10100010 00000000 00010000 00000000 01000100 10000000 01}
  public static final byte[] GRPSPLIT7 = new byte[] {69, 0, 8, 0, 34, 1, 2};
  // {00101000 01100001 01111011 10001011 11010110 10011000 00}
  public static final byte[] GRPSPLIT8 = new byte[] {20, -122, -34, -47, 107, 25, 0};
  // {01111101 11100010 10001111 11111111 11100111 01101110 01}
  public static final byte[] GRPSPLIT9 = new byte[] {-66, 71, -15, -1, -25, 118, 2};
  // {01010000 00010011 10011111 11011110 01111010 01111001 10}
  public static final byte[] GRPSPLIT10 = new byte[] {10, -56, -7, 123, 94, -98, 1};
  // {01111111 01110011 11111111 11011110 11111110 01111011 10}
  public static final byte[] GRPSPLIT11 = new byte[] {-2, -50, -1, 123, 127, -34, 1};
}


class AtrociousLoanModel_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_83_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <99511.58f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <20041.5f ? 
             (data[4 /* annual_inc */] <49174.875f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                     (data[4 /* annual_inc */] <36616.42f ? 
                        -0.0016759302f : 
                        -0.012188164f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <10568.5f ? 
                        9.593461E-4f : 
                        0.0064046793f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -0.008719228f : 
                        -0.0018742343f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.368906f ? 
                        0.0011861731f : 
                        0.009814251f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                 (data[11 /* longest_credit_length */] <13.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <29160.5f ? 
                        -7.458012E-4f : 
                        0.032568056f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <22.980469f ? 
                        -0.0025955837f : 
                        -0.018862914f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        0.0034524442f : 
                        0.01122037f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.009869047f : 
                        0.03334101f)))) : 
         (data[11 /* longest_credit_length */] <14.0f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[2]) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 49, 0, data[6])) ? 
                        -0.012549937f : 
                        -8.04514E-5f) : 
                    0.077341646f) : 
                 (data[9 /* revol_util */] <97.05f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <27.179688f ? 
                        0.011313282f : 
                        0.07153592f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(42, 8, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 42, 8, data[6])) ? 
                        0.028326178f : 
                        0.15543322f))) : 
             (Double.isNaN(data[2]) || data[2 /* emp_length */] <7.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[3])) ? 
                        -0.012830469f : 
                        9.6678047E-4f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <46.503124f ? 
                        -0.009674406f : 
                        0.009479331f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <97.05f ? 
                        -0.019497216f : 
                        -0.04505582f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        -0.007945439f : 
                        0.027026046f)))));
    return pred;
  } // constant pool size = 219B, number of visited nodes = 30, static init size = 594B
  // {01111111 01100011 11111001 11011010 11111111 01111010 00}
  public static final byte[] GRPSPLIT0 = new byte[] {-2, -58, -97, 91, -1, 94, 0};
  // {00000010 00010011 01000010 00111010 10000010 11000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {64, -56, 66, 92, 65, 35, 0};
  // {00111111 11011100 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-4, 59, 0, 0};
  // {01011000 11101110 01110110 11001011 11100101 10111011 10}
  public static final byte[] GRPSPLIT3 = new byte[] {26, 119, 110, -45, -89, -35, 1};
  // {10011000 00111000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {25, 28, 0, 0};
  // {01010000 00000000 01100010 01000010 01100000 10010001 10}
  public static final byte[] GRPSPLIT5 = new byte[] {10, 0, 70, 66, 6, -119, 1};
  // {11100111 11111111 11111101 01111100 10011010 11001111 11}
  public static final byte[] GRPSPLIT6 = new byte[] {-25, -1, -65, 62, 89, -13, 3};
  // {00000000 10000000 00100000 00110101 10000101 01011011 01}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 1, 4, -84, -95, -38, 2};
  // {01011011 11111110 10111100 10111101 10110101 01111011 0}
  public static final byte[] GRPSPLIT8 = new byte[] {-38, 127, 61, -67, -83, -34, 0};
  // {...8 0-bits... 11111111 11011111 11111111 11111011 11111101 11}
  public static final byte[] GRPSPLIT9 = new byte[] {-1, -5, -1, -33, -65, 3};
  // {01100010 01100001 10101011 11100101 11100000 11100100 10}
  public static final byte[] GRPSPLIT10 = new byte[] {70, -122, -43, -89, 7, 39, 1};
  // {00000100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {32, 0, 0, 0};
  // {10001001 01000000 00011000 01110110 11011111 00110101 10}
  public static final byte[] GRPSPLIT12 = new byte[] {-111, 2, 24, 110, -5, -84, 1};
  // {00010000 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {8, 40, 0, 0};
}


class AtrociousLoanModel_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_84_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <64648.87f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14583.5f ? 
             (data[4 /* annual_inc */] <28610.793f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <7538.0f ? 
                        -5.5016985E-4f : 
                        0.01000431f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        3.22794E-4f : 
                        0.019684197f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        -0.004399807f : 
                        0.008693732f) : 
                     (data[9 /* revol_util */] <38.029686f ? 
                        -0.0031837793f : 
                        0.0025961976f))) : 
             (data[0 /* loan_amnt */] <14743.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.06520791f : 
                        0.025034996f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.0793456f : 
                        0.14053863f)) : 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <25.5f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <36.14125f ? 
                        0.0056953556f : 
                        -0.056825012f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.03542643f : 
                        1.1373438E-4f)))) : 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28060.5f ? 
             (data[10 /* total_acc */] <17.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <506970.5f ? 
                        -0.00326606f : 
                        0.15604882f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        0.0044330587f : 
                        0.024458574f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <95.02812f ? 
                        -0.0068181f : 
                        0.008262417f) : 
                     (data[7 /* dti */] <9.316406f ? 
                        -0.011457443f : 
                        0.0010253813f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                 (data[0 /* loan_amnt */] <29253.5f ? 
                     (data[2 /* emp_length */] <5.5f ? 
                        0.054459848f : 
                        0.0010665982f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.019892866f : 
                        -2.4228609E-4f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <22.359375f ? 
                     (data[0 /* loan_amnt */] <34030.5f ? 
                        -0.00151068f : 
                        0.012091242f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(47, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 47, 2, data[6])) ? 
                        -0.005945573f : 
                        0.02722416f)))));
    return pred;
  } // constant pool size = 228B, number of visited nodes = 31, static init size = 612B
  // {00100100 00100001 10101000 10011100 10000000 01000100 00}
  public static final byte[] GRPSPLIT0 = new byte[] {36, -124, 21, 57, 1, 34, 0};
  // {10111100 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {61, 31, 0, 0};
  // {10101010 11010110 00110001 11001011 11000010 01001000 00}
  public static final byte[] GRPSPLIT2 = new byte[] {85, 107, -116, -45, 67, 18, 0};
  // {00010101 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-88, 12, 0, 0};
  // {01000010 00001011 01010000 00010100 10011101 00100000 00}
  public static final byte[] GRPSPLIT4 = new byte[] {66, -48, 10, 40, -71, 4, 0};
  // {01101110 11101111 01010101 01111111 11111111 01111111 11}
  public static final byte[] GRPSPLIT5 = new byte[] {118, -9, -86, -2, -1, -2, 3};
  // {11111111 11111101 11111111 11101111 11111010 11011111 11}
  public static final byte[] GRPSPLIT6 = new byte[] {-1, -65, -1, -9, 95, -5, 3};
  // {01111101 11101111 10111110 00111101 00100111 01111111 00}
  public static final byte[] GRPSPLIT7 = new byte[] {-66, -9, 125, -68, -28, -2, 0};
  // {01001000 11110000 00110010 00010001 00110000 01001111 01}
  public static final byte[] GRPSPLIT8 = new byte[] {18, 15, 76, -120, 12, -14, 2};
  // {00000100 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {32, 8, 0, 0};
  // {00010001 11000001 11010010 01101110 11010100 11000000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {-120, -125, 75, 118, 43, 3, 0};
  // {00100111 00111100 00101110 11001100 01111111 10111001 10}
  public static final byte[] GRPSPLIT11 = new byte[] {-28, 60, 116, 51, -2, -99, 1};
  // {01111111 11111111 00111110 11111111 11111111 11111011 11}
  public static final byte[] GRPSPLIT12 = new byte[] {-2, -1, 124, -1, -1, -33, 3};
  // {...2 0-bits... 01100011 11111111 11110111 11111111 11111111 1011101}
  public static final byte[] GRPSPLIT13 = new byte[] {-58, -1, -17, -1, -1, 93};
}


class AtrociousLoanModel_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_85_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
         (data[9 /* revol_util */] <15.416797f ? 
             (data[10 /* total_acc */] <9.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                     (data[10 /* total_acc */] <3.5f ? 
                        0.05009253f : 
                        -0.013993689f) : 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[1])) ? 
                        0.014104644f : 
                        0.051402725f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                        -0.024204973f : 
                        -0.012851342f) : 
                     (data[4 /* annual_inc */] <62906.25f ? 
                        -0.0018588224f : 
                        -0.014151313f))) : 
             (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[3])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <19.995f ? 
                        -0.007690878f : 
                        -7.391655E-4f) : 
                     (data[0 /* loan_amnt */] <6968.5f ? 
                        -0.0058868574f : 
                        0.0014396361f)) : 
                 (data[2 /* emp_length */] <9.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.0024650786f : 
                        0.003639011f) : 
                     (data[11 /* longest_credit_length */] <12.5f ? 
                        0.01600246f : 
                        0.002104637f)))) : 
         (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
             (data[9 /* revol_util */] <0.5054687f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        -0.0074582472f : 
                        0.09669583f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        -0.024320262f : 
                        0.13100803f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <26914.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.007614099f : 
                        0.0011058294f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.019137774f : 
                        0.015636714f))) : 
             (Double.isNaN(data[2]) || data[2 /* emp_length */] <2.5f ? 
                 (data[9 /* revol_util */] <95.6086f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 48, 1, data[6])) ? 
                        0.009822079f : 
                        0.026668474f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 48, 1, data[6])) ? 
                        0.03360993f : 
                        0.13609299f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[5])) ? 
                     (data[11 /* longest_credit_length */] <8.5f ? 
                        0.026702037f : 
                        0.0040744073f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 48, 1, data[6])) ? 
                        -0.02011965f : 
                        0.09528253f)))));
    return pred;
  } // constant pool size = 241B, number of visited nodes = 31, static init size = 690B
  // {00010000 01000000 00111000 11010000 01011111 00100100 00}
  public static final byte[] GRPSPLIT0 = new byte[] {8, 2, 28, 11, -6, 36, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {2, 0, 0, 0};
  // {00011000 11000000 01111010 00011011 10001111 01111000 11}
  public static final byte[] GRPSPLIT2 = new byte[] {24, 3, 94, -40, -15, 30, 3};
  // {01001000 01101000 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {18, 22, 0, 0};
  // {00010100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {40, 0, 0, 0};
  // {01100010 11100011 11111111 11111011 11110100 01000110 00}
  public static final byte[] GRPSPLIT5 = new byte[] {70, -57, -1, -33, 47, 98, 0};
  // {10011100 11010100 00000011 01001000 10010001 11000100 00}
  public static final byte[] GRPSPLIT6 = new byte[] {57, 43, -64, 18, -119, 35, 0};
  // {01010000 00000001 10010010 11000100 00111010 11101001 10}
  public static final byte[] GRPSPLIT7 = new byte[] {10, -128, 73, 35, 92, -105, 1};
  // {10000100 00100000 00000001 00000000 01000001 00000000 00}
  public static final byte[] GRPSPLIT8 = new byte[] {33, 4, -128, 0, -126, 0, 0};
  // {00010000 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {8, 25, 0, 0};
  // {01110110 11110100 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {110, 47, 0, 0};
  // {01111001 01010011 11111111 11011110 01111110 11111101 10}
  public static final byte[] GRPSPLIT11 = new byte[] {-98, -54, -1, 123, 126, -65, 1};
  // {01011011 10111111 11111111 11011110 11111110 11111111 10}
  public static final byte[] GRPSPLIT12 = new byte[] {-38, -3, -1, 123, 127, -1, 1};
  // {...1 0-bits... 00000000 00000010 00000101 00001000 00010000 10010010}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 64, -96, 16, 8, 73};
  // {...1 0-bits... 00100000 00000010 00100000 00000000 00100001 00000010}
  public static final byte[] GRPSPLIT14 = new byte[] {4, 64, 4, 0, -124, 64};
  // {00010100 00100100 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {40, 36, 0, 0};
  // {...1 0-bits... 11011111 11111110 11111010 11111111 10111111 01101111}
  public static final byte[] GRPSPLIT16 = new byte[] {-5, 127, 95, -1, -3, -10};
}


class AtrociousLoanModel_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_86_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <85.42422f ? 
         (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
             (Double.isNaN(data[7]) || data[7 /* dti */] <29.9925f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.0062766536f : 
                        -8.302579E-4f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0058385953f : 
                        0.0042232242f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <16672.5f ? 
                        -0.0055259587f : 
                        0.015038917f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <36.70957f ? 
                        0.01478097f : 
                        -0.040269062f))) : 
             (data[4 /* annual_inc */] <29786.164f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        -0.07159256f : 
                        0.0057180994f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        0.015016341f : 
                        0.04613816f)) : 
                 (!Double.isNaN(data[12 /* verification_status */]) && (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[12])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.013619137f : 
                        0.00569364f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        0.0014290276f : 
                        0.007042763f)))) : 
         (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
             (data[11 /* longest_credit_length */] <9.5f ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <20.95336f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(48, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 48, 2, data[6])) ? 
                        -0.033280965f : 
                        0.0024666537f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <74986.78f ? 
                        -0.030926196f : 
                        0.04263957f)) : 
                 (data[4 /* annual_inc */] <38432.938f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(48, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 48, 2, data[6])) ? 
                        -0.009169352f : 
                        0.021051286f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        -0.001261909f : 
                        0.024237465f))) : 
             (Double.isNaN(data[7]) || data[7 /* dti */] <34.210194f ? 
                 (data[0 /* loan_amnt */] <7508.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 0, data[6]) || (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 49, 0, data[6])) ? 
                        -8.38236E-4f : 
                        0.031775117f) : 
                     (data[10 /* total_acc */] <21.0f ? 
                        0.014007816f : 
                        0.006147926f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 0, data[6]) || (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 49, 0, data[6])) ? 
                     (!Double.isNaN(data[1 /* term */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[1])) ? 
                        -0.08703831f : 
                        -0.068856925f) : 
                    0.016518397f))));
    return pred;
  } // constant pool size = 243B, number of visited nodes = 30, static init size = 726B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00011001 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {-104, 31, 0, 0};
  // {00111000 01000100 00110001 01000010 11110010 11001101 00}
  public static final byte[] GRPSPLIT2 = new byte[] {28, 34, -116, 66, 79, -77, 0};
  // {01111011 00111010 00111010 10011011 11111101 00110011 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-34, 92, 92, -39, -65, -52, 0};
  // {01101001 11001111 01011111 01011101 00001011 01001001 01}
  public static final byte[] GRPSPLIT4 = new byte[] {-106, -13, -6, -70, -48, -110, 2};
  // {01001110 00100000 00110001 10010001 01001000 11100010 00}
  public static final byte[] GRPSPLIT5 = new byte[] {114, 4, -116, -119, 18, 71, 0};
  // {01101110 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {118, 62, 0, 0};
  // {00110000 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {12, 10, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {00001010 11010010 10100001 00000000 00011000 11001101 10}
  public static final byte[] GRPSPLIT9 = new byte[] {80, 75, -123, 0, 24, -77, 1};
  // {00100000 00000001 11100000 10000100 00100100 00010000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {4, -128, 7, 33, 36, 8, 0};
  // {11000010 11100111 00001110 11111101 01001111 01101110 10}
  public static final byte[] GRPSPLIT11 = new byte[] {67, -25, 112, -65, -14, 118, 1};
  // {...2 0-bits... 10111011 10011110 11111111 11111101 11111111 10111110}
  public static final byte[] GRPSPLIT12 = new byte[] {-35, 121, -1, -65, -1, 125};
  // {...2 0-bits... 11111111 11111111 00111111 11111111 00111101 11111111}
  public static final byte[] GRPSPLIT13 = new byte[] {-1, -1, -4, -1, -68, -1};
  // {00000100 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {32, 8, 0, 0};
  // {10000000 00000000 00000000 11101100 00000000 00000000 0}
  public static final byte[] GRPSPLIT15 = new byte[] {1, 0, 0, 55, 0, 0, 0};
  // {00000000 10000000 00000000 00100001 00000000 00101000 0}
  public static final byte[] GRPSPLIT16 = new byte[] {0, 1, 0, -124, 0, 20, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {1, 0, 0, 0};
}


class AtrociousLoanModel_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_87_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <99511.58f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <20041.5f ? 
             (data[4 /* annual_inc */] <50318.72f ? 
                 (data[0 /* loan_amnt */] <7517.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <42.5f ? 
                        -0.0012550683f : 
                        0.06137498f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -0.0024424284f : 
                        0.004994344f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (data[11 /* longest_credit_length */] <6.5f ? 
                        0.005597547f : 
                        -0.0039087594f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <24.368906f ? 
                        7.735422E-5f : 
                        0.009689068f))) : 
             (data[11 /* longest_credit_length */] <9.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (data[7 /* dti */] <3.73875f ? 
                        0.06333985f : 
                        -0.008782646f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.020678526f : 
                        0.0570249f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <80.546875f ? 
                        -0.008869216f : 
                        0.008054326f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <83.76875f ? 
                        0.0043975553f : 
                        0.012463717f)))) : 
         (data[11 /* longest_credit_length */] <14.0f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[2]) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 49, 0, data[6])) ? 
                        -0.011999459f : 
                        1.3976335E-4f) : 
                    0.06968534f) : 
                 (data[9 /* revol_util */] <97.05f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <27.179688f ? 
                        0.011133004f : 
                        0.067450315f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(42, 8, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 42, 8, data[6])) ? 
                        0.035359673f : 
                        0.13650668f))) : 
             (Double.isNaN(data[2]) || data[2 /* emp_length */] <7.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        -0.02494805f : 
                        0.01967322f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <46.503124f ? 
                        -0.0106670065f : 
                        0.0039824056f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <97.05f ? 
                        -0.018659277f : 
                        -0.044187777f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        -0.007507885f : 
                        0.025248915f)))));
    return pred;
  } // constant pool size = 209B, number of visited nodes = 30, static init size = 534B
  // {01101101 01111010 00111101 10011010 11111101 01011010 01}
  public static final byte[] GRPSPLIT0 = new byte[] {-74, 94, -68, 89, -65, 90, 2};
  // {00110010 00010011 11001010 01011110 10010010 11000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {76, -56, 83, 122, 73, 35, 0};
  // {11001110 01001100 11110111 11011111 01100101 10001100 11}
  public static final byte[] GRPSPLIT2 = new byte[] {115, 50, -17, -5, -90, 49, 3};
  // {10000000 00000000 10100011 11000000 00100001 00000100 01}
  public static final byte[] GRPSPLIT3 = new byte[] {1, 0, -59, 3, -124, 32, 2};
  // {01011001 11101110 01110110 01001011 11100110 10111011 10}
  public static final byte[] GRPSPLIT4 = new byte[] {-102, 119, 110, -46, 103, -35, 1};
  // {00000000 10000000 00000000 00110101 10000101 01011011 01}
  public static final byte[] GRPSPLIT5 = new byte[] {0, 1, 0, -84, -95, -38, 2};
  // {01011011 11111110 10111100 10111101 10110101 01111011 0}
  public static final byte[] GRPSPLIT6 = new byte[] {-38, 127, 61, -67, -83, -34, 0};
  // {...8 0-bits... 11111111 11111111 11111111 11111011 11111101 11}
  public static final byte[] GRPSPLIT7 = new byte[] {-1, -1, -1, -33, -65, 3};
  // {01111010 11101011 10111111 11100111 11110000 11111110 10}
  public static final byte[] GRPSPLIT8 = new byte[] {94, -41, -3, -25, 15, 127, 1};
  // {10011000 10101100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {25, 53, 0, 0};
  // {10001001 01000000 00011000 00110110 11011111 00110101 10}
  public static final byte[] GRPSPLIT10 = new byte[] {-111, 2, 24, 108, -5, -84, 1};
  // {00010000 00010100 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {8, 40, 0, 0};
}


class AtrociousLoanModel_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_88_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
         (data[9 /* revol_util */] <71.52383f ? 
             (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[1])) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <29.367657f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.004386434f : 
                        0.004767208f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <36.83649f ? 
                        0.007258743f : 
                        -0.048127666f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <19.5f ? 
                        -0.0073592006f : 
                        -0.045842048f) : 
                     (data[0 /* loan_amnt */] <5890.5f ? 
                        0.0141708f : 
                        0.0013195457f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                 (data[0 /* loan_amnt */] <1847.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.025307437f : 
                        0.035894733f) : 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[3])) ? 
                        -0.0010715636f : 
                        0.0031616916f)) : 
                 (data[10 /* total_acc */] <30.5f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                        0.005874055f : 
                        0.019658681f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <23745.5f ? 
                        -0.0087613305f : 
                        0.01164037f)))) : 
         (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <26914.5f ? 
                     (data[9 /* revol_util */] <95.02812f ? 
                        -0.0016997432f : 
                        0.017304774f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        0.0061559975f : 
                        0.05274233f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <113456.66f ? 
                        0.016760154f : 
                        -0.011368234f) : 
                     (data[0 /* loan_amnt */] <7238.5f ? 
                        0.031979043f : 
                        0.09530601f))) : 
             (!Double.isNaN(data[2]) ? 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <7.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(48, 1, data[6]) || (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 48, 1, data[6])) ? 
                        0.0066218493f : 
                        0.018242957f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(48, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 48, 1, data[6])) ? 
                        -0.064335965f : 
                        -0.059839103f)) : 
                0.02610045f)));
    return pred;
  } // constant pool size = 202B, number of visited nodes = 28, static init size = 540B
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {2, 0, 0, 0};
  // {00000000 00000000 00000000 00001010 10010000 11000100 00}
  public static final byte[] GRPSPLIT1 = new byte[] {0, 0, 0, 80, 9, 35, 0};
  // {11111110 11111111 11111111 10011111 01111111 10111011 00}
  public static final byte[] GRPSPLIT2 = new byte[] {127, -1, -1, -7, -2, -35, 0};
  // {01100000 11100100 00000010 01011101 10000001 01000010 00}
  public static final byte[] GRPSPLIT3 = new byte[] {6, 39, 64, -70, -127, 66, 0};
  // {00000000 00010000 00000000 10000000 00011000 00001001 00}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 8, 0, 1, 24, -112, 0};
  // {00100100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {36, 0, 0, 0};
  // {10000101 01100000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {-95, 6, 0, 0};
  // {01110000 00000011 10010010 11000100 00111010 11101001 10}
  public static final byte[] GRPSPLIT7 = new byte[] {14, -64, 73, 35, 92, -105, 1};
  // {00000000 10011000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {0, 25, 0, 0};
  // {00000010 10010000 01100000 00000000 00000000 00000000 00}
  public static final byte[] GRPSPLIT9 = new byte[] {64, 9, 6, 0, 0, 0, 0};
  // {00000010 00010000 01000000 00000000 00000000 00000000 01}
  public static final byte[] GRPSPLIT10 = new byte[] {64, 8, 2, 0, 0, 0, 2};
  // {...1 0-bits... 00000000 00000000 00000000 10001000 00100100 10000011}
  public static final byte[] GRPSPLIT11 = new byte[] {0, 0, 0, 17, 36, -63};
  // {...1 0-bits... 00000000 00000100 00100100 00000000 01000000 01000000}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 32, 36, 0, 2, 2};
}


class AtrociousLoanModel_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_89_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
         (data[0 /* loan_amnt */] <2858.5f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <15.5f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <16.575312f ? 
                        -0.035871454f : 
                        -0.05597371f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <18.179375f ? 
                        -0.04199395f : 
                        0.029231267f)) : 
                 (!Double.isNaN(data[2]) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        -0.009489503f : 
                        -0.048294272f) : 
                    0.029379563f)) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                 (data[9 /* revol_util */] <92.07188f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.013309472f : 
                        -0.0034337982f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -8.873997E-4f : 
                        0.044709638f)) : 
                 (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                     (Double.isNaN(data[10]) || data[10 /* total_acc */] <30.5f ? 
                        0.0033877825f : 
                        -0.00851858f) : 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                        0.0011407889f : 
                        0.020676333f)))) : 
         (!Double.isNaN(data[2]) ? 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <15189.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <18.717188f ? 
                        -0.011238866f : 
                        -0.0016340513f) : 
                     (data[7 /* dti */] <13.102032f ? 
                        -0.0026991796f : 
                        0.0013652587f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <27.451876f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                        0.0010248679f : 
                        0.008517099f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -7.655762E-4f : 
                        0.019757492f))) : 
            0.007540096f));
    return pred;
  } // constant pool size = 158B, number of visited nodes = 23, static init size = 408B
  // {00111001 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-100, 63, 0, 0};
  // {01100110 01101110 11010001 10011011 11101000 01101111 00}
  public static final byte[] GRPSPLIT1 = new byte[] {102, 118, -117, -39, 23, -10, 0};
  // {00100010 11010100 00000010 00100001 10000000 11000011 00}
  public static final byte[] GRPSPLIT2 = new byte[] {68, 43, 64, -124, 1, -61, 0};
  // {00111110 11111111 01110111 10110111 11110110 11101011 10}
  public static final byte[] GRPSPLIT3 = new byte[] {124, -1, -18, -19, 111, -41, 1};
  // {11010000 00000000 10101000 11000000 00001000 00010100 10}
  public static final byte[] GRPSPLIT4 = new byte[] {11, 0, 21, 3, 16, 40, 1};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {2, 0, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {48, 0, 0, 0};
  // {11111100 01110011 11111011 11011111 11011111 01101110 00}
  public static final byte[] GRPSPLIT7 = new byte[] {63, -50, -33, -5, -5, 118, 0};
  // {00010110 01111100 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {104, 62, 0, 0};
  // {10110000 10110011 01000000 11000100 00101111 00111001 01}
  public static final byte[] GRPSPLIT9 = new byte[] {13, -51, 2, 35, -12, -100, 2};
}


class AtrociousLoanModel_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_90_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <92539.03f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14044.5f ? 
             (data[4 /* annual_inc */] <30928.484f ? 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <9.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -0.0033891133f : 
                        0.02132499f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        0.0032755951f : 
                        0.01822573f)) : 
                 (data[9 /* revol_util */] <58.04531f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.009725798f : 
                        -0.0022053446f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.004893672f : 
                        0.0023836775f))) : 
             (data[11 /* longest_credit_length */] <9.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.00822858f : 
                        0.00854186f) : 
                     (data[2 /* emp_length */] <5.5f ? 
                        0.012923432f : 
                        0.042417005f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (data[4 /* annual_inc */] <56000.0f ? 
                        0.0017030387f : 
                        -0.0067354958f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        0.0024757062f : 
                        0.014615106f)))) : 
         (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <60.65625f ? 
                        -0.009496487f : 
                        -0.017127838f) : 
                     (data[11 /* longest_credit_length */] <13.5f ? 
                        0.0016252588f : 
                        -0.00744711f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <23680.5f ? 
                        -0.024520926f : 
                        0.084294006f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <26375.5f ? 
                        0.07969047f : 
                        -0.030964514f))) : 
             (Double.isNaN(data[4]) || data[4 /* annual_inc */] <202683.39f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[5])) ? 
                        -0.011808689f : 
                        0.040686794f) : 
                     (data[0 /* loan_amnt */] <15169.5f ? 
                        -0.0061612856f : 
                        0.005769524f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 50, 0, data[6])) ? 
                        -0.042517107f : 
                        -0.004851874f) : 
                     (data[0 /* loan_amnt */] <25867.5f ? 
                        -0.009909788f : 
                        0.11186512f)))));
    return pred;
  } // constant pool size = 242B, number of visited nodes = 31, static init size = 696B
  // {10000100 00000001 00101000 00000100 10010001 01000100 10}
  public static final byte[] GRPSPLIT0 = new byte[] {33, -128, 20, 32, -119, 34, 1};
  // {00010011 00100000 10011010 01010000 10001000 00100010 00}
  public static final byte[] GRPSPLIT1 = new byte[] {-56, 4, 89, 10, 17, 68, 0};
  // {00011100 01110011 01011011 11011011 11110100 10011101 00}
  public static final byte[] GRPSPLIT2 = new byte[] {56, -50, -38, -37, 47, -71, 0};
  // {11111111 11000110 10001101 10101111 11001100 01101010 00}
  public static final byte[] GRPSPLIT3 = new byte[] {-1, 99, -79, -11, 51, 86, 0};
  // {10000010 01001001 11110000 11101001 00110011 11000100 01}
  public static final byte[] GRPSPLIT4 = new byte[] {65, -110, 15, -105, -52, 35, 2};
  // {11001110 11001101 11110111 11111011 11111111 11100110 01}
  public static final byte[] GRPSPLIT5 = new byte[] {115, -77, -17, -33, -1, 103, 2};
  // {01011000 10110111 01111111 01011011 11110110 11111001 00}
  public static final byte[] GRPSPLIT6 = new byte[] {26, -19, -2, -38, 111, -97, 0};
  // {10000010 00111000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {65, 28, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 0, 0, 0};
  // {00000000 00000000 00000000 01101100 00000000 10000000 00}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 0, 0, 54, 0, 1, 0};
  // {00011000 11111001 10110110 11111101 11010001 11111011 00}
  public static final byte[] GRPSPLIT10 = new byte[] {24, -97, 109, -65, -117, -33, 0};
  // {10100000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {5, 8, 0, 0};
  // {00101111 11111110 10111101 10111010 11100111 00100111 10}
  public static final byte[] GRPSPLIT12 = new byte[] {-12, 127, -67, 93, -25, -28, 1};
  // {00000001 01000100 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {-128, 34, 0, 0};
  // {10000100 00000001 10000000 00000100 10011000 00000001 00}
  public static final byte[] GRPSPLIT14 = new byte[] {33, -128, 1, 32, 25, -128, 0};
  // {00011010 01100000 00001001 00010001 00100000 00101000 00}
  public static final byte[] GRPSPLIT15 = new byte[] {88, 6, -112, -120, 4, 20, 0};
}


class AtrociousLoanModel_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_91_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* revol_util */] <15.543164f ? 
         (data[9 /* revol_util */] <0.13660984f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                 (data[11 /* longest_credit_length */] <3.5f ? 
                    0.056470215f : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(49, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 49, 1, data[6])) ? 
                        -0.048693854f : 
                        -0.0081926575f)) : 
                 (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                     (data[10 /* total_acc */] <12.5f ? 
                        0.036968846f : 
                        0.004999719f) : 
                     (data[10 /* total_acc */] <12.5f ? 
                        0.10946524f : 
                        0.037790444f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (data[7 /* dti */] <0.61015624f ? 
                        0.053808127f : 
                        -0.035319485f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <32.948437f ? 
                        -0.012367148f : 
                        0.048261274f)) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.029838884f : 
                        0.0026983211f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                        1.1945854E-4f : 
                        0.031289946f)))) : 
         (!Double.isNaN(data[2]) ? 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[5])) ? 
                 (data[0 /* loan_amnt */] <1847.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.017425435f : 
                        0.022024179f) : 
                     (data[7 /* dti */] <15.621094f ? 
                        -0.0016387799f : 
                        0.001337319f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <16672.5f ? 
                        -0.0033095204f : 
                        0.008805096f) : 
                     (data[9 /* revol_util */] <20.934376f ? 
                        0.04894663f : 
                        0.012851438f))) : 
            0.006767319f));
    return pred;
  } // constant pool size = 158B, number of visited nodes = 23, static init size = 396B
  // {10011100 01111000 00110010 11111010 01011000 11111100 10}
  public static final byte[] GRPSPLIT0 = new byte[] {57, 30, 76, 95, 26, 63, 1};
  // {...1 0-bits... 10000100 00000100 10010010 00000000 01000000 00000010 0}
  public static final byte[] GRPSPLIT1 = new byte[] {33, 32, 73, 0, 2, 64, 0};
  // {00110000 10000000 01011000 00011000 11001111 00110000 10}
  public static final byte[] GRPSPLIT2 = new byte[] {12, 1, 26, 24, -13, 12, 1};
  // {01111111 11100010 01111111 10011111 11101111 11111010 11}
  public static final byte[] GRPSPLIT3 = new byte[] {-2, 71, -2, -7, -9, 95, 3};
  // {00111001 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-100, 63, 0, 0};
  // {00010000 00000000 00001000 00000000 10000000 00100000 00}
  public static final byte[] GRPSPLIT5 = new byte[] {8, 0, 16, 0, 1, 4, 0};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {0, 8, 0, 0};
  // {00000000 10110000 00000000 10001000 00011000 01001000 10}
  public static final byte[] GRPSPLIT7 = new byte[] {0, 13, 0, 17, 24, 18, 1};
  // {00000011 11100001 00111011 00100000 11101111 00010000 10}
  public static final byte[] GRPSPLIT8 = new byte[] {-64, -121, -36, 4, -9, 8, 1};
}


class AtrociousLoanModel_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_92_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
         (data[9 /* revol_util */] <25.778906f ? 
             (data[10 /* total_acc */] <5.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <9.5f ? 
                        -0.03349905f : 
                        0.027961355f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT1, 32, 0, data[5])) ? 
                        0.031021746f : 
                        0.12212972f)) : 
                 (data[11 /* longest_credit_length */] <13.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.0061486918f : 
                        0.011157398f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.016122647f : 
                        -0.0057119564f))) : 
             (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT4, 32, 0, data[5])) ? 
                 (data[9 /* revol_util */] <84.1339f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.0036888018f : 
                        2.9590577E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        -0.0016543758f : 
                        0.0069519146f)) : 
                 (data[0 /* loan_amnt */] <4004.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.014015547f : 
                        0.004265f) : 
                     (data[9 /* revol_util */] <52.37031f ? 
                        0.0011269116f : 
                        0.008979679f)))) : 
         (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
             (data[9 /* revol_util */] <0.5054687f ? 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.062054936f : 
                        0.00935143f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        0.03687554f : 
                        0.12128662f)) : 
                 (data[0 /* loan_amnt */] <2925.5f ? 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <34.5f ? 
                        -0.020917274f : 
                        0.0813395f) : 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <70359.375f ? 
                        0.003628496f : 
                        -0.0042490223f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                 (data[10 /* total_acc */] <12.5f ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT13, 32, 0, data[3])) ? 
                        0.0043515144f : 
                        0.042843096f) : 
                     (data[7 /* dti */] <15.5625f ? 
                        0.0016177678f : 
                        0.007423481f)) : 
                 (data[7 /* dti */] <13.43414f ? 
                     (data[7 /* dti */] <9.049031f ? 
                        0.029928984f : 
                        -0.019084048f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                        0.020332037f : 
                        0.09479172f)))));
    return pred;
  } // constant pool size = 231B, number of visited nodes = 31, static init size = 630B
  // {01011000 00000000 00101011 01010000 10101100 00110111 00}
  public static final byte[] GRPSPLIT0 = new byte[] {26, 0, -44, 10, 53, -20, 0};
  // {00010000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT1 = new byte[] {8, 0, 0, 0};
  // {00100000 01001000 01000000 00111001 00010001 11000000 01}
  public static final byte[] GRPSPLIT2 = new byte[] {4, 18, 2, -100, -120, 3, 2};
  // {01111010 10000000 01101001 01010010 00000110 10110100 00}
  public static final byte[] GRPSPLIT3 = new byte[] {94, 1, -106, 74, 96, 45, 0};
  // {00001111 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT4 = new byte[] {-16, 31, 0, 0};
  // {00001110 11000101 11110001 00000010 11110010 01000110 00}
  public static final byte[] GRPSPLIT5 = new byte[] {112, -93, -113, 64, 79, 98, 0};
  // {11100010 11100010 00001010 11101011 00001101 01101110 00}
  public static final byte[] GRPSPLIT6 = new byte[] {71, 71, 80, -41, -80, 118, 0};
  // {01001000 00010000 11101010 11011110 10100101 00000101 00}
  public static final byte[] GRPSPLIT7 = new byte[] {18, 8, 87, 123, -91, -96, 0};
  // {01110000 00000011 11011110 11001110 00111110 11101001 10}
  public static final byte[] GRPSPLIT8 = new byte[] {14, -64, 123, 115, 124, -105, 1};
  // {01110110 11110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {110, 15, 0, 0};
  // {10001010 00000000 00000000 00000000 01000000 00000000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {81, 0, 0, 0, 2, 0, 0};
  // {00000100 00100000 00000000 00000000 01000000 00010000 00}
  public static final byte[] GRPSPLIT11 = new byte[] {32, 4, 0, 0, 2, 8, 0};
  // {00000000 00000000 10000000 01000100 00010010 01000001 10}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 0, 1, 34, 72, -126, 1};
  // {01001000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT13 = new byte[] {18, 0, 0, 0};
  // {00010100 10000100 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {40, 33, 0, 0};
}


class AtrociousLoanModel_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_93_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
         (data[11 /* longest_credit_length */] <14.0f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[2]) ? 
                        -0.0027591235f : 
                        0.012443861f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.002924105f : 
                        0.05246434f)) : 
                 (data[2 /* emp_length */] <9.5f ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                        0.0012480274f : 
                        0.016337795f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 1, data[6]) || (GenModel.bitSetIsInRange(49, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 49, 1, data[6])) ? 
                        0.0075682756f : 
                        0.027015248f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                        -0.026258217f : 
                        -0.0061492296f) : 
                     (data[8 /* delinq_2yrs */] <1.5f ? 
                        -0.007080421f : 
                        0.0056371964f)) : 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <42.5f ? 
                     (data[2 /* emp_length */] <1.5f ? 
                        0.0074815205f : 
                        -0.0016223219f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(41, 6, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 41, 6, data[6])) ? 
                        -0.008350963f : 
                        0.0628311f)))) : 
         (data[2 /* emp_length */] <6.5f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <12.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                        -0.0092578465f : 
                        -0.0017625698f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                        9.358395E-4f : 
                        0.022945827f)) : 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <12.5f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(43, 3, data[6]) || (GenModel.bitSetIsInRange(43, 3, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 43, 3, data[6])) ? 
                        6.002326E-4f : 
                        0.015151651f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(43, 3, data[6]) || (GenModel.bitSetIsInRange(43, 3, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 43, 3, data[6])) ? 
                        0.0074404534f : 
                        0.0304031f))) : 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT14, 50, 0, data[6])) ? 
                 (data[11 /* longest_credit_length */] <12.5f ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <29688.5f ? 
                        0.0048179505f : 
                        0.0495906f) : 
                     (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <22.5f ? 
                        -0.0060085417f : 
                        0.0078490125f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[5])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <62.617188f ? 
                        0.0018569073f : 
                        0.009584202f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                        0.01713878f : 
                        0.09154022f)))));
    return pred;
  } // constant pool size = 242B, number of visited nodes = 31, static init size = 708B
  // {00110100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {44, 0, 0, 0};
  // {01110001 10101011 11001100 11111101 00101010 11001101 01}
  public static final byte[] GRPSPLIT1 = new byte[] {-114, -43, 51, -65, 84, -77, 2};
  // {00000100 10010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {32, 9, 0, 0};
  // {00000000 00010000 00010000 00000000 01010000 00000000 10}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 8, 8, 0, 10, 0, 1};
  // {...1 0-bits... 10100011 00000100 00010000 00001000 00000101 00001010 0}
  public static final byte[] GRPSPLIT4 = new byte[] {-59, 32, 8, 16, -96, 80, 0};
  // {00000010 01000010 00110011 11011011 11110110 00100010 00}
  public static final byte[] GRPSPLIT5 = new byte[] {64, 66, -52, -37, 111, 68, 0};
  // {01111110 11100011 11111111 11011111 11111111 01111011 10}
  public static final byte[] GRPSPLIT6 = new byte[] {126, -57, -1, -5, -1, -34, 1};
  // {11000010 00001000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {67, 16, 0, 0};
  // {...6 0-bits... 11101111 11111011 01111111 10010110 01111111 1}
  public static final byte[] GRPSPLIT8 = new byte[] {-9, -33, -2, 105, -2, 1};
  // {00010100 01010101 01000001 00001000 10000001 11000100 00}
  public static final byte[] GRPSPLIT9 = new byte[] {40, -86, -126, 16, -127, 35, 0};
  // {00001011 00000000 10000000 11000010 01011000 00111010 00}
  public static final byte[] GRPSPLIT10 = new byte[] {-48, 0, 1, 67, 26, 92, 0};
  // {10011001 00101000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-103, 20, 0, 0};
  // {...3 0-bits... 00000000 00001000 00000000 00000100 00001010 001}
  public static final byte[] GRPSPLIT12 = new byte[] {0, 16, 0, 32, 80, 4};
  // {...3 0-bits... 10000000 10100010 00001000 00000000 00000100 000}
  public static final byte[] GRPSPLIT13 = new byte[] {1, 69, 16, 0, 32, 0};
  // {11101000 10100011 10111000 10000011 00010010 01111010 10}
  public static final byte[] GRPSPLIT14 = new byte[] {23, -59, 29, -63, 72, 94, 1};
  // {00000000 11011100 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {0, 59, 0, 0};
  // {00000000 10000000 00100000 00000000 00000000 01010000 10}
  public static final byte[] GRPSPLIT16 = new byte[] {0, 1, 4, 0, 0, 10, 1};
}


class AtrociousLoanModel_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_94_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
         (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
             (data[0 /* loan_amnt */] <3060.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (data[9 /* revol_util */] <26.835938f ? 
                        -0.020858362f : 
                        -0.047525898f) : 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <20.619844f ? 
                        -0.0065538045f : 
                        -0.031627953f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <36.55336f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <18.847826f ? 
                        -0.007280476f : 
                        -5.824603E-4f) : 
                     (data[7 /* dti */] <38.432774f ? 
                        -0.06895276f : 
                        -0.06431454f))) : 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <29475.5f ? 
                 (Double.isNaN(data[10]) || data[10 /* total_acc */] <49.0f ? 
                     (data[4 /* annual_inc */] <41375.0f ? 
                        0.006756619f : 
                        -0.0022715265f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(46, 2, data[6]) || (GenModel.bitSetIsInRange(46, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 46, 2, data[6])) ? 
                        -0.035360817f : 
                        0.01029699f)) : 
                 (data[2 /* emp_length */] <7.5f ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <89.99062f ? 
                        0.02498502f : 
                        0.09310438f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(46, 2, data[6]) || (GenModel.bitSetIsInRange(46, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 46, 2, data[6])) ? 
                        -0.019703647f : 
                        0.031066708f)))) : 
         (data[7 /* dti */] <10.231816f ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <9.5f ? 
                     (Double.isNaN(data[4]) || data[4 /* annual_inc */] <130859.375f ? 
                        -0.0027687014f : 
                        0.044768013f) : 
                     (data[10 /* total_acc */] <10.0f ? 
                        0.005851466f : 
                        -0.012116472f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <78.85313f ? 
                     (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT6, 32, 0, data[3])) ? 
                        -0.006687045f : 
                        0.0029931737f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(43, 1, data[6]) || (GenModel.bitSetIsInRange(43, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 43, 1, data[6])) ? 
                        0.0048818686f : 
                        0.03153912f))) : 
             (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <0.5f ? 
                 (data[9 /* revol_util */] <48.525f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.0032943455f : 
                        0.006049984f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        9.462117E-4f : 
                        0.0062694675f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        -0.005612875f : 
                        0.003873714f) : 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28532.5f ? 
                        0.010262519f : 
                        0.028941914f)))));
    return pred;
  } // constant pool size = 210B, number of visited nodes = 31, static init size = 504B
  // {00111111 11111100 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-4, 63, 0, 0};
  // {00100010 11010111 00000010 00100011 01000000 11000011 00}
  public static final byte[] GRPSPLIT1 = new byte[] {68, -21, 64, -60, 2, -61, 0};
  // {00001100 00000000 00010001 10000000 10001000 00101000 00}
  public static final byte[] GRPSPLIT2 = new byte[] {48, 0, -120, 1, 17, 20, 0};
  // {...2 0-bits... 10001000 01000100 00000000 00000100 00000010 000000}
  public static final byte[] GRPSPLIT3 = new byte[] {17, 34, 0, 32, 64, 0};
  // {...2 0-bits... 00001010 00001100 00000000 00001000 00000000 000001}
  public static final byte[] GRPSPLIT4 = new byte[] {80, 48, 0, 16, 0, 32};
  // {01111000 10101011 00101011 11001001 11111111 01110000 00}
  public static final byte[] GRPSPLIT5 = new byte[] {30, -43, -44, -109, -1, 14, 0};
  // {00011100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT6 = new byte[] {56, 0, 0, 0};
  // {...1 0-bits... 01000000 01000000 00000000 00010010 00000110 100}
  public static final byte[] GRPSPLIT7 = new byte[] {2, 2, 0, 72, 96, 1};
  // {10000000 00000001 01000001 00011010 10000010 10011100 00}
  public static final byte[] GRPSPLIT8 = new byte[] {1, -128, -126, 88, 65, 57, 0};
  // {00011111 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-8, 14, 0, 0};
  // {01000000 00000001 10011000 00010110 00111000 01110101 10}
  public static final byte[] GRPSPLIT10 = new byte[] {2, -128, 25, 104, 28, -82, 1};
  // {00001110 01010010 00000011 11000000 01000110 00001000 00}
  public static final byte[] GRPSPLIT11 = new byte[] {112, 74, -64, 3, 98, 16, 0};
}


class AtrociousLoanModel_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_95_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <64648.87f ? 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <14583.5f ? 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (data[2 /* emp_length */] <8.5f ? 
                        -0.021988029f : 
                        -0.005960145f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                        -0.0029151747f : 
                        0.009542493f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <1.0007813f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        0.004631865f : 
                        0.05300091f) : 
                     (data[9 /* revol_util */] <11.716333f ? 
                        -0.01052556f : 
                        0.0013589208f))) : 
             (data[0 /* loan_amnt */] <14743.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        -0.06432564f : 
                        0.022746941f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                        0.07372985f : 
                        0.13434215f)) : 
                 (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <25.5f ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <36.14125f ? 
                        0.0048936517f : 
                        -0.05510686f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.014233346f : 
                        0.025242103f)))) : 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <28060.5f ? 
             (data[10 /* total_acc */] <17.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                     (data[2 /* emp_length */] <3.5f ? 
                        -0.0056106425f : 
                        0.003523794f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        0.008490032f : 
                        0.036266275f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <95.02812f ? 
                        -0.0060607097f : 
                        0.0065532452f) : 
                     (data[7 /* dti */] <11.1796875f ? 
                        -0.007602992f : 
                        0.0015323708f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                 (data[0 /* loan_amnt */] <28494.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 50, 0, data[6])) ? 
                        -0.008244503f : 
                        0.079087585f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -0.017264307f : 
                        -9.8438904E-5f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <22.359375f ? 
                     (Double.isNaN(data[12 /* verification_status */]) || !GenModel.bitSetIsInRange(32, 0, data[12]) || (GenModel.bitSetIsInRange(32, 0, data[12]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[12])) ? 
                        0.004570402f : 
                        0.08307054f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(47, 2, data[6]) && !GenModel.bitSetContains(GRPSPLIT15, 47, 2, data[6])) ? 
                        5.257861E-4f : 
                        0.027093958f)))));
    return pred;
  } // constant pool size = 244B, number of visited nodes = 31, static init size = 708B
  // {00111111 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-4, 31, 0, 0};
  // {00111110 11101111 10101011 10001111 01111010 01101011 10}
  public static final byte[] GRPSPLIT1 = new byte[] {124, -9, -43, -15, 94, -42, 1};
  // {00100010 10000101 00000000 00000000 00001000 01000001 10}
  public static final byte[] GRPSPLIT2 = new byte[] {68, -95, 0, 0, 16, -126, 1};
  // {00000000 01010000 01000010 01100010 00010000 00110101 00}
  public static final byte[] GRPSPLIT3 = new byte[] {0, 10, 66, 70, 8, -84, 0};
  // {01000010 00001011 01010000 00010100 10011101 00100000 00}
  public static final byte[] GRPSPLIT4 = new byte[] {66, -48, 10, 40, -71, 4, 0};
  // {01101110 11101111 01010101 01111111 11111111 01111111 11}
  public static final byte[] GRPSPLIT5 = new byte[] {118, -9, -86, -2, -1, -2, 3};
  // {11111111 11111100 10111111 11101111 11111010 11011111 11}
  public static final byte[] GRPSPLIT6 = new byte[] {-1, 63, -3, -9, 95, -5, 3};
  // {01000001 10000000 00001000 00100100 00000111 01011100 00}
  public static final byte[] GRPSPLIT7 = new byte[] {-126, 1, 16, 36, -32, 58, 0};
  // {01000000 10010000 00000010 00010000 00110000 01000011 01}
  public static final byte[] GRPSPLIT8 = new byte[] {2, 9, 64, 8, 12, -62, 2};
  // {00000101 01010100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-96, 42, 0, 0};
  // {01010001 11000001 11000010 01101110 11000100 11000000 00}
  public static final byte[] GRPSPLIT10 = new byte[] {-118, -125, 67, 118, 35, 3, 0};
  // {00100111 00111100 00101110 11101100 01111111 10111001 10}
  public static final byte[] GRPSPLIT11 = new byte[] {-28, 60, 116, 55, -2, -99, 1};
  // {10001000 00000000 11000000 00000010 10000000 00000000 00}
  public static final byte[] GRPSPLIT12 = new byte[] {17, 0, 3, 64, 1, 0, 0};
  // {01111111 01111111 10111110 11111111 11111111 11111011 10}
  public static final byte[] GRPSPLIT13 = new byte[] {-2, -2, 125, -1, -1, -33, 1};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {1, 0, 0, 0};
  // {...2 0-bits... 01100011 11111111 01110111 01111111 11101011 1011101}
  public static final byte[] GRPSPLIT15 = new byte[] {-58, -1, -18, -2, -41, 93};
}


class AtrociousLoanModel_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_96_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* annual_inc */] <50703.79f ? 
         (data[0 /* loan_amnt */] <7508.5f ? 
             (Double.isNaN(data[11]) || data[11 /* longest_credit_length */] <42.5f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.030272925f : 
                        -0.006744208f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        -0.0049675303f : 
                        0.002380782f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                        -0.06543126f : 
                        0.038487088f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT5, 50, 0, data[6])) ? 
                        0.10222544f : 
                        0.2420619f))) : 
             (data[11 /* longest_credit_length */] <6.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <11388.5f ? 
                        -9.4721647E-4f : 
                        0.012782636f) : 
                     (data[2 /* emp_length */] <4.5f ? 
                        0.013389785f : 
                        0.042657316f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT7, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.0035641652f : 
                        0.0030769943f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                        -0.0029355627f : 
                        0.021952312f)))) : 
         (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <23276.5f ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT10, 50, 0, data[6])) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT11, 32, 0, data[5])) ? 
                     (Double.isNaN(data[3 /* home_ownership */]) || !GenModel.bitSetIsInRange(32, 0, data[3]) || (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT12, 32, 0, data[3])) ? 
                        -0.0057348288f : 
                        -0.0016504431f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 50, 0, data[6])) ? 
                        -5.8804505E-4f : 
                        0.015609477f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT14, 32, 0, data[5])) ? 
                     (data[0 /* loan_amnt */] <6906.5f ? 
                        -0.008417425f : 
                        0.0019862244f) : 
                     (Double.isNaN(data[1 /* term */]) || !GenModel.bitSetIsInRange(32, 0, data[1]) || (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT15, 32, 0, data[1])) ? 
                        0.007888639f : 
                        0.045478325f))) : 
             (Double.isNaN(data[7]) || data[7 /* dti */] <27.4175f ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT16, 50, 0, data[6])) ? 
                     (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <34818.5f ? 
                        -0.008297006f : 
                        0.008125218f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT17, 32, 0, data[5])) ? 
                        0.0031150808f : 
                        0.01416976f)) : 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT18, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT19, 50, 0, data[6])) ? 
                        -0.03786538f : 
                        0.0060295267f) : 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
                        0.025730725f : 
                        0.10346938f)))));
    return pred;
  } // constant pool size = 265B, number of visited nodes = 31, static init size = 834B
  // {11101111 01100111 11011010 10001011 11001110 01101001 00}
  public static final byte[] GRPSPLIT0 = new byte[] {-9, -26, 91, -47, 115, -106, 0};
  // {11111111 11110111 11111011 11011111 11111111 01111111 00}
  public static final byte[] GRPSPLIT1 = new byte[] {-1, -17, -33, -5, -1, -2, 0};
  // {10111101 01111000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {-67, 30, 0, 0};
  // {00110110 00100001 00010011 10010000 01100000 00100010 00}
  public static final byte[] GRPSPLIT3 = new byte[] {108, -124, -56, 9, 6, 68, 0};
  // {00001000 01000000 00000000 00000000 00000000 00000000 00}
  public static final byte[] GRPSPLIT4 = new byte[] {16, 2, 0, 0, 0, 0, 0};
  // {00000110 00000000 00000011 00000000 01100000 00000010 00}
  public static final byte[] GRPSPLIT5 = new byte[] {96, 0, -64, 0, 6, 64, 0};
  // {00000000 00011001 01111001 01100000 01110111 11011111 10}
  public static final byte[] GRPSPLIT6 = new byte[] {0, -104, -98, 6, -18, -5, 1};
  // {00001000 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT7 = new byte[] {16, 31, 0, 0};
  // {01111110 01100100 00111101 10011011 11111000 01001010 01}
  public static final byte[] GRPSPLIT8 = new byte[] {126, 38, -68, -39, 31, 82, 2};
  // {00001001 10000011 00101001 00010010 10100111 10110010 01}
  public static final byte[] GRPSPLIT9 = new byte[] {-112, -63, -108, 72, -27, 77, 2};
  // {00010010 00010001 10001010 01011110 10000000 11000101 00}
  public static final byte[] GRPSPLIT10 = new byte[] {72, -120, 81, 122, 1, -93, 0};
  // {00000101 00011000 00000000 00000000}
  public static final byte[] GRPSPLIT11 = new byte[] {-96, 24, 0, 0};
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT12 = new byte[] {48, 0, 0, 0};
  // {00100100 11100000 01000000 00000000 00001110 00010000 11}
  public static final byte[] GRPSPLIT13 = new byte[] {36, 7, 2, 0, 112, 8, 3};
  // {00010011 10000000 00000000 00000000}
  public static final byte[] GRPSPLIT14 = new byte[] {-56, 1, 0, 0};
  // {01000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT15 = new byte[] {2, 0, 0, 0};
  // {01111011 11101010 00010111 01101100 11110101 10110010 00}
  public static final byte[] GRPSPLIT16 = new byte[] {-34, 87, -24, 54, -81, 77, 0};
  // {10010001 01010000 00000000 00000000}
  public static final byte[] GRPSPLIT17 = new byte[] {-119, 10, 0, 0};
  // {11100000 00111100 11101100 11101101 01101010 01011001 11}
  public static final byte[] GRPSPLIT18 = new byte[] {7, 60, 55, -73, 86, -102, 3};
  // {11111100 01111111 11111100 11111111 11111111 01111011 11}
  public static final byte[] GRPSPLIT19 = new byte[] {63, -2, 63, -1, -1, -34, 3};
}


class AtrociousLoanModel_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_97_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <1.5f ? 
         (data[4 /* annual_inc */] <99511.58f ? 
             (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <20041.5f ? 
                 (data[9 /* revol_util */] <20.015625f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT0, 50, 0, data[6])) ? 
                        -0.010029713f : 
                        0.0044829673f) : 
                     (data[4 /* annual_inc */] <49174.875f ? 
                        0.0019240389f : 
                        -0.0012570308f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <92.07188f ? 
                        -0.009223307f : 
                        0.024439767f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                        0.004662228f : 
                        0.016842239f))) : 
             (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT3, 32, 0, data[5])) ? 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 50, 0, data[6])) ? 
                     (!Double.isNaN(data[1 /* term */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[1])) ? 
                        -0.0258954f : 
                        -0.019556079f) : 
                     (data[7 /* dti */] <6.8732815f ? 
                        -0.026939556f : 
                        -0.0010316548f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <23.119219f ? 
                        -0.011082759f : 
                        -0.027525017f) : 
                     (data[10 /* total_acc */] <24.5f ? 
                        0.003985397f : 
                        -0.0037511021f)))) : 
         (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
             (data[7 /* dti */] <0.3124219f ? 
                0.14120665f : 
                 (Double.isNaN(data[2]) || data[2 /* emp_length */] <2.5f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT8, 50, 0, data[6])) ? 
                        -0.017544236f : 
                        0.015808247f) : 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT9, 32, 0, data[5])) ? 
                        -0.029421063f : 
                        -0.0021651713f))) : 
             (Double.isNaN(data[7]) || data[7 /* dti */] <22.338163f ? 
                 (Double.isNaN(data[4]) || data[4 /* annual_inc */] <288150.0f ? 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                        0.0069481153f : 
                        0.039607003f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(46, 3, data[6]) || (GenModel.bitSetIsInRange(46, 3, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 46, 3, data[6])) ? 
                        -0.02886368f : 
                        0.21693505f)) : 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <29.604969f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(46, 3, data[6]) || (GenModel.bitSetIsInRange(46, 3, data[6]) && !GenModel.bitSetContains(GRPSPLIT12, 46, 3, data[6])) ? 
                        0.03367599f : 
                        0.09135191f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(46, 3, data[6]) || (GenModel.bitSetIsInRange(46, 3, data[6]) && !GenModel.bitSetContains(GRPSPLIT13, 46, 3, data[6])) ? 
                        -0.027896553f : 
                        0.045441326f)))));
    return pred;
  } // constant pool size = 208B, number of visited nodes = 28, static init size = 564B
  // {10100000 00000000 01100010 11011000 10011010 01100000 11}
  public static final byte[] GRPSPLIT0 = new byte[] {5, 0, 70, 27, 89, 6, 3};
  // {01011011 11101110 01110111 11011011 11100101 10111011 10}
  public static final byte[] GRPSPLIT1 = new byte[] {-38, 119, -18, -37, -89, -35, 1};
  // {10011000 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {25, 12, 0, 0};
  // {10111001 01011100 00000000 00000000}
  public static final byte[] GRPSPLIT3 = new byte[] {-99, 58, 0, 0};
  // {01001011 01110000 10111010 00000111 10101000 00100110 11}
  public static final byte[] GRPSPLIT4 = new byte[] {-46, 14, 93, -32, 21, 100, 3};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {1, 0, 0, 0};
  // {00111000 01101011 10111100 11111100 11111101 11111011 01}
  public static final byte[] GRPSPLIT6 = new byte[] {28, -42, 61, 63, -65, -33, 2};
  // {00010010 00100000 01101011 01100100 00010111 01111000 10}
  public static final byte[] GRPSPLIT7 = new byte[] {72, 4, -42, 38, -24, 30, 1};
  // {01011111 01110011 01111111 01111100 11111111 01111101 10}
  public static final byte[] GRPSPLIT8 = new byte[] {-6, -50, -2, 62, -1, -66, 1};
  // {11111011 10010100 00000000 00000000}
  public static final byte[] GRPSPLIT9 = new byte[] {-33, 41, 0, 0};
  // {00000100 01001000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {32, 18, 0, 0};
  // {...3 0-bits... 11111111 11111111 11111111 11111111 11001110 011111}
  public static final byte[] GRPSPLIT11 = new byte[] {-1, -1, -1, -1, 115, 62};
  // {...3 0-bits... 00000000 00000001 00000011 00100000 00001010 000000}
  public static final byte[] GRPSPLIT12 = new byte[] {0, -128, -64, 4, 80, 0};
  // {...3 0-bits... 00000000 00000000 01001010 00100000 00011000 110000}
  public static final byte[] GRPSPLIT13 = new byte[] {0, 0, 82, 4, 24, 3};
}


class AtrociousLoanModel_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_98_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* dti */] <34.952198f ? 
         (Double.isNaN(data[7]) || data[7 /* dti */] <34.133007f ? 
             (data[9 /* revol_util */] <85.42422f ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[5])) ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                        -0.0031489558f : 
                        2.6528284E-4f) : 
                     (data[0 /* loan_amnt */] <4273.5f ? 
                        -0.003928283f : 
                        0.0040831203f)) : 
                 (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT2, 50, 0, data[6])) ? 
                     (data[11 /* longest_credit_length */] <9.5f ? 
                        -0.0089233145f : 
                        7.600916E-4f) : 
                     (data[0 /* loan_amnt */] <7508.5f ? 
                        2.7050928E-4f : 
                        0.008528103f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                 (Double.isNaN(data[7]) || data[7 /* dti */] <34.934044f ? 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(49, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 49, 0, data[6])) ? 
                        -0.023561023f : 
                        0.01673417f) : 
                    0.11333016f) : 
                 (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                     (data[2 /* emp_length */] <8.5f ? 
                        -0.04098171f : 
                        0.077643305f) : 
                     (Double.isNaN(data[10]) || data[10 /* total_acc */] <36.5f ? 
                        0.10961441f : 
                        0.035464592f)))) : 
         (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
             (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                 (!Double.isNaN(data[1 /* term */]) && (GenModel.bitSetIsInRange(32, 0, data[1]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[1])) ? 
                     (data[9 /* revol_util */] <63.689064f ? 
                        -0.069193296f : 
                        -0.072908804f) : 
                     (data[9 /* revol_util */] <57.623436f ? 
                        -0.06067358f : 
                        -0.065197505f)) : 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <85.92969f ? 
                     (data[11 /* longest_credit_length */] <8.5f ? 
                        0.01567646f : 
                        -0.03697961f) : 
                    -0.0742872f)) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                 (Double.isNaN(data[9]) || data[9 /* revol_util */] <79.86406f ? 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <66.3708f ? 
                        -0.0012405325f : 
                        0.057266045f) : 
                    -0.051695906f) : 
                0.08770367f)));
    return pred;
  } // constant pool size = 173B, number of visited nodes = 25, static init size = 426B
  // {00011001 11111000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {-104, 31, 0, 0};
  // {00011000 01000101 01110001 00000010 11110010 11000001 00}
  public static final byte[] GRPSPLIT1 = new byte[] {24, -94, -114, 64, 79, -125, 0};
  // {11000010 11100111 00001110 11011100 01001111 01101110 10}
  public static final byte[] GRPSPLIT2 = new byte[] {67, -25, 112, 59, -14, 118, 1};
  // {00100000 10110000 01110010 01000010 00000010 00010100 00}
  public static final byte[] GRPSPLIT3 = new byte[] {4, 13, 78, 66, 64, 40, 0};
  // {00111101 10111110 01111111 01001010 11101111 11110101 1}
  public static final byte[] GRPSPLIT4 = new byte[] {-68, 125, -2, 82, -9, -81, 1};
  // {10111111 10110100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {-3, 45, 0, 0};
  // {01100000 10010010 11011000 01000011 10000100 01101000 00}
  public static final byte[] GRPSPLIT6 = new byte[] {6, 73, 27, -62, 33, 22, 0};
  // {11111111 11111110 11011111 01101011 11101100 01101101 00}
  public static final byte[] GRPSPLIT7 = new byte[] {-1, 127, -5, -42, 55, -74, 0};
  // {10000000 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {1, 0, 0, 0};
  // {00000000 10000000 01000000 01000001 00000000 01000000 00}
  public static final byte[] GRPSPLIT9 = new byte[] {0, 1, 2, -126, 0, 2, 0};
}


class AtrociousLoanModel_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += AtrociousLoanModel_Tree_99_class_0.score0(fdata);
  }
}
class AtrociousLoanModel_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* dti */] <8.982129f ? 
         (!Double.isNaN(data[3 /* home_ownership */]) && (GenModel.bitSetIsInRange(32, 0, data[3]) && !GenModel.bitSetContains(GRPSPLIT0, 32, 0, data[3])) ? 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT1, 50, 0, data[6])) ? 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT2, 32, 0, data[5])) ? 
                     (Double.isNaN(data[8]) || data[8 /* delinq_2yrs */] <4.5f ? 
                        -0.011688494f : 
                        0.050904606f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT3, 50, 0, data[6])) ? 
                        -0.0288237f : 
                        0.022956287f)) : 
                 (data[9 /* revol_util */] <45.492188f ? 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(49, 1, data[6]) || (GenModel.bitSetIsInRange(49, 1, data[6]) && !GenModel.bitSetContains(GRPSPLIT4, 49, 1, data[6])) ? 
                        -0.008235275f : 
                        0.11014861f) : 
                     (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT5, 32, 0, data[5])) ? 
                        0.008698467f : 
                        0.03764255f))) : 
             (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT6, 50, 0, data[6])) ? 
                 (data[10 /* total_acc */] <12.5f ? 
                     (data[2 /* emp_length */] <4.5f ? 
                        -0.0032132247f : 
                        0.011751261f) : 
                     (!Double.isNaN(data[6 /* addr_state */]) && (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT7, 50, 0, data[6])) ? 
                        -0.013122204f : 
                        2.6372884E-4f)) : 
                 (Double.isNaN(data[0]) || data[0 /* loan_amnt */] <24219.5f ? 
                     (!Double.isNaN(data[5 /* purpose */]) && (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT8, 32, 0, data[5])) ? 
                        -0.0011274393f : 
                        0.021074498f) : 
                     (data[0 /* loan_amnt */] <28599.5f ? 
                        0.08339826f : 
                        0.02662362f)))) : 
         (!Double.isNaN(data[2]) ? 
             (data[0 /* loan_amnt */] <1982.5f ? 
                 (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT9, 50, 0, data[6])) ? 
                     (Double.isNaN(data[7]) || data[7 /* dti */] <21.58375f ? 
                        -0.018717714f : 
                        -0.04142156f) : 
                     (Double.isNaN(data[9]) || data[9 /* revol_util */] <58.634377f ? 
                        0.012391789f : 
                        -0.009457861f)) : 
                 (Double.isNaN(data[5 /* purpose */]) || !GenModel.bitSetIsInRange(32, 0, data[5]) || (GenModel.bitSetIsInRange(32, 0, data[5]) && !GenModel.bitSetContains(GRPSPLIT10, 32, 0, data[5])) ? 
                     (data[11 /* longest_credit_length */] <6.5f ? 
                        0.005519711f : 
                        -3.088928E-4f) : 
                     (Double.isNaN(data[6 /* addr_state */]) || !GenModel.bitSetIsInRange(50, 0, data[6]) || (GenModel.bitSetIsInRange(50, 0, data[6]) && !GenModel.bitSetContains(GRPSPLIT11, 50, 0, data[6])) ? 
                        0.0015313459f : 
                        0.014258612f))) : 
            0.007075572f));
    return pred;
  } // constant pool size = 177B, number of visited nodes = 24, static init size = 486B
  // {00001100 00000000 00000000 00000000}
  public static final byte[] GRPSPLIT0 = new byte[] {48, 0, 0, 0};
  // {01100000 10001010 00000010 01001101 00011011 01010000 01}
  public static final byte[] GRPSPLIT1 = new byte[] {6, 81, 64, -78, -40, 10, 2};
  // {00000000 00010000 00000000 00000000}
  public static final byte[] GRPSPLIT2 = new byte[] {0, 8, 0, 0};
  // {01101000 11101111 10011110 11101101 01111011 11111110 11}
  public static final byte[] GRPSPLIT3 = new byte[] {22, -9, 121, -73, -34, 127, 3};
  // {...1 0-bits... 00000000 00010000 00000000 10010000 00000000 00000000 1}
  public static final byte[] GRPSPLIT4 = new byte[] {0, 8, 0, 9, 0, 0, 1};
  // {00001100 00011100 00000000 00000000}
  public static final byte[] GRPSPLIT5 = new byte[] {48, 56, 0, 0};
  // {00100000 00100001 10100000 11001000 00010001 10110000 10}
  public static final byte[] GRPSPLIT6 = new byte[] {4, -124, 5, 19, -120, 13, 1};
  // {00011111 01000010 01001000 00000101 00101100 00001010 00}
  public static final byte[] GRPSPLIT7 = new byte[] {-8, 66, 18, -96, 52, 80, 0};
  // {00111001 00110000 00000000 00000000}
  public static final byte[] GRPSPLIT8 = new byte[] {-100, 12, 0, 0};
  // {01100100 10110000 00100010 10011101 11111110 00111000 10}
  public static final byte[] GRPSPLIT9 = new byte[] {38, 13, 68, -71, 127, 28, 1};
  // {00010000 01110000 00000000 00000000}
  public static final byte[] GRPSPLIT10 = new byte[] {8, 14, 0, 0};
  // {10000101 00000011 10001001 11011011 10010001 00010100 00}
  public static final byte[] GRPSPLIT11 = new byte[] {-95, -64, -111, -37, -119, 40, 0};
}


